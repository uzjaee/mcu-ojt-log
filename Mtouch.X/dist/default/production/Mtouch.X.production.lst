

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Apr 02 16:24:56 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text49,local,class=CODE,merge=1,delta=2
    70                           	psect	text50,local,class=CODE,merge=1,delta=2
    71                           	psect	text51,local,class=CODE,merge=1,delta=2
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	text53,local,class=CODE,merge=1,delta=2
    74                           	psect	text54,local,class=CODE,merge=1,delta=2
    75                           	psect	text55,local,class=CODE,merge=1,delta=2
    76                           	psect	text56,local,class=CODE,merge=1,delta=2
    77                           	psect	text57,local,class=CODE,merge=1,delta=2
    78                           	psect	text58,local,class=CODE,merge=1,delta=2
    79                           	psect	text59,local,class=CODE,merge=1,delta=2
    80                           	psect	text60,local,class=CODE,merge=1,delta=2
    81                           	psect	text61,local,class=CODE,merge=1,delta=2
    82                           	psect	text62,local,class=CODE,merge=1,delta=2
    83                           	psect	text63,local,class=CODE,merge=1,delta=2
    84                           	psect	text64,local,class=CODE,merge=1,delta=2
    85                           	psect	text65,local,class=CODE,merge=1,delta=2
    86                           	psect	text66,local,class=CODE,merge=1,delta=2
    87                           	psect	text67,local,class=CODE,merge=1,delta=2
    88                           	psect	text68,local,class=CODE,merge=1,delta=2
    89                           	psect	text69,local,class=CODE,merge=1,delta=2
    90                           	psect	text70,local,class=CODE,merge=1,delta=2
    91                           	psect	text71,local,class=CODE,merge=1,delta=2
    92                           	psect	text72,local,class=CODE,merge=1,delta=2
    93                           	psect	text73,local,class=CODE,merge=1,delta=2,group=1
    94                           	psect	text74,local,class=CODE,merge=1,delta=2
    95                           	psect	intentry,global,class=CODE,delta=2
    96                           	psect	text76,local,class=CODE,merge=1,delta=2
    97                           	psect	text77,local,class=CODE,merge=1,delta=2
    98                           	psect	text78,local,class=CODE,merge=1,delta=2
    99                           	psect	text79,local,class=CODE,merge=1,delta=2
   100                           	psect	text80,local,class=CODE,merge=1,delta=2
   101                           	psect	text81,local,class=CODE,merge=1,delta=2
   102                           	psect	text82,local,class=CODE,merge=1,delta=2
   103                           	psect	text83,local,class=CODE,merge=1,delta=2
   104                           	psect	text84,local,class=CODE,merge=1,delta=2
   105                           	psect	text85,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	text86,local,class=CODE,merge=1,delta=2
   107                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   108                           	psect	text88,local,class=CODE,merge=1,delta=2
   109                           	psect	text89,local,class=CODE,merge=1,delta=2
   110                           	psect	text90,local,class=CODE,merge=1,delta=2
   111                           	psect	text91,local,class=CODE,merge=1,delta=2
   112                           	psect	text92,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text93,local,class=CODE,merge=1,delta=2
   114                           	psect	text94,local,class=CODE,merge=1,delta=2
   115                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
   116                           	psect	text96,local,class=CODE,merge=1,delta=2
   117                           	psect	text97,local,class=CODE,merge=1,delta=2
   118                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   119                           	dabs	1,0x7E,2
   120     0000                     
   121                           ; Generated 11/01/2024 GMT
   122                           ; 
   123                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   124                           ; All rights reserved.
   125                           ; 
   126                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   127                           ; 
   128                           ; Redistribution and use in source and binary forms, with or without modification, are
   129                           ; permitted provided that the following conditions are met:
   130                           ; 
   131                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   132                           ;        conditions and the following disclaimer.
   133                           ; 
   134                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   135                           ;        of conditions and the following disclaimer in the documentation and/or other
   136                           ;        materials provided with the distribution. Publication is not required when
   137                           ;        this file is used in an embedded application.
   138                           ; 
   139                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   140                           ;        software without specific prior written permission.
   141                           ; 
   142                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   143                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   144                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   145                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   146                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   147                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   148                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   149                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   150                           ; 
   151                           ; 
   152                           ; Code-generator required, PIC16F18855 Definitions
   153                           ; 
   154                           ; SFR Addresses
   155     0000                     	;# 
   156     0001                     	;# 
   157     0002                     	;# 
   158     0003                     	;# 
   159     0004                     	;# 
   160     0005                     	;# 
   161     0006                     	;# 
   162     0007                     	;# 
   163     0008                     	;# 
   164     0009                     	;# 
   165     000A                     	;# 
   166     000B                     	;# 
   167     000C                     	;# 
   168     000D                     	;# 
   169     000E                     	;# 
   170     0010                     	;# 
   171     0011                     	;# 
   172     0012                     	;# 
   173     0013                     	;# 
   174     0016                     	;# 
   175     0017                     	;# 
   176     0018                     	;# 
   177     001C                     	;# 
   178     001C                     	;# 
   179     001D                     	;# 
   180     001D                     	;# 
   181     001E                     	;# 
   182     001F                     	;# 
   183     008C                     	;# 
   184     008C                     	;# 
   185     008D                     	;# 
   186     008E                     	;# 
   187     008E                     	;# 
   188     008F                     	;# 
   189     0090                     	;# 
   190     0090                     	;# 
   191     0091                     	;# 
   192     0093                     	;# 
   193     0094                     	;# 
   194     0095                     	;# 
   195     0096                     	;# 
   196     0097                     	;# 
   197     0098                     	;# 
   198     0099                     	;# 
   199     009A                     	;# 
   200     009B                     	;# 
   201     009C                     	;# 
   202     009D                     	;# 
   203     009E                     	;# 
   204     010C                     	;# 
   205     010D                     	;# 
   206     010E                     	;# 
   207     010E                     	;# 
   208     010F                     	;# 
   209     0110                     	;# 
   210     0110                     	;# 
   211     0111                     	;# 
   212     0112                     	;# 
   213     0112                     	;# 
   214     0113                     	;# 
   215     0114                     	;# 
   216     0114                     	;# 
   217     0115                     	;# 
   218     0116                     	;# 
   219     0116                     	;# 
   220     0117                     	;# 
   221     0119                     	;# 
   222     0119                     	;# 
   223     0119                     	;# 
   224     011A                     	;# 
   225     011A                     	;# 
   226     011A                     	;# 
   227     011B                     	;# 
   228     011B                     	;# 
   229     011B                     	;# 
   230     011B                     	;# 
   231     011B                     	;# 
   232     011C                     	;# 
   233     011C                     	;# 
   234     011C                     	;# 
   235     011D                     	;# 
   236     011D                     	;# 
   237     011D                     	;# 
   238     011E                     	;# 
   239     011E                     	;# 
   240     011E                     	;# 
   241     011F                     	;# 
   242     011F                     	;# 
   243     011F                     	;# 
   244     011F                     	;# 
   245     011F                     	;# 
   246     018C                     	;# 
   247     018D                     	;# 
   248     018E                     	;# 
   249     018F                     	;# 
   250     0190                     	;# 
   251     0191                     	;# 
   252     0192                     	;# 
   253     0196                     	;# 
   254     0197                     	;# 
   255     0198                     	;# 
   256     0199                     	;# 
   257     019A                     	;# 
   258     019B                     	;# 
   259     019C                     	;# 
   260     020C                     	;# 
   261     020C                     	;# 
   262     020D                     	;# 
   263     020E                     	;# 
   264     020F                     	;# 
   265     020F                     	;# 
   266     0210                     	;# 
   267     0210                     	;# 
   268     0211                     	;# 
   269     0211                     	;# 
   270     0212                     	;# 
   271     0212                     	;# 
   272     0213                     	;# 
   273     0214                     	;# 
   274     0215                     	;# 
   275     0215                     	;# 
   276     0216                     	;# 
   277     0216                     	;# 
   278     0217                     	;# 
   279     0217                     	;# 
   280     0218                     	;# 
   281     0218                     	;# 
   282     0219                     	;# 
   283     021A                     	;# 
   284     021B                     	;# 
   285     021B                     	;# 
   286     021C                     	;# 
   287     021C                     	;# 
   288     021D                     	;# 
   289     021D                     	;# 
   290     021E                     	;# 
   291     021F                     	;# 
   292     028C                     	;# 
   293     028C                     	;# 
   294     028D                     	;# 
   295     028D                     	;# 
   296     028E                     	;# 
   297     028F                     	;# 
   298     0290                     	;# 
   299     0290                     	;# 
   300     0291                     	;# 
   301     0292                     	;# 
   302     0292                     	;# 
   303     0293                     	;# 
   304     0293                     	;# 
   305     0294                     	;# 
   306     0295                     	;# 
   307     0296                     	;# 
   308     0296                     	;# 
   309     0297                     	;# 
   310     0298                     	;# 
   311     0298                     	;# 
   312     0299                     	;# 
   313     0299                     	;# 
   314     029A                     	;# 
   315     029B                     	;# 
   316     029C                     	;# 
   317     029C                     	;# 
   318     029D                     	;# 
   319     030C                     	;# 
   320     030C                     	;# 
   321     030D                     	;# 
   322     030E                     	;# 
   323     030F                     	;# 
   324     0310                     	;# 
   325     0310                     	;# 
   326     0311                     	;# 
   327     0312                     	;# 
   328     0313                     	;# 
   329     0314                     	;# 
   330     0314                     	;# 
   331     0315                     	;# 
   332     0316                     	;# 
   333     0317                     	;# 
   334     0318                     	;# 
   335     0318                     	;# 
   336     0319                     	;# 
   337     031A                     	;# 
   338     031B                     	;# 
   339     031C                     	;# 
   340     031C                     	;# 
   341     031D                     	;# 
   342     031E                     	;# 
   343     031F                     	;# 
   344     038C                     	;# 
   345     038C                     	;# 
   346     038D                     	;# 
   347     038E                     	;# 
   348     0390                     	;# 
   349     0390                     	;# 
   350     0391                     	;# 
   351     0392                     	;# 
   352     040C                     	;# 
   353     040D                     	;# 
   354     040E                     	;# 
   355     040F                     	;# 
   356     0410                     	;# 
   357     0411                     	;# 
   358     0416                     	;# 
   359     0416                     	;# 
   360     0417                     	;# 
   361     0418                     	;# 
   362     0418                     	;# 
   363     0419                     	;# 
   364     041A                     	;# 
   365     041A                     	;# 
   366     041B                     	;# 
   367     041C                     	;# 
   368     041C                     	;# 
   369     041D                     	;# 
   370     041E                     	;# 
   371     041F                     	;# 
   372     048C                     	;# 
   373     048C                     	;# 
   374     048D                     	;# 
   375     048E                     	;# 
   376     048F                     	;# 
   377     048F                     	;# 
   378     0490                     	;# 
   379     0491                     	;# 
   380     0492                     	;# 
   381     0492                     	;# 
   382     0493                     	;# 
   383     0494                     	;# 
   384     0495                     	;# 
   385     0495                     	;# 
   386     0496                     	;# 
   387     0497                     	;# 
   388     0498                     	;# 
   389     0499                     	;# 
   390     049A                     	;# 
   391     049B                     	;# 
   392     049C                     	;# 
   393     049D                     	;# 
   394     050C                     	;# 
   395     050C                     	;# 
   396     050D                     	;# 
   397     050E                     	;# 
   398     050F                     	;# 
   399     050F                     	;# 
   400     0510                     	;# 
   401     0511                     	;# 
   402     0512                     	;# 
   403     0512                     	;# 
   404     0513                     	;# 
   405     0514                     	;# 
   406     0515                     	;# 
   407     0515                     	;# 
   408     0516                     	;# 
   409     0517                     	;# 
   410     0518                     	;# 
   411     0519                     	;# 
   412     051A                     	;# 
   413     051B                     	;# 
   414     051C                     	;# 
   415     051D                     	;# 
   416     058C                     	;# 
   417     058C                     	;# 
   418     058D                     	;# 
   419     058E                     	;# 
   420     058F                     	;# 
   421     058F                     	;# 
   422     0590                     	;# 
   423     0591                     	;# 
   424     0592                     	;# 
   425     0593                     	;# 
   426     060C                     	;# 
   427     060D                     	;# 
   428     060E                     	;# 
   429     060F                     	;# 
   430     0610                     	;# 
   431     0611                     	;# 
   432     0612                     	;# 
   433     0613                     	;# 
   434     0614                     	;# 
   435     0616                     	;# 
   436     0617                     	;# 
   437     0618                     	;# 
   438     0619                     	;# 
   439     061A                     	;# 
   440     061B                     	;# 
   441     061C                     	;# 
   442     061D                     	;# 
   443     061E                     	;# 
   444     068C                     	;# 
   445     068D                     	;# 
   446     068E                     	;# 
   447     068F                     	;# 
   448     0690                     	;# 
   449     0691                     	;# 
   450     0692                     	;# 
   451     0693                     	;# 
   452     0694                     	;# 
   453     070C                     	;# 
   454     070D                     	;# 
   455     070E                     	;# 
   456     070F                     	;# 
   457     0710                     	;# 
   458     0711                     	;# 
   459     0712                     	;# 
   460     0713                     	;# 
   461     0714                     	;# 
   462     0716                     	;# 
   463     0717                     	;# 
   464     0718                     	;# 
   465     0719                     	;# 
   466     071A                     	;# 
   467     071B                     	;# 
   468     071C                     	;# 
   469     071D                     	;# 
   470     071E                     	;# 
   471     0796                     	;# 
   472     0797                     	;# 
   473     0798                     	;# 
   474     0799                     	;# 
   475     079A                     	;# 
   476     079B                     	;# 
   477     080C                     	;# 
   478     080D                     	;# 
   479     080E                     	;# 
   480     080F                     	;# 
   481     0810                     	;# 
   482     0811                     	;# 
   483     0812                     	;# 
   484     0813                     	;# 
   485     0814                     	;# 
   486     081A                     	;# 
   487     081B                     	;# 
   488     081C                     	;# 
   489     081D                     	;# 
   490     081E                     	;# 
   491     081F                     	;# 
   492     088C                     	;# 
   493     088D                     	;# 
   494     088E                     	;# 
   495     088F                     	;# 
   496     0890                     	;# 
   497     0891                     	;# 
   498     0892                     	;# 
   499     0893                     	;# 
   500     0895                     	;# 
   501     0896                     	;# 
   502     0897                     	;# 
   503     0898                     	;# 
   504     0899                     	;# 
   505     089A                     	;# 
   506     089B                     	;# 
   507     090C                     	;# 
   508     090E                     	;# 
   509     090F                     	;# 
   510     091F                     	;# 
   511     091F                     	;# 
   512     098F                     	;# 
   513     098F                     	;# 
   514     0990                     	;# 
   515     0991                     	;# 
   516     0992                     	;# 
   517     0993                     	;# 
   518     0994                     	;# 
   519     0995                     	;# 
   520     0996                     	;# 
   521     0997                     	;# 
   522     0E0F                     	;# 
   523     0E10                     	;# 
   524     0E11                     	;# 
   525     0E12                     	;# 
   526     0E13                     	;# 
   527     0E14                     	;# 
   528     0E15                     	;# 
   529     0E16                     	;# 
   530     0E17                     	;# 
   531     0E18                     	;# 
   532     0E19                     	;# 
   533     0E1A                     	;# 
   534     0E1B                     	;# 
   535     0E1C                     	;# 
   536     0E1D                     	;# 
   537     0E1E                     	;# 
   538     0E1F                     	;# 
   539     0E20                     	;# 
   540     0E21                     	;# 
   541     0E22                     	;# 
   542     0E23                     	;# 
   543     0E24                     	;# 
   544     0E25                     	;# 
   545     0E26                     	;# 
   546     0E27                     	;# 
   547     0E28                     	;# 
   548     0E29                     	;# 
   549     0E2A                     	;# 
   550     0E2B                     	;# 
   551     0E2C                     	;# 
   552     0E2D                     	;# 
   553     0E2E                     	;# 
   554     0E2F                     	;# 
   555     0E30                     	;# 
   556     0E31                     	;# 
   557     0E32                     	;# 
   558     0E33                     	;# 
   559     0E34                     	;# 
   560     0E35                     	;# 
   561     0E36                     	;# 
   562     0E37                     	;# 
   563     0E8F                     	;# 
   564     0E90                     	;# 
   565     0E91                     	;# 
   566     0E92                     	;# 
   567     0E93                     	;# 
   568     0E94                     	;# 
   569     0E95                     	;# 
   570     0E96                     	;# 
   571     0E97                     	;# 
   572     0E9C                     	;# 
   573     0E9D                     	;# 
   574     0E9E                     	;# 
   575     0EA1                     	;# 
   576     0EA2                     	;# 
   577     0EA3                     	;# 
   578     0EA4                     	;# 
   579     0EA5                     	;# 
   580     0EA9                     	;# 
   581     0EAA                     	;# 
   582     0EAB                     	;# 
   583     0EAC                     	;# 
   584     0EB1                     	;# 
   585     0EB2                     	;# 
   586     0EB3                     	;# 
   587     0EB8                     	;# 
   588     0EB9                     	;# 
   589     0EBA                     	;# 
   590     0EBB                     	;# 
   591     0EBC                     	;# 
   592     0EBD                     	;# 
   593     0EBE                     	;# 
   594     0EC3                     	;# 
   595     0EC5                     	;# 
   596     0EC6                     	;# 
   597     0EC7                     	;# 
   598     0EC8                     	;# 
   599     0EC9                     	;# 
   600     0ECA                     	;# 
   601     0ECB                     	;# 
   602     0ECC                     	;# 
   603     0F10                     	;# 
   604     0F11                     	;# 
   605     0F12                     	;# 
   606     0F13                     	;# 
   607     0F14                     	;# 
   608     0F15                     	;# 
   609     0F16                     	;# 
   610     0F17                     	;# 
   611     0F18                     	;# 
   612     0F19                     	;# 
   613     0F1A                     	;# 
   614     0F1B                     	;# 
   615     0F1C                     	;# 
   616     0F1D                     	;# 
   617     0F1E                     	;# 
   618     0F1F                     	;# 
   619     0F20                     	;# 
   620     0F21                     	;# 
   621     0F22                     	;# 
   622     0F23                     	;# 
   623     0F24                     	;# 
   624     0F25                     	;# 
   625     0F26                     	;# 
   626     0F27                     	;# 
   627     0F38                     	;# 
   628     0F39                     	;# 
   629     0F3A                     	;# 
   630     0F3B                     	;# 
   631     0F3C                     	;# 
   632     0F3D                     	;# 
   633     0F3E                     	;# 
   634     0F3F                     	;# 
   635     0F40                     	;# 
   636     0F41                     	;# 
   637     0F43                     	;# 
   638     0F44                     	;# 
   639     0F45                     	;# 
   640     0F46                     	;# 
   641     0F47                     	;# 
   642     0F48                     	;# 
   643     0F49                     	;# 
   644     0F4A                     	;# 
   645     0F4B                     	;# 
   646     0F4C                     	;# 
   647     0F4E                     	;# 
   648     0F4F                     	;# 
   649     0F50                     	;# 
   650     0F51                     	;# 
   651     0F52                     	;# 
   652     0F53                     	;# 
   653     0F54                     	;# 
   654     0F55                     	;# 
   655     0F56                     	;# 
   656     0F57                     	;# 
   657     0F65                     	;# 
   658     0F68                     	;# 
   659     0F69                     	;# 
   660     0F6A                     	;# 
   661     0F6B                     	;# 
   662     0FE4                     	;# 
   663     0FE5                     	;# 
   664     0FE6                     	;# 
   665     0FE7                     	;# 
   666     0FE8                     	;# 
   667     0FE9                     	;# 
   668     0FEA                     	;# 
   669     0FEB                     	;# 
   670     0FED                     	;# 
   671     0FEE                     	;# 
   672     0FEF                     	;# 
   673     0000                     	;# 
   674     0001                     	;# 
   675     0002                     	;# 
   676     0003                     	;# 
   677     0004                     	;# 
   678     0005                     	;# 
   679     0006                     	;# 
   680     0007                     	;# 
   681     0008                     	;# 
   682     0009                     	;# 
   683     000A                     	;# 
   684     000B                     	;# 
   685     000C                     	;# 
   686     000D                     	;# 
   687     000E                     	;# 
   688     0010                     	;# 
   689     0011                     	;# 
   690     0012                     	;# 
   691     0013                     	;# 
   692     0016                     	;# 
   693     0017                     	;# 
   694     0018                     	;# 
   695     001C                     	;# 
   696     001C                     	;# 
   697     001D                     	;# 
   698     001D                     	;# 
   699     001E                     	;# 
   700     001F                     	;# 
   701     008C                     	;# 
   702     008C                     	;# 
   703     008D                     	;# 
   704     008E                     	;# 
   705     008E                     	;# 
   706     008F                     	;# 
   707     0090                     	;# 
   708     0090                     	;# 
   709     0091                     	;# 
   710     0093                     	;# 
   711     0094                     	;# 
   712     0095                     	;# 
   713     0096                     	;# 
   714     0097                     	;# 
   715     0098                     	;# 
   716     0099                     	;# 
   717     009A                     	;# 
   718     009B                     	;# 
   719     009C                     	;# 
   720     009D                     	;# 
   721     009E                     	;# 
   722     010C                     	;# 
   723     010D                     	;# 
   724     010E                     	;# 
   725     010E                     	;# 
   726     010F                     	;# 
   727     0110                     	;# 
   728     0110                     	;# 
   729     0111                     	;# 
   730     0112                     	;# 
   731     0112                     	;# 
   732     0113                     	;# 
   733     0114                     	;# 
   734     0114                     	;# 
   735     0115                     	;# 
   736     0116                     	;# 
   737     0116                     	;# 
   738     0117                     	;# 
   739     0119                     	;# 
   740     0119                     	;# 
   741     0119                     	;# 
   742     011A                     	;# 
   743     011A                     	;# 
   744     011A                     	;# 
   745     011B                     	;# 
   746     011B                     	;# 
   747     011B                     	;# 
   748     011B                     	;# 
   749     011B                     	;# 
   750     011C                     	;# 
   751     011C                     	;# 
   752     011C                     	;# 
   753     011D                     	;# 
   754     011D                     	;# 
   755     011D                     	;# 
   756     011E                     	;# 
   757     011E                     	;# 
   758     011E                     	;# 
   759     011F                     	;# 
   760     011F                     	;# 
   761     011F                     	;# 
   762     011F                     	;# 
   763     011F                     	;# 
   764     018C                     	;# 
   765     018D                     	;# 
   766     018E                     	;# 
   767     018F                     	;# 
   768     0190                     	;# 
   769     0191                     	;# 
   770     0192                     	;# 
   771     0196                     	;# 
   772     0197                     	;# 
   773     0198                     	;# 
   774     0199                     	;# 
   775     019A                     	;# 
   776     019B                     	;# 
   777     019C                     	;# 
   778     020C                     	;# 
   779     020C                     	;# 
   780     020D                     	;# 
   781     020E                     	;# 
   782     020F                     	;# 
   783     020F                     	;# 
   784     0210                     	;# 
   785     0210                     	;# 
   786     0211                     	;# 
   787     0211                     	;# 
   788     0212                     	;# 
   789     0212                     	;# 
   790     0213                     	;# 
   791     0214                     	;# 
   792     0215                     	;# 
   793     0215                     	;# 
   794     0216                     	;# 
   795     0216                     	;# 
   796     0217                     	;# 
   797     0217                     	;# 
   798     0218                     	;# 
   799     0218                     	;# 
   800     0219                     	;# 
   801     021A                     	;# 
   802     021B                     	;# 
   803     021B                     	;# 
   804     021C                     	;# 
   805     021C                     	;# 
   806     021D                     	;# 
   807     021D                     	;# 
   808     021E                     	;# 
   809     021F                     	;# 
   810     028C                     	;# 
   811     028C                     	;# 
   812     028D                     	;# 
   813     028D                     	;# 
   814     028E                     	;# 
   815     028F                     	;# 
   816     0290                     	;# 
   817     0290                     	;# 
   818     0291                     	;# 
   819     0292                     	;# 
   820     0292                     	;# 
   821     0293                     	;# 
   822     0293                     	;# 
   823     0294                     	;# 
   824     0295                     	;# 
   825     0296                     	;# 
   826     0296                     	;# 
   827     0297                     	;# 
   828     0298                     	;# 
   829     0298                     	;# 
   830     0299                     	;# 
   831     0299                     	;# 
   832     029A                     	;# 
   833     029B                     	;# 
   834     029C                     	;# 
   835     029C                     	;# 
   836     029D                     	;# 
   837     030C                     	;# 
   838     030C                     	;# 
   839     030D                     	;# 
   840     030E                     	;# 
   841     030F                     	;# 
   842     0310                     	;# 
   843     0310                     	;# 
   844     0311                     	;# 
   845     0312                     	;# 
   846     0313                     	;# 
   847     0314                     	;# 
   848     0314                     	;# 
   849     0315                     	;# 
   850     0316                     	;# 
   851     0317                     	;# 
   852     0318                     	;# 
   853     0318                     	;# 
   854     0319                     	;# 
   855     031A                     	;# 
   856     031B                     	;# 
   857     031C                     	;# 
   858     031C                     	;# 
   859     031D                     	;# 
   860     031E                     	;# 
   861     031F                     	;# 
   862     038C                     	;# 
   863     038C                     	;# 
   864     038D                     	;# 
   865     038E                     	;# 
   866     0390                     	;# 
   867     0390                     	;# 
   868     0391                     	;# 
   869     0392                     	;# 
   870     040C                     	;# 
   871     040D                     	;# 
   872     040E                     	;# 
   873     040F                     	;# 
   874     0410                     	;# 
   875     0411                     	;# 
   876     0416                     	;# 
   877     0416                     	;# 
   878     0417                     	;# 
   879     0418                     	;# 
   880     0418                     	;# 
   881     0419                     	;# 
   882     041A                     	;# 
   883     041A                     	;# 
   884     041B                     	;# 
   885     041C                     	;# 
   886     041C                     	;# 
   887     041D                     	;# 
   888     041E                     	;# 
   889     041F                     	;# 
   890     048C                     	;# 
   891     048C                     	;# 
   892     048D                     	;# 
   893     048E                     	;# 
   894     048F                     	;# 
   895     048F                     	;# 
   896     0490                     	;# 
   897     0491                     	;# 
   898     0492                     	;# 
   899     0492                     	;# 
   900     0493                     	;# 
   901     0494                     	;# 
   902     0495                     	;# 
   903     0495                     	;# 
   904     0496                     	;# 
   905     0497                     	;# 
   906     0498                     	;# 
   907     0499                     	;# 
   908     049A                     	;# 
   909     049B                     	;# 
   910     049C                     	;# 
   911     049D                     	;# 
   912     050C                     	;# 
   913     050C                     	;# 
   914     050D                     	;# 
   915     050E                     	;# 
   916     050F                     	;# 
   917     050F                     	;# 
   918     0510                     	;# 
   919     0511                     	;# 
   920     0512                     	;# 
   921     0512                     	;# 
   922     0513                     	;# 
   923     0514                     	;# 
   924     0515                     	;# 
   925     0515                     	;# 
   926     0516                     	;# 
   927     0517                     	;# 
   928     0518                     	;# 
   929     0519                     	;# 
   930     051A                     	;# 
   931     051B                     	;# 
   932     051C                     	;# 
   933     051D                     	;# 
   934     058C                     	;# 
   935     058C                     	;# 
   936     058D                     	;# 
   937     058E                     	;# 
   938     058F                     	;# 
   939     058F                     	;# 
   940     0590                     	;# 
   941     0591                     	;# 
   942     0592                     	;# 
   943     0593                     	;# 
   944     060C                     	;# 
   945     060D                     	;# 
   946     060E                     	;# 
   947     060F                     	;# 
   948     0610                     	;# 
   949     0611                     	;# 
   950     0612                     	;# 
   951     0613                     	;# 
   952     0614                     	;# 
   953     0616                     	;# 
   954     0617                     	;# 
   955     0618                     	;# 
   956     0619                     	;# 
   957     061A                     	;# 
   958     061B                     	;# 
   959     061C                     	;# 
   960     061D                     	;# 
   961     061E                     	;# 
   962     068C                     	;# 
   963     068D                     	;# 
   964     068E                     	;# 
   965     068F                     	;# 
   966     0690                     	;# 
   967     0691                     	;# 
   968     0692                     	;# 
   969     0693                     	;# 
   970     0694                     	;# 
   971     070C                     	;# 
   972     070D                     	;# 
   973     070E                     	;# 
   974     070F                     	;# 
   975     0710                     	;# 
   976     0711                     	;# 
   977     0712                     	;# 
   978     0713                     	;# 
   979     0714                     	;# 
   980     0716                     	;# 
   981     0717                     	;# 
   982     0718                     	;# 
   983     0719                     	;# 
   984     071A                     	;# 
   985     071B                     	;# 
   986     071C                     	;# 
   987     071D                     	;# 
   988     071E                     	;# 
   989     0796                     	;# 
   990     0797                     	;# 
   991     0798                     	;# 
   992     0799                     	;# 
   993     079A                     	;# 
   994     079B                     	;# 
   995     080C                     	;# 
   996     080D                     	;# 
   997     080E                     	;# 
   998     080F                     	;# 
   999     0810                     	;# 
  1000     0811                     	;# 
  1001     0812                     	;# 
  1002     0813                     	;# 
  1003     0814                     	;# 
  1004     081A                     	;# 
  1005     081B                     	;# 
  1006     081C                     	;# 
  1007     081D                     	;# 
  1008     081E                     	;# 
  1009     081F                     	;# 
  1010     088C                     	;# 
  1011     088D                     	;# 
  1012     088E                     	;# 
  1013     088F                     	;# 
  1014     0890                     	;# 
  1015     0891                     	;# 
  1016     0892                     	;# 
  1017     0893                     	;# 
  1018     0895                     	;# 
  1019     0896                     	;# 
  1020     0897                     	;# 
  1021     0898                     	;# 
  1022     0899                     	;# 
  1023     089A                     	;# 
  1024     089B                     	;# 
  1025     090C                     	;# 
  1026     090E                     	;# 
  1027     090F                     	;# 
  1028     091F                     	;# 
  1029     091F                     	;# 
  1030     098F                     	;# 
  1031     098F                     	;# 
  1032     0990                     	;# 
  1033     0991                     	;# 
  1034     0992                     	;# 
  1035     0993                     	;# 
  1036     0994                     	;# 
  1037     0995                     	;# 
  1038     0996                     	;# 
  1039     0997                     	;# 
  1040     0E0F                     	;# 
  1041     0E10                     	;# 
  1042     0E11                     	;# 
  1043     0E12                     	;# 
  1044     0E13                     	;# 
  1045     0E14                     	;# 
  1046     0E15                     	;# 
  1047     0E16                     	;# 
  1048     0E17                     	;# 
  1049     0E18                     	;# 
  1050     0E19                     	;# 
  1051     0E1A                     	;# 
  1052     0E1B                     	;# 
  1053     0E1C                     	;# 
  1054     0E1D                     	;# 
  1055     0E1E                     	;# 
  1056     0E1F                     	;# 
  1057     0E20                     	;# 
  1058     0E21                     	;# 
  1059     0E22                     	;# 
  1060     0E23                     	;# 
  1061     0E24                     	;# 
  1062     0E25                     	;# 
  1063     0E26                     	;# 
  1064     0E27                     	;# 
  1065     0E28                     	;# 
  1066     0E29                     	;# 
  1067     0E2A                     	;# 
  1068     0E2B                     	;# 
  1069     0E2C                     	;# 
  1070     0E2D                     	;# 
  1071     0E2E                     	;# 
  1072     0E2F                     	;# 
  1073     0E30                     	;# 
  1074     0E31                     	;# 
  1075     0E32                     	;# 
  1076     0E33                     	;# 
  1077     0E34                     	;# 
  1078     0E35                     	;# 
  1079     0E36                     	;# 
  1080     0E37                     	;# 
  1081     0E8F                     	;# 
  1082     0E90                     	;# 
  1083     0E91                     	;# 
  1084     0E92                     	;# 
  1085     0E93                     	;# 
  1086     0E94                     	;# 
  1087     0E95                     	;# 
  1088     0E96                     	;# 
  1089     0E97                     	;# 
  1090     0E9C                     	;# 
  1091     0E9D                     	;# 
  1092     0E9E                     	;# 
  1093     0EA1                     	;# 
  1094     0EA2                     	;# 
  1095     0EA3                     	;# 
  1096     0EA4                     	;# 
  1097     0EA5                     	;# 
  1098     0EA9                     	;# 
  1099     0EAA                     	;# 
  1100     0EAB                     	;# 
  1101     0EAC                     	;# 
  1102     0EB1                     	;# 
  1103     0EB2                     	;# 
  1104     0EB3                     	;# 
  1105     0EB8                     	;# 
  1106     0EB9                     	;# 
  1107     0EBA                     	;# 
  1108     0EBB                     	;# 
  1109     0EBC                     	;# 
  1110     0EBD                     	;# 
  1111     0EBE                     	;# 
  1112     0EC3                     	;# 
  1113     0EC5                     	;# 
  1114     0EC6                     	;# 
  1115     0EC7                     	;# 
  1116     0EC8                     	;# 
  1117     0EC9                     	;# 
  1118     0ECA                     	;# 
  1119     0ECB                     	;# 
  1120     0ECC                     	;# 
  1121     0F10                     	;# 
  1122     0F11                     	;# 
  1123     0F12                     	;# 
  1124     0F13                     	;# 
  1125     0F14                     	;# 
  1126     0F15                     	;# 
  1127     0F16                     	;# 
  1128     0F17                     	;# 
  1129     0F18                     	;# 
  1130     0F19                     	;# 
  1131     0F1A                     	;# 
  1132     0F1B                     	;# 
  1133     0F1C                     	;# 
  1134     0F1D                     	;# 
  1135     0F1E                     	;# 
  1136     0F1F                     	;# 
  1137     0F20                     	;# 
  1138     0F21                     	;# 
  1139     0F22                     	;# 
  1140     0F23                     	;# 
  1141     0F24                     	;# 
  1142     0F25                     	;# 
  1143     0F26                     	;# 
  1144     0F27                     	;# 
  1145     0F38                     	;# 
  1146     0F39                     	;# 
  1147     0F3A                     	;# 
  1148     0F3B                     	;# 
  1149     0F3C                     	;# 
  1150     0F3D                     	;# 
  1151     0F3E                     	;# 
  1152     0F3F                     	;# 
  1153     0F40                     	;# 
  1154     0F41                     	;# 
  1155     0F43                     	;# 
  1156     0F44                     	;# 
  1157     0F45                     	;# 
  1158     0F46                     	;# 
  1159     0F47                     	;# 
  1160     0F48                     	;# 
  1161     0F49                     	;# 
  1162     0F4A                     	;# 
  1163     0F4B                     	;# 
  1164     0F4C                     	;# 
  1165     0F4E                     	;# 
  1166     0F4F                     	;# 
  1167     0F50                     	;# 
  1168     0F51                     	;# 
  1169     0F52                     	;# 
  1170     0F53                     	;# 
  1171     0F54                     	;# 
  1172     0F55                     	;# 
  1173     0F56                     	;# 
  1174     0F57                     	;# 
  1175     0F65                     	;# 
  1176     0F68                     	;# 
  1177     0F69                     	;# 
  1178     0F6A                     	;# 
  1179     0F6B                     	;# 
  1180     0FE4                     	;# 
  1181     0FE5                     	;# 
  1182     0FE6                     	;# 
  1183     0FE7                     	;# 
  1184     0FE8                     	;# 
  1185     0FE9                     	;# 
  1186     0FEA                     	;# 
  1187     0FEB                     	;# 
  1188     0FED                     	;# 
  1189     0FEE                     	;# 
  1190     0FEF                     	;# 
  1191     0000                     	;# 
  1192     0001                     	;# 
  1193     0002                     	;# 
  1194     0003                     	;# 
  1195     0004                     	;# 
  1196     0005                     	;# 
  1197     0006                     	;# 
  1198     0007                     	;# 
  1199     0008                     	;# 
  1200     0009                     	;# 
  1201     000A                     	;# 
  1202     000B                     	;# 
  1203     000C                     	;# 
  1204     000D                     	;# 
  1205     000E                     	;# 
  1206     0010                     	;# 
  1207     0011                     	;# 
  1208     0012                     	;# 
  1209     0013                     	;# 
  1210     0016                     	;# 
  1211     0017                     	;# 
  1212     0018                     	;# 
  1213     001C                     	;# 
  1214     001C                     	;# 
  1215     001D                     	;# 
  1216     001D                     	;# 
  1217     001E                     	;# 
  1218     001F                     	;# 
  1219     008C                     	;# 
  1220     008C                     	;# 
  1221     008D                     	;# 
  1222     008E                     	;# 
  1223     008E                     	;# 
  1224     008F                     	;# 
  1225     0090                     	;# 
  1226     0090                     	;# 
  1227     0091                     	;# 
  1228     0093                     	;# 
  1229     0094                     	;# 
  1230     0095                     	;# 
  1231     0096                     	;# 
  1232     0097                     	;# 
  1233     0098                     	;# 
  1234     0099                     	;# 
  1235     009A                     	;# 
  1236     009B                     	;# 
  1237     009C                     	;# 
  1238     009D                     	;# 
  1239     009E                     	;# 
  1240     010C                     	;# 
  1241     010D                     	;# 
  1242     010E                     	;# 
  1243     010E                     	;# 
  1244     010F                     	;# 
  1245     0110                     	;# 
  1246     0110                     	;# 
  1247     0111                     	;# 
  1248     0112                     	;# 
  1249     0112                     	;# 
  1250     0113                     	;# 
  1251     0114                     	;# 
  1252     0114                     	;# 
  1253     0115                     	;# 
  1254     0116                     	;# 
  1255     0116                     	;# 
  1256     0117                     	;# 
  1257     0119                     	;# 
  1258     0119                     	;# 
  1259     0119                     	;# 
  1260     011A                     	;# 
  1261     011A                     	;# 
  1262     011A                     	;# 
  1263     011B                     	;# 
  1264     011B                     	;# 
  1265     011B                     	;# 
  1266     011B                     	;# 
  1267     011B                     	;# 
  1268     011C                     	;# 
  1269     011C                     	;# 
  1270     011C                     	;# 
  1271     011D                     	;# 
  1272     011D                     	;# 
  1273     011D                     	;# 
  1274     011E                     	;# 
  1275     011E                     	;# 
  1276     011E                     	;# 
  1277     011F                     	;# 
  1278     011F                     	;# 
  1279     011F                     	;# 
  1280     011F                     	;# 
  1281     011F                     	;# 
  1282     018C                     	;# 
  1283     018D                     	;# 
  1284     018E                     	;# 
  1285     018F                     	;# 
  1286     0190                     	;# 
  1287     0191                     	;# 
  1288     0192                     	;# 
  1289     0196                     	;# 
  1290     0197                     	;# 
  1291     0198                     	;# 
  1292     0199                     	;# 
  1293     019A                     	;# 
  1294     019B                     	;# 
  1295     019C                     	;# 
  1296     020C                     	;# 
  1297     020C                     	;# 
  1298     020D                     	;# 
  1299     020E                     	;# 
  1300     020F                     	;# 
  1301     020F                     	;# 
  1302     0210                     	;# 
  1303     0210                     	;# 
  1304     0211                     	;# 
  1305     0211                     	;# 
  1306     0212                     	;# 
  1307     0212                     	;# 
  1308     0213                     	;# 
  1309     0214                     	;# 
  1310     0215                     	;# 
  1311     0215                     	;# 
  1312     0216                     	;# 
  1313     0216                     	;# 
  1314     0217                     	;# 
  1315     0217                     	;# 
  1316     0218                     	;# 
  1317     0218                     	;# 
  1318     0219                     	;# 
  1319     021A                     	;# 
  1320     021B                     	;# 
  1321     021B                     	;# 
  1322     021C                     	;# 
  1323     021C                     	;# 
  1324     021D                     	;# 
  1325     021D                     	;# 
  1326     021E                     	;# 
  1327     021F                     	;# 
  1328     028C                     	;# 
  1329     028C                     	;# 
  1330     028D                     	;# 
  1331     028D                     	;# 
  1332     028E                     	;# 
  1333     028F                     	;# 
  1334     0290                     	;# 
  1335     0290                     	;# 
  1336     0291                     	;# 
  1337     0292                     	;# 
  1338     0292                     	;# 
  1339     0293                     	;# 
  1340     0293                     	;# 
  1341     0294                     	;# 
  1342     0295                     	;# 
  1343     0296                     	;# 
  1344     0296                     	;# 
  1345     0297                     	;# 
  1346     0298                     	;# 
  1347     0298                     	;# 
  1348     0299                     	;# 
  1349     0299                     	;# 
  1350     029A                     	;# 
  1351     029B                     	;# 
  1352     029C                     	;# 
  1353     029C                     	;# 
  1354     029D                     	;# 
  1355     030C                     	;# 
  1356     030C                     	;# 
  1357     030D                     	;# 
  1358     030E                     	;# 
  1359     030F                     	;# 
  1360     0310                     	;# 
  1361     0310                     	;# 
  1362     0311                     	;# 
  1363     0312                     	;# 
  1364     0313                     	;# 
  1365     0314                     	;# 
  1366     0314                     	;# 
  1367     0315                     	;# 
  1368     0316                     	;# 
  1369     0317                     	;# 
  1370     0318                     	;# 
  1371     0318                     	;# 
  1372     0319                     	;# 
  1373     031A                     	;# 
  1374     031B                     	;# 
  1375     031C                     	;# 
  1376     031C                     	;# 
  1377     031D                     	;# 
  1378     031E                     	;# 
  1379     031F                     	;# 
  1380     038C                     	;# 
  1381     038C                     	;# 
  1382     038D                     	;# 
  1383     038E                     	;# 
  1384     0390                     	;# 
  1385     0390                     	;# 
  1386     0391                     	;# 
  1387     0392                     	;# 
  1388     040C                     	;# 
  1389     040D                     	;# 
  1390     040E                     	;# 
  1391     040F                     	;# 
  1392     0410                     	;# 
  1393     0411                     	;# 
  1394     0416                     	;# 
  1395     0416                     	;# 
  1396     0417                     	;# 
  1397     0418                     	;# 
  1398     0418                     	;# 
  1399     0419                     	;# 
  1400     041A                     	;# 
  1401     041A                     	;# 
  1402     041B                     	;# 
  1403     041C                     	;# 
  1404     041C                     	;# 
  1405     041D                     	;# 
  1406     041E                     	;# 
  1407     041F                     	;# 
  1408     048C                     	;# 
  1409     048C                     	;# 
  1410     048D                     	;# 
  1411     048E                     	;# 
  1412     048F                     	;# 
  1413     048F                     	;# 
  1414     0490                     	;# 
  1415     0491                     	;# 
  1416     0492                     	;# 
  1417     0492                     	;# 
  1418     0493                     	;# 
  1419     0494                     	;# 
  1420     0495                     	;# 
  1421     0495                     	;# 
  1422     0496                     	;# 
  1423     0497                     	;# 
  1424     0498                     	;# 
  1425     0499                     	;# 
  1426     049A                     	;# 
  1427     049B                     	;# 
  1428     049C                     	;# 
  1429     049D                     	;# 
  1430     050C                     	;# 
  1431     050C                     	;# 
  1432     050D                     	;# 
  1433     050E                     	;# 
  1434     050F                     	;# 
  1435     050F                     	;# 
  1436     0510                     	;# 
  1437     0511                     	;# 
  1438     0512                     	;# 
  1439     0512                     	;# 
  1440     0513                     	;# 
  1441     0514                     	;# 
  1442     0515                     	;# 
  1443     0515                     	;# 
  1444     0516                     	;# 
  1445     0517                     	;# 
  1446     0518                     	;# 
  1447     0519                     	;# 
  1448     051A                     	;# 
  1449     051B                     	;# 
  1450     051C                     	;# 
  1451     051D                     	;# 
  1452     058C                     	;# 
  1453     058C                     	;# 
  1454     058D                     	;# 
  1455     058E                     	;# 
  1456     058F                     	;# 
  1457     058F                     	;# 
  1458     0590                     	;# 
  1459     0591                     	;# 
  1460     0592                     	;# 
  1461     0593                     	;# 
  1462     060C                     	;# 
  1463     060D                     	;# 
  1464     060E                     	;# 
  1465     060F                     	;# 
  1466     0610                     	;# 
  1467     0611                     	;# 
  1468     0612                     	;# 
  1469     0613                     	;# 
  1470     0614                     	;# 
  1471     0616                     	;# 
  1472     0617                     	;# 
  1473     0618                     	;# 
  1474     0619                     	;# 
  1475     061A                     	;# 
  1476     061B                     	;# 
  1477     061C                     	;# 
  1478     061D                     	;# 
  1479     061E                     	;# 
  1480     068C                     	;# 
  1481     068D                     	;# 
  1482     068E                     	;# 
  1483     068F                     	;# 
  1484     0690                     	;# 
  1485     0691                     	;# 
  1486     0692                     	;# 
  1487     0693                     	;# 
  1488     0694                     	;# 
  1489     070C                     	;# 
  1490     070D                     	;# 
  1491     070E                     	;# 
  1492     070F                     	;# 
  1493     0710                     	;# 
  1494     0711                     	;# 
  1495     0712                     	;# 
  1496     0713                     	;# 
  1497     0714                     	;# 
  1498     0716                     	;# 
  1499     0717                     	;# 
  1500     0718                     	;# 
  1501     0719                     	;# 
  1502     071A                     	;# 
  1503     071B                     	;# 
  1504     071C                     	;# 
  1505     071D                     	;# 
  1506     071E                     	;# 
  1507     0796                     	;# 
  1508     0797                     	;# 
  1509     0798                     	;# 
  1510     0799                     	;# 
  1511     079A                     	;# 
  1512     079B                     	;# 
  1513     080C                     	;# 
  1514     080D                     	;# 
  1515     080E                     	;# 
  1516     080F                     	;# 
  1517     0810                     	;# 
  1518     0811                     	;# 
  1519     0812                     	;# 
  1520     0813                     	;# 
  1521     0814                     	;# 
  1522     081A                     	;# 
  1523     081B                     	;# 
  1524     081C                     	;# 
  1525     081D                     	;# 
  1526     081E                     	;# 
  1527     081F                     	;# 
  1528     088C                     	;# 
  1529     088D                     	;# 
  1530     088E                     	;# 
  1531     088F                     	;# 
  1532     0890                     	;# 
  1533     0891                     	;# 
  1534     0892                     	;# 
  1535     0893                     	;# 
  1536     0895                     	;# 
  1537     0896                     	;# 
  1538     0897                     	;# 
  1539     0898                     	;# 
  1540     0899                     	;# 
  1541     089A                     	;# 
  1542     089B                     	;# 
  1543     090C                     	;# 
  1544     090E                     	;# 
  1545     090F                     	;# 
  1546     091F                     	;# 
  1547     091F                     	;# 
  1548     098F                     	;# 
  1549     098F                     	;# 
  1550     0990                     	;# 
  1551     0991                     	;# 
  1552     0992                     	;# 
  1553     0993                     	;# 
  1554     0994                     	;# 
  1555     0995                     	;# 
  1556     0996                     	;# 
  1557     0997                     	;# 
  1558     0E0F                     	;# 
  1559     0E10                     	;# 
  1560     0E11                     	;# 
  1561     0E12                     	;# 
  1562     0E13                     	;# 
  1563     0E14                     	;# 
  1564     0E15                     	;# 
  1565     0E16                     	;# 
  1566     0E17                     	;# 
  1567     0E18                     	;# 
  1568     0E19                     	;# 
  1569     0E1A                     	;# 
  1570     0E1B                     	;# 
  1571     0E1C                     	;# 
  1572     0E1D                     	;# 
  1573     0E1E                     	;# 
  1574     0E1F                     	;# 
  1575     0E20                     	;# 
  1576     0E21                     	;# 
  1577     0E22                     	;# 
  1578     0E23                     	;# 
  1579     0E24                     	;# 
  1580     0E25                     	;# 
  1581     0E26                     	;# 
  1582     0E27                     	;# 
  1583     0E28                     	;# 
  1584     0E29                     	;# 
  1585     0E2A                     	;# 
  1586     0E2B                     	;# 
  1587     0E2C                     	;# 
  1588     0E2D                     	;# 
  1589     0E2E                     	;# 
  1590     0E2F                     	;# 
  1591     0E30                     	;# 
  1592     0E31                     	;# 
  1593     0E32                     	;# 
  1594     0E33                     	;# 
  1595     0E34                     	;# 
  1596     0E35                     	;# 
  1597     0E36                     	;# 
  1598     0E37                     	;# 
  1599     0E8F                     	;# 
  1600     0E90                     	;# 
  1601     0E91                     	;# 
  1602     0E92                     	;# 
  1603     0E93                     	;# 
  1604     0E94                     	;# 
  1605     0E95                     	;# 
  1606     0E96                     	;# 
  1607     0E97                     	;# 
  1608     0E9C                     	;# 
  1609     0E9D                     	;# 
  1610     0E9E                     	;# 
  1611     0EA1                     	;# 
  1612     0EA2                     	;# 
  1613     0EA3                     	;# 
  1614     0EA4                     	;# 
  1615     0EA5                     	;# 
  1616     0EA9                     	;# 
  1617     0EAA                     	;# 
  1618     0EAB                     	;# 
  1619     0EAC                     	;# 
  1620     0EB1                     	;# 
  1621     0EB2                     	;# 
  1622     0EB3                     	;# 
  1623     0EB8                     	;# 
  1624     0EB9                     	;# 
  1625     0EBA                     	;# 
  1626     0EBB                     	;# 
  1627     0EBC                     	;# 
  1628     0EBD                     	;# 
  1629     0EBE                     	;# 
  1630     0EC3                     	;# 
  1631     0EC5                     	;# 
  1632     0EC6                     	;# 
  1633     0EC7                     	;# 
  1634     0EC8                     	;# 
  1635     0EC9                     	;# 
  1636     0ECA                     	;# 
  1637     0ECB                     	;# 
  1638     0ECC                     	;# 
  1639     0F10                     	;# 
  1640     0F11                     	;# 
  1641     0F12                     	;# 
  1642     0F13                     	;# 
  1643     0F14                     	;# 
  1644     0F15                     	;# 
  1645     0F16                     	;# 
  1646     0F17                     	;# 
  1647     0F18                     	;# 
  1648     0F19                     	;# 
  1649     0F1A                     	;# 
  1650     0F1B                     	;# 
  1651     0F1C                     	;# 
  1652     0F1D                     	;# 
  1653     0F1E                     	;# 
  1654     0F1F                     	;# 
  1655     0F20                     	;# 
  1656     0F21                     	;# 
  1657     0F22                     	;# 
  1658     0F23                     	;# 
  1659     0F24                     	;# 
  1660     0F25                     	;# 
  1661     0F26                     	;# 
  1662     0F27                     	;# 
  1663     0F38                     	;# 
  1664     0F39                     	;# 
  1665     0F3A                     	;# 
  1666     0F3B                     	;# 
  1667     0F3C                     	;# 
  1668     0F3D                     	;# 
  1669     0F3E                     	;# 
  1670     0F3F                     	;# 
  1671     0F40                     	;# 
  1672     0F41                     	;# 
  1673     0F43                     	;# 
  1674     0F44                     	;# 
  1675     0F45                     	;# 
  1676     0F46                     	;# 
  1677     0F47                     	;# 
  1678     0F48                     	;# 
  1679     0F49                     	;# 
  1680     0F4A                     	;# 
  1681     0F4B                     	;# 
  1682     0F4C                     	;# 
  1683     0F4E                     	;# 
  1684     0F4F                     	;# 
  1685     0F50                     	;# 
  1686     0F51                     	;# 
  1687     0F52                     	;# 
  1688     0F53                     	;# 
  1689     0F54                     	;# 
  1690     0F55                     	;# 
  1691     0F56                     	;# 
  1692     0F57                     	;# 
  1693     0F65                     	;# 
  1694     0F68                     	;# 
  1695     0F69                     	;# 
  1696     0F6A                     	;# 
  1697     0F6B                     	;# 
  1698     0FE4                     	;# 
  1699     0FE5                     	;# 
  1700     0FE6                     	;# 
  1701     0FE7                     	;# 
  1702     0FE8                     	;# 
  1703     0FE9                     	;# 
  1704     0FEA                     	;# 
  1705     0FEB                     	;# 
  1706     0FED                     	;# 
  1707     0FEE                     	;# 
  1708     0FEF                     	;# 
  1709     0000                     	;# 
  1710     0001                     	;# 
  1711     0002                     	;# 
  1712     0003                     	;# 
  1713     0004                     	;# 
  1714     0005                     	;# 
  1715     0006                     	;# 
  1716     0007                     	;# 
  1717     0008                     	;# 
  1718     0009                     	;# 
  1719     000A                     	;# 
  1720     000B                     	;# 
  1721     000C                     	;# 
  1722     000D                     	;# 
  1723     000E                     	;# 
  1724     0010                     	;# 
  1725     0011                     	;# 
  1726     0012                     	;# 
  1727     0013                     	;# 
  1728     0016                     	;# 
  1729     0017                     	;# 
  1730     0018                     	;# 
  1731     001C                     	;# 
  1732     001C                     	;# 
  1733     001D                     	;# 
  1734     001D                     	;# 
  1735     001E                     	;# 
  1736     001F                     	;# 
  1737     008C                     	;# 
  1738     008C                     	;# 
  1739     008D                     	;# 
  1740     008E                     	;# 
  1741     008E                     	;# 
  1742     008F                     	;# 
  1743     0090                     	;# 
  1744     0090                     	;# 
  1745     0091                     	;# 
  1746     0093                     	;# 
  1747     0094                     	;# 
  1748     0095                     	;# 
  1749     0096                     	;# 
  1750     0097                     	;# 
  1751     0098                     	;# 
  1752     0099                     	;# 
  1753     009A                     	;# 
  1754     009B                     	;# 
  1755     009C                     	;# 
  1756     009D                     	;# 
  1757     009E                     	;# 
  1758     010C                     	;# 
  1759     010D                     	;# 
  1760     010E                     	;# 
  1761     010E                     	;# 
  1762     010F                     	;# 
  1763     0110                     	;# 
  1764     0110                     	;# 
  1765     0111                     	;# 
  1766     0112                     	;# 
  1767     0112                     	;# 
  1768     0113                     	;# 
  1769     0114                     	;# 
  1770     0114                     	;# 
  1771     0115                     	;# 
  1772     0116                     	;# 
  1773     0116                     	;# 
  1774     0117                     	;# 
  1775     0119                     	;# 
  1776     0119                     	;# 
  1777     0119                     	;# 
  1778     011A                     	;# 
  1779     011A                     	;# 
  1780     011A                     	;# 
  1781     011B                     	;# 
  1782     011B                     	;# 
  1783     011B                     	;# 
  1784     011B                     	;# 
  1785     011B                     	;# 
  1786     011C                     	;# 
  1787     011C                     	;# 
  1788     011C                     	;# 
  1789     011D                     	;# 
  1790     011D                     	;# 
  1791     011D                     	;# 
  1792     011E                     	;# 
  1793     011E                     	;# 
  1794     011E                     	;# 
  1795     011F                     	;# 
  1796     011F                     	;# 
  1797     011F                     	;# 
  1798     011F                     	;# 
  1799     011F                     	;# 
  1800     018C                     	;# 
  1801     018D                     	;# 
  1802     018E                     	;# 
  1803     018F                     	;# 
  1804     0190                     	;# 
  1805     0191                     	;# 
  1806     0192                     	;# 
  1807     0196                     	;# 
  1808     0197                     	;# 
  1809     0198                     	;# 
  1810     0199                     	;# 
  1811     019A                     	;# 
  1812     019B                     	;# 
  1813     019C                     	;# 
  1814     020C                     	;# 
  1815     020C                     	;# 
  1816     020D                     	;# 
  1817     020E                     	;# 
  1818     020F                     	;# 
  1819     020F                     	;# 
  1820     0210                     	;# 
  1821     0210                     	;# 
  1822     0211                     	;# 
  1823     0211                     	;# 
  1824     0212                     	;# 
  1825     0212                     	;# 
  1826     0213                     	;# 
  1827     0214                     	;# 
  1828     0215                     	;# 
  1829     0215                     	;# 
  1830     0216                     	;# 
  1831     0216                     	;# 
  1832     0217                     	;# 
  1833     0217                     	;# 
  1834     0218                     	;# 
  1835     0218                     	;# 
  1836     0219                     	;# 
  1837     021A                     	;# 
  1838     021B                     	;# 
  1839     021B                     	;# 
  1840     021C                     	;# 
  1841     021C                     	;# 
  1842     021D                     	;# 
  1843     021D                     	;# 
  1844     021E                     	;# 
  1845     021F                     	;# 
  1846     028C                     	;# 
  1847     028C                     	;# 
  1848     028D                     	;# 
  1849     028D                     	;# 
  1850     028E                     	;# 
  1851     028F                     	;# 
  1852     0290                     	;# 
  1853     0290                     	;# 
  1854     0291                     	;# 
  1855     0292                     	;# 
  1856     0292                     	;# 
  1857     0293                     	;# 
  1858     0293                     	;# 
  1859     0294                     	;# 
  1860     0295                     	;# 
  1861     0296                     	;# 
  1862     0296                     	;# 
  1863     0297                     	;# 
  1864     0298                     	;# 
  1865     0298                     	;# 
  1866     0299                     	;# 
  1867     0299                     	;# 
  1868     029A                     	;# 
  1869     029B                     	;# 
  1870     029C                     	;# 
  1871     029C                     	;# 
  1872     029D                     	;# 
  1873     030C                     	;# 
  1874     030C                     	;# 
  1875     030D                     	;# 
  1876     030E                     	;# 
  1877     030F                     	;# 
  1878     0310                     	;# 
  1879     0310                     	;# 
  1880     0311                     	;# 
  1881     0312                     	;# 
  1882     0313                     	;# 
  1883     0314                     	;# 
  1884     0314                     	;# 
  1885     0315                     	;# 
  1886     0316                     	;# 
  1887     0317                     	;# 
  1888     0318                     	;# 
  1889     0318                     	;# 
  1890     0319                     	;# 
  1891     031A                     	;# 
  1892     031B                     	;# 
  1893     031C                     	;# 
  1894     031C                     	;# 
  1895     031D                     	;# 
  1896     031E                     	;# 
  1897     031F                     	;# 
  1898     038C                     	;# 
  1899     038C                     	;# 
  1900     038D                     	;# 
  1901     038E                     	;# 
  1902     0390                     	;# 
  1903     0390                     	;# 
  1904     0391                     	;# 
  1905     0392                     	;# 
  1906     040C                     	;# 
  1907     040D                     	;# 
  1908     040E                     	;# 
  1909     040F                     	;# 
  1910     0410                     	;# 
  1911     0411                     	;# 
  1912     0416                     	;# 
  1913     0416                     	;# 
  1914     0417                     	;# 
  1915     0418                     	;# 
  1916     0418                     	;# 
  1917     0419                     	;# 
  1918     041A                     	;# 
  1919     041A                     	;# 
  1920     041B                     	;# 
  1921     041C                     	;# 
  1922     041C                     	;# 
  1923     041D                     	;# 
  1924     041E                     	;# 
  1925     041F                     	;# 
  1926     048C                     	;# 
  1927     048C                     	;# 
  1928     048D                     	;# 
  1929     048E                     	;# 
  1930     048F                     	;# 
  1931     048F                     	;# 
  1932     0490                     	;# 
  1933     0491                     	;# 
  1934     0492                     	;# 
  1935     0492                     	;# 
  1936     0493                     	;# 
  1937     0494                     	;# 
  1938     0495                     	;# 
  1939     0495                     	;# 
  1940     0496                     	;# 
  1941     0497                     	;# 
  1942     0498                     	;# 
  1943     0499                     	;# 
  1944     049A                     	;# 
  1945     049B                     	;# 
  1946     049C                     	;# 
  1947     049D                     	;# 
  1948     050C                     	;# 
  1949     050C                     	;# 
  1950     050D                     	;# 
  1951     050E                     	;# 
  1952     050F                     	;# 
  1953     050F                     	;# 
  1954     0510                     	;# 
  1955     0511                     	;# 
  1956     0512                     	;# 
  1957     0512                     	;# 
  1958     0513                     	;# 
  1959     0514                     	;# 
  1960     0515                     	;# 
  1961     0515                     	;# 
  1962     0516                     	;# 
  1963     0517                     	;# 
  1964     0518                     	;# 
  1965     0519                     	;# 
  1966     051A                     	;# 
  1967     051B                     	;# 
  1968     051C                     	;# 
  1969     051D                     	;# 
  1970     058C                     	;# 
  1971     058C                     	;# 
  1972     058D                     	;# 
  1973     058E                     	;# 
  1974     058F                     	;# 
  1975     058F                     	;# 
  1976     0590                     	;# 
  1977     0591                     	;# 
  1978     0592                     	;# 
  1979     0593                     	;# 
  1980     060C                     	;# 
  1981     060D                     	;# 
  1982     060E                     	;# 
  1983     060F                     	;# 
  1984     0610                     	;# 
  1985     0611                     	;# 
  1986     0612                     	;# 
  1987     0613                     	;# 
  1988     0614                     	;# 
  1989     0616                     	;# 
  1990     0617                     	;# 
  1991     0618                     	;# 
  1992     0619                     	;# 
  1993     061A                     	;# 
  1994     061B                     	;# 
  1995     061C                     	;# 
  1996     061D                     	;# 
  1997     061E                     	;# 
  1998     068C                     	;# 
  1999     068D                     	;# 
  2000     068E                     	;# 
  2001     068F                     	;# 
  2002     0690                     	;# 
  2003     0691                     	;# 
  2004     0692                     	;# 
  2005     0693                     	;# 
  2006     0694                     	;# 
  2007     070C                     	;# 
  2008     070D                     	;# 
  2009     070E                     	;# 
  2010     070F                     	;# 
  2011     0710                     	;# 
  2012     0711                     	;# 
  2013     0712                     	;# 
  2014     0713                     	;# 
  2015     0714                     	;# 
  2016     0716                     	;# 
  2017     0717                     	;# 
  2018     0718                     	;# 
  2019     0719                     	;# 
  2020     071A                     	;# 
  2021     071B                     	;# 
  2022     071C                     	;# 
  2023     071D                     	;# 
  2024     071E                     	;# 
  2025     0796                     	;# 
  2026     0797                     	;# 
  2027     0798                     	;# 
  2028     0799                     	;# 
  2029     079A                     	;# 
  2030     079B                     	;# 
  2031     080C                     	;# 
  2032     080D                     	;# 
  2033     080E                     	;# 
  2034     080F                     	;# 
  2035     0810                     	;# 
  2036     0811                     	;# 
  2037     0812                     	;# 
  2038     0813                     	;# 
  2039     0814                     	;# 
  2040     081A                     	;# 
  2041     081B                     	;# 
  2042     081C                     	;# 
  2043     081D                     	;# 
  2044     081E                     	;# 
  2045     081F                     	;# 
  2046     088C                     	;# 
  2047     088D                     	;# 
  2048     088E                     	;# 
  2049     088F                     	;# 
  2050     0890                     	;# 
  2051     0891                     	;# 
  2052     0892                     	;# 
  2053     0893                     	;# 
  2054     0895                     	;# 
  2055     0896                     	;# 
  2056     0897                     	;# 
  2057     0898                     	;# 
  2058     0899                     	;# 
  2059     089A                     	;# 
  2060     089B                     	;# 
  2061     090C                     	;# 
  2062     090E                     	;# 
  2063     090F                     	;# 
  2064     091F                     	;# 
  2065     091F                     	;# 
  2066     098F                     	;# 
  2067     098F                     	;# 
  2068     0990                     	;# 
  2069     0991                     	;# 
  2070     0992                     	;# 
  2071     0993                     	;# 
  2072     0994                     	;# 
  2073     0995                     	;# 
  2074     0996                     	;# 
  2075     0997                     	;# 
  2076     0E0F                     	;# 
  2077     0E10                     	;# 
  2078     0E11                     	;# 
  2079     0E12                     	;# 
  2080     0E13                     	;# 
  2081     0E14                     	;# 
  2082     0E15                     	;# 
  2083     0E16                     	;# 
  2084     0E17                     	;# 
  2085     0E18                     	;# 
  2086     0E19                     	;# 
  2087     0E1A                     	;# 
  2088     0E1B                     	;# 
  2089     0E1C                     	;# 
  2090     0E1D                     	;# 
  2091     0E1E                     	;# 
  2092     0E1F                     	;# 
  2093     0E20                     	;# 
  2094     0E21                     	;# 
  2095     0E22                     	;# 
  2096     0E23                     	;# 
  2097     0E24                     	;# 
  2098     0E25                     	;# 
  2099     0E26                     	;# 
  2100     0E27                     	;# 
  2101     0E28                     	;# 
  2102     0E29                     	;# 
  2103     0E2A                     	;# 
  2104     0E2B                     	;# 
  2105     0E2C                     	;# 
  2106     0E2D                     	;# 
  2107     0E2E                     	;# 
  2108     0E2F                     	;# 
  2109     0E30                     	;# 
  2110     0E31                     	;# 
  2111     0E32                     	;# 
  2112     0E33                     	;# 
  2113     0E34                     	;# 
  2114     0E35                     	;# 
  2115     0E36                     	;# 
  2116     0E37                     	;# 
  2117     0E8F                     	;# 
  2118     0E90                     	;# 
  2119     0E91                     	;# 
  2120     0E92                     	;# 
  2121     0E93                     	;# 
  2122     0E94                     	;# 
  2123     0E95                     	;# 
  2124     0E96                     	;# 
  2125     0E97                     	;# 
  2126     0E9C                     	;# 
  2127     0E9D                     	;# 
  2128     0E9E                     	;# 
  2129     0EA1                     	;# 
  2130     0EA2                     	;# 
  2131     0EA3                     	;# 
  2132     0EA4                     	;# 
  2133     0EA5                     	;# 
  2134     0EA9                     	;# 
  2135     0EAA                     	;# 
  2136     0EAB                     	;# 
  2137     0EAC                     	;# 
  2138     0EB1                     	;# 
  2139     0EB2                     	;# 
  2140     0EB3                     	;# 
  2141     0EB8                     	;# 
  2142     0EB9                     	;# 
  2143     0EBA                     	;# 
  2144     0EBB                     	;# 
  2145     0EBC                     	;# 
  2146     0EBD                     	;# 
  2147     0EBE                     	;# 
  2148     0EC3                     	;# 
  2149     0EC5                     	;# 
  2150     0EC6                     	;# 
  2151     0EC7                     	;# 
  2152     0EC8                     	;# 
  2153     0EC9                     	;# 
  2154     0ECA                     	;# 
  2155     0ECB                     	;# 
  2156     0ECC                     	;# 
  2157     0F10                     	;# 
  2158     0F11                     	;# 
  2159     0F12                     	;# 
  2160     0F13                     	;# 
  2161     0F14                     	;# 
  2162     0F15                     	;# 
  2163     0F16                     	;# 
  2164     0F17                     	;# 
  2165     0F18                     	;# 
  2166     0F19                     	;# 
  2167     0F1A                     	;# 
  2168     0F1B                     	;# 
  2169     0F1C                     	;# 
  2170     0F1D                     	;# 
  2171     0F1E                     	;# 
  2172     0F1F                     	;# 
  2173     0F20                     	;# 
  2174     0F21                     	;# 
  2175     0F22                     	;# 
  2176     0F23                     	;# 
  2177     0F24                     	;# 
  2178     0F25                     	;# 
  2179     0F26                     	;# 
  2180     0F27                     	;# 
  2181     0F38                     	;# 
  2182     0F39                     	;# 
  2183     0F3A                     	;# 
  2184     0F3B                     	;# 
  2185     0F3C                     	;# 
  2186     0F3D                     	;# 
  2187     0F3E                     	;# 
  2188     0F3F                     	;# 
  2189     0F40                     	;# 
  2190     0F41                     	;# 
  2191     0F43                     	;# 
  2192     0F44                     	;# 
  2193     0F45                     	;# 
  2194     0F46                     	;# 
  2195     0F47                     	;# 
  2196     0F48                     	;# 
  2197     0F49                     	;# 
  2198     0F4A                     	;# 
  2199     0F4B                     	;# 
  2200     0F4C                     	;# 
  2201     0F4E                     	;# 
  2202     0F4F                     	;# 
  2203     0F50                     	;# 
  2204     0F51                     	;# 
  2205     0F52                     	;# 
  2206     0F53                     	;# 
  2207     0F54                     	;# 
  2208     0F55                     	;# 
  2209     0F56                     	;# 
  2210     0F57                     	;# 
  2211     0F65                     	;# 
  2212     0F68                     	;# 
  2213     0F69                     	;# 
  2214     0F6A                     	;# 
  2215     0F6B                     	;# 
  2216     0FE4                     	;# 
  2217     0FE5                     	;# 
  2218     0FE6                     	;# 
  2219     0FE7                     	;# 
  2220     0FE8                     	;# 
  2221     0FE9                     	;# 
  2222     0FEA                     	;# 
  2223     0FEB                     	;# 
  2224     0FED                     	;# 
  2225     0FEE                     	;# 
  2226     0FEF                     	;# 
  2227     0000                     	;# 
  2228     0001                     	;# 
  2229     0002                     	;# 
  2230     0003                     	;# 
  2231     0004                     	;# 
  2232     0005                     	;# 
  2233     0006                     	;# 
  2234     0007                     	;# 
  2235     0008                     	;# 
  2236     0009                     	;# 
  2237     000A                     	;# 
  2238     000B                     	;# 
  2239     000C                     	;# 
  2240     000D                     	;# 
  2241     000E                     	;# 
  2242     0010                     	;# 
  2243     0011                     	;# 
  2244     0012                     	;# 
  2245     0013                     	;# 
  2246     0016                     	;# 
  2247     0017                     	;# 
  2248     0018                     	;# 
  2249     001C                     	;# 
  2250     001C                     	;# 
  2251     001D                     	;# 
  2252     001D                     	;# 
  2253     001E                     	;# 
  2254     001F                     	;# 
  2255     008C                     	;# 
  2256     008C                     	;# 
  2257     008D                     	;# 
  2258     008E                     	;# 
  2259     008E                     	;# 
  2260     008F                     	;# 
  2261     0090                     	;# 
  2262     0090                     	;# 
  2263     0091                     	;# 
  2264     0093                     	;# 
  2265     0094                     	;# 
  2266     0095                     	;# 
  2267     0096                     	;# 
  2268     0097                     	;# 
  2269     0098                     	;# 
  2270     0099                     	;# 
  2271     009A                     	;# 
  2272     009B                     	;# 
  2273     009C                     	;# 
  2274     009D                     	;# 
  2275     009E                     	;# 
  2276     010C                     	;# 
  2277     010D                     	;# 
  2278     010E                     	;# 
  2279     010E                     	;# 
  2280     010F                     	;# 
  2281     0110                     	;# 
  2282     0110                     	;# 
  2283     0111                     	;# 
  2284     0112                     	;# 
  2285     0112                     	;# 
  2286     0113                     	;# 
  2287     0114                     	;# 
  2288     0114                     	;# 
  2289     0115                     	;# 
  2290     0116                     	;# 
  2291     0116                     	;# 
  2292     0117                     	;# 
  2293     0119                     	;# 
  2294     0119                     	;# 
  2295     0119                     	;# 
  2296     011A                     	;# 
  2297     011A                     	;# 
  2298     011A                     	;# 
  2299     011B                     	;# 
  2300     011B                     	;# 
  2301     011B                     	;# 
  2302     011B                     	;# 
  2303     011B                     	;# 
  2304     011C                     	;# 
  2305     011C                     	;# 
  2306     011C                     	;# 
  2307     011D                     	;# 
  2308     011D                     	;# 
  2309     011D                     	;# 
  2310     011E                     	;# 
  2311     011E                     	;# 
  2312     011E                     	;# 
  2313     011F                     	;# 
  2314     011F                     	;# 
  2315     011F                     	;# 
  2316     011F                     	;# 
  2317     011F                     	;# 
  2318     018C                     	;# 
  2319     018D                     	;# 
  2320     018E                     	;# 
  2321     018F                     	;# 
  2322     0190                     	;# 
  2323     0191                     	;# 
  2324     0192                     	;# 
  2325     0196                     	;# 
  2326     0197                     	;# 
  2327     0198                     	;# 
  2328     0199                     	;# 
  2329     019A                     	;# 
  2330     019B                     	;# 
  2331     019C                     	;# 
  2332     020C                     	;# 
  2333     020C                     	;# 
  2334     020D                     	;# 
  2335     020E                     	;# 
  2336     020F                     	;# 
  2337     020F                     	;# 
  2338     0210                     	;# 
  2339     0210                     	;# 
  2340     0211                     	;# 
  2341     0211                     	;# 
  2342     0212                     	;# 
  2343     0212                     	;# 
  2344     0213                     	;# 
  2345     0214                     	;# 
  2346     0215                     	;# 
  2347     0215                     	;# 
  2348     0216                     	;# 
  2349     0216                     	;# 
  2350     0217                     	;# 
  2351     0217                     	;# 
  2352     0218                     	;# 
  2353     0218                     	;# 
  2354     0219                     	;# 
  2355     021A                     	;# 
  2356     021B                     	;# 
  2357     021B                     	;# 
  2358     021C                     	;# 
  2359     021C                     	;# 
  2360     021D                     	;# 
  2361     021D                     	;# 
  2362     021E                     	;# 
  2363     021F                     	;# 
  2364     028C                     	;# 
  2365     028C                     	;# 
  2366     028D                     	;# 
  2367     028D                     	;# 
  2368     028E                     	;# 
  2369     028F                     	;# 
  2370     0290                     	;# 
  2371     0290                     	;# 
  2372     0291                     	;# 
  2373     0292                     	;# 
  2374     0292                     	;# 
  2375     0293                     	;# 
  2376     0293                     	;# 
  2377     0294                     	;# 
  2378     0295                     	;# 
  2379     0296                     	;# 
  2380     0296                     	;# 
  2381     0297                     	;# 
  2382     0298                     	;# 
  2383     0298                     	;# 
  2384     0299                     	;# 
  2385     0299                     	;# 
  2386     029A                     	;# 
  2387     029B                     	;# 
  2388     029C                     	;# 
  2389     029C                     	;# 
  2390     029D                     	;# 
  2391     030C                     	;# 
  2392     030C                     	;# 
  2393     030D                     	;# 
  2394     030E                     	;# 
  2395     030F                     	;# 
  2396     0310                     	;# 
  2397     0310                     	;# 
  2398     0311                     	;# 
  2399     0312                     	;# 
  2400     0313                     	;# 
  2401     0314                     	;# 
  2402     0314                     	;# 
  2403     0315                     	;# 
  2404     0316                     	;# 
  2405     0317                     	;# 
  2406     0318                     	;# 
  2407     0318                     	;# 
  2408     0319                     	;# 
  2409     031A                     	;# 
  2410     031B                     	;# 
  2411     031C                     	;# 
  2412     031C                     	;# 
  2413     031D                     	;# 
  2414     031E                     	;# 
  2415     031F                     	;# 
  2416     038C                     	;# 
  2417     038C                     	;# 
  2418     038D                     	;# 
  2419     038E                     	;# 
  2420     0390                     	;# 
  2421     0390                     	;# 
  2422     0391                     	;# 
  2423     0392                     	;# 
  2424     040C                     	;# 
  2425     040D                     	;# 
  2426     040E                     	;# 
  2427     040F                     	;# 
  2428     0410                     	;# 
  2429     0411                     	;# 
  2430     0416                     	;# 
  2431     0416                     	;# 
  2432     0417                     	;# 
  2433     0418                     	;# 
  2434     0418                     	;# 
  2435     0419                     	;# 
  2436     041A                     	;# 
  2437     041A                     	;# 
  2438     041B                     	;# 
  2439     041C                     	;# 
  2440     041C                     	;# 
  2441     041D                     	;# 
  2442     041E                     	;# 
  2443     041F                     	;# 
  2444     048C                     	;# 
  2445     048C                     	;# 
  2446     048D                     	;# 
  2447     048E                     	;# 
  2448     048F                     	;# 
  2449     048F                     	;# 
  2450     0490                     	;# 
  2451     0491                     	;# 
  2452     0492                     	;# 
  2453     0492                     	;# 
  2454     0493                     	;# 
  2455     0494                     	;# 
  2456     0495                     	;# 
  2457     0495                     	;# 
  2458     0496                     	;# 
  2459     0497                     	;# 
  2460     0498                     	;# 
  2461     0499                     	;# 
  2462     049A                     	;# 
  2463     049B                     	;# 
  2464     049C                     	;# 
  2465     049D                     	;# 
  2466     050C                     	;# 
  2467     050C                     	;# 
  2468     050D                     	;# 
  2469     050E                     	;# 
  2470     050F                     	;# 
  2471     050F                     	;# 
  2472     0510                     	;# 
  2473     0511                     	;# 
  2474     0512                     	;# 
  2475     0512                     	;# 
  2476     0513                     	;# 
  2477     0514                     	;# 
  2478     0515                     	;# 
  2479     0515                     	;# 
  2480     0516                     	;# 
  2481     0517                     	;# 
  2482     0518                     	;# 
  2483     0519                     	;# 
  2484     051A                     	;# 
  2485     051B                     	;# 
  2486     051C                     	;# 
  2487     051D                     	;# 
  2488     058C                     	;# 
  2489     058C                     	;# 
  2490     058D                     	;# 
  2491     058E                     	;# 
  2492     058F                     	;# 
  2493     058F                     	;# 
  2494     0590                     	;# 
  2495     0591                     	;# 
  2496     0592                     	;# 
  2497     0593                     	;# 
  2498     060C                     	;# 
  2499     060D                     	;# 
  2500     060E                     	;# 
  2501     060F                     	;# 
  2502     0610                     	;# 
  2503     0611                     	;# 
  2504     0612                     	;# 
  2505     0613                     	;# 
  2506     0614                     	;# 
  2507     0616                     	;# 
  2508     0617                     	;# 
  2509     0618                     	;# 
  2510     0619                     	;# 
  2511     061A                     	;# 
  2512     061B                     	;# 
  2513     061C                     	;# 
  2514     061D                     	;# 
  2515     061E                     	;# 
  2516     068C                     	;# 
  2517     068D                     	;# 
  2518     068E                     	;# 
  2519     068F                     	;# 
  2520     0690                     	;# 
  2521     0691                     	;# 
  2522     0692                     	;# 
  2523     0693                     	;# 
  2524     0694                     	;# 
  2525     070C                     	;# 
  2526     070D                     	;# 
  2527     070E                     	;# 
  2528     070F                     	;# 
  2529     0710                     	;# 
  2530     0711                     	;# 
  2531     0712                     	;# 
  2532     0713                     	;# 
  2533     0714                     	;# 
  2534     0716                     	;# 
  2535     0717                     	;# 
  2536     0718                     	;# 
  2537     0719                     	;# 
  2538     071A                     	;# 
  2539     071B                     	;# 
  2540     071C                     	;# 
  2541     071D                     	;# 
  2542     071E                     	;# 
  2543     0796                     	;# 
  2544     0797                     	;# 
  2545     0798                     	;# 
  2546     0799                     	;# 
  2547     079A                     	;# 
  2548     079B                     	;# 
  2549     080C                     	;# 
  2550     080D                     	;# 
  2551     080E                     	;# 
  2552     080F                     	;# 
  2553     0810                     	;# 
  2554     0811                     	;# 
  2555     0812                     	;# 
  2556     0813                     	;# 
  2557     0814                     	;# 
  2558     081A                     	;# 
  2559     081B                     	;# 
  2560     081C                     	;# 
  2561     081D                     	;# 
  2562     081E                     	;# 
  2563     081F                     	;# 
  2564     088C                     	;# 
  2565     088D                     	;# 
  2566     088E                     	;# 
  2567     088F                     	;# 
  2568     0890                     	;# 
  2569     0891                     	;# 
  2570     0892                     	;# 
  2571     0893                     	;# 
  2572     0895                     	;# 
  2573     0896                     	;# 
  2574     0897                     	;# 
  2575     0898                     	;# 
  2576     0899                     	;# 
  2577     089A                     	;# 
  2578     089B                     	;# 
  2579     090C                     	;# 
  2580     090E                     	;# 
  2581     090F                     	;# 
  2582     091F                     	;# 
  2583     091F                     	;# 
  2584     098F                     	;# 
  2585     098F                     	;# 
  2586     0990                     	;# 
  2587     0991                     	;# 
  2588     0992                     	;# 
  2589     0993                     	;# 
  2590     0994                     	;# 
  2591     0995                     	;# 
  2592     0996                     	;# 
  2593     0997                     	;# 
  2594     0E0F                     	;# 
  2595     0E10                     	;# 
  2596     0E11                     	;# 
  2597     0E12                     	;# 
  2598     0E13                     	;# 
  2599     0E14                     	;# 
  2600     0E15                     	;# 
  2601     0E16                     	;# 
  2602     0E17                     	;# 
  2603     0E18                     	;# 
  2604     0E19                     	;# 
  2605     0E1A                     	;# 
  2606     0E1B                     	;# 
  2607     0E1C                     	;# 
  2608     0E1D                     	;# 
  2609     0E1E                     	;# 
  2610     0E1F                     	;# 
  2611     0E20                     	;# 
  2612     0E21                     	;# 
  2613     0E22                     	;# 
  2614     0E23                     	;# 
  2615     0E24                     	;# 
  2616     0E25                     	;# 
  2617     0E26                     	;# 
  2618     0E27                     	;# 
  2619     0E28                     	;# 
  2620     0E29                     	;# 
  2621     0E2A                     	;# 
  2622     0E2B                     	;# 
  2623     0E2C                     	;# 
  2624     0E2D                     	;# 
  2625     0E2E                     	;# 
  2626     0E2F                     	;# 
  2627     0E30                     	;# 
  2628     0E31                     	;# 
  2629     0E32                     	;# 
  2630     0E33                     	;# 
  2631     0E34                     	;# 
  2632     0E35                     	;# 
  2633     0E36                     	;# 
  2634     0E37                     	;# 
  2635     0E8F                     	;# 
  2636     0E90                     	;# 
  2637     0E91                     	;# 
  2638     0E92                     	;# 
  2639     0E93                     	;# 
  2640     0E94                     	;# 
  2641     0E95                     	;# 
  2642     0E96                     	;# 
  2643     0E97                     	;# 
  2644     0E9C                     	;# 
  2645     0E9D                     	;# 
  2646     0E9E                     	;# 
  2647     0EA1                     	;# 
  2648     0EA2                     	;# 
  2649     0EA3                     	;# 
  2650     0EA4                     	;# 
  2651     0EA5                     	;# 
  2652     0EA9                     	;# 
  2653     0EAA                     	;# 
  2654     0EAB                     	;# 
  2655     0EAC                     	;# 
  2656     0EB1                     	;# 
  2657     0EB2                     	;# 
  2658     0EB3                     	;# 
  2659     0EB8                     	;# 
  2660     0EB9                     	;# 
  2661     0EBA                     	;# 
  2662     0EBB                     	;# 
  2663     0EBC                     	;# 
  2664     0EBD                     	;# 
  2665     0EBE                     	;# 
  2666     0EC3                     	;# 
  2667     0EC5                     	;# 
  2668     0EC6                     	;# 
  2669     0EC7                     	;# 
  2670     0EC8                     	;# 
  2671     0EC9                     	;# 
  2672     0ECA                     	;# 
  2673     0ECB                     	;# 
  2674     0ECC                     	;# 
  2675     0F10                     	;# 
  2676     0F11                     	;# 
  2677     0F12                     	;# 
  2678     0F13                     	;# 
  2679     0F14                     	;# 
  2680     0F15                     	;# 
  2681     0F16                     	;# 
  2682     0F17                     	;# 
  2683     0F18                     	;# 
  2684     0F19                     	;# 
  2685     0F1A                     	;# 
  2686     0F1B                     	;# 
  2687     0F1C                     	;# 
  2688     0F1D                     	;# 
  2689     0F1E                     	;# 
  2690     0F1F                     	;# 
  2691     0F20                     	;# 
  2692     0F21                     	;# 
  2693     0F22                     	;# 
  2694     0F23                     	;# 
  2695     0F24                     	;# 
  2696     0F25                     	;# 
  2697     0F26                     	;# 
  2698     0F27                     	;# 
  2699     0F38                     	;# 
  2700     0F39                     	;# 
  2701     0F3A                     	;# 
  2702     0F3B                     	;# 
  2703     0F3C                     	;# 
  2704     0F3D                     	;# 
  2705     0F3E                     	;# 
  2706     0F3F                     	;# 
  2707     0F40                     	;# 
  2708     0F41                     	;# 
  2709     0F43                     	;# 
  2710     0F44                     	;# 
  2711     0F45                     	;# 
  2712     0F46                     	;# 
  2713     0F47                     	;# 
  2714     0F48                     	;# 
  2715     0F49                     	;# 
  2716     0F4A                     	;# 
  2717     0F4B                     	;# 
  2718     0F4C                     	;# 
  2719     0F4E                     	;# 
  2720     0F4F                     	;# 
  2721     0F50                     	;# 
  2722     0F51                     	;# 
  2723     0F52                     	;# 
  2724     0F53                     	;# 
  2725     0F54                     	;# 
  2726     0F55                     	;# 
  2727     0F56                     	;# 
  2728     0F57                     	;# 
  2729     0F65                     	;# 
  2730     0F68                     	;# 
  2731     0F69                     	;# 
  2732     0F6A                     	;# 
  2733     0F6B                     	;# 
  2734     0FE4                     	;# 
  2735     0FE5                     	;# 
  2736     0FE6                     	;# 
  2737     0FE7                     	;# 
  2738     0FE8                     	;# 
  2739     0FE9                     	;# 
  2740     0FEA                     	;# 
  2741     0FEB                     	;# 
  2742     0FED                     	;# 
  2743     0FEE                     	;# 
  2744     0FEF                     	;# 
  2745     0000                     	;# 
  2746     0001                     	;# 
  2747     0002                     	;# 
  2748     0003                     	;# 
  2749     0004                     	;# 
  2750     0005                     	;# 
  2751     0006                     	;# 
  2752     0007                     	;# 
  2753     0008                     	;# 
  2754     0009                     	;# 
  2755     000A                     	;# 
  2756     000B                     	;# 
  2757     000C                     	;# 
  2758     000D                     	;# 
  2759     000E                     	;# 
  2760     0010                     	;# 
  2761     0011                     	;# 
  2762     0012                     	;# 
  2763     0013                     	;# 
  2764     0016                     	;# 
  2765     0017                     	;# 
  2766     0018                     	;# 
  2767     001C                     	;# 
  2768     001C                     	;# 
  2769     001D                     	;# 
  2770     001D                     	;# 
  2771     001E                     	;# 
  2772     001F                     	;# 
  2773     008C                     	;# 
  2774     008C                     	;# 
  2775     008D                     	;# 
  2776     008E                     	;# 
  2777     008E                     	;# 
  2778     008F                     	;# 
  2779     0090                     	;# 
  2780     0090                     	;# 
  2781     0091                     	;# 
  2782     0093                     	;# 
  2783     0094                     	;# 
  2784     0095                     	;# 
  2785     0096                     	;# 
  2786     0097                     	;# 
  2787     0098                     	;# 
  2788     0099                     	;# 
  2789     009A                     	;# 
  2790     009B                     	;# 
  2791     009C                     	;# 
  2792     009D                     	;# 
  2793     009E                     	;# 
  2794     010C                     	;# 
  2795     010D                     	;# 
  2796     010E                     	;# 
  2797     010E                     	;# 
  2798     010F                     	;# 
  2799     0110                     	;# 
  2800     0110                     	;# 
  2801     0111                     	;# 
  2802     0112                     	;# 
  2803     0112                     	;# 
  2804     0113                     	;# 
  2805     0114                     	;# 
  2806     0114                     	;# 
  2807     0115                     	;# 
  2808     0116                     	;# 
  2809     0116                     	;# 
  2810     0117                     	;# 
  2811     0119                     	;# 
  2812     0119                     	;# 
  2813     0119                     	;# 
  2814     011A                     	;# 
  2815     011A                     	;# 
  2816     011A                     	;# 
  2817     011B                     	;# 
  2818     011B                     	;# 
  2819     011B                     	;# 
  2820     011B                     	;# 
  2821     011B                     	;# 
  2822     011C                     	;# 
  2823     011C                     	;# 
  2824     011C                     	;# 
  2825     011D                     	;# 
  2826     011D                     	;# 
  2827     011D                     	;# 
  2828     011E                     	;# 
  2829     011E                     	;# 
  2830     011E                     	;# 
  2831     011F                     	;# 
  2832     011F                     	;# 
  2833     011F                     	;# 
  2834     011F                     	;# 
  2835     011F                     	;# 
  2836     018C                     	;# 
  2837     018D                     	;# 
  2838     018E                     	;# 
  2839     018F                     	;# 
  2840     0190                     	;# 
  2841     0191                     	;# 
  2842     0192                     	;# 
  2843     0196                     	;# 
  2844     0197                     	;# 
  2845     0198                     	;# 
  2846     0199                     	;# 
  2847     019A                     	;# 
  2848     019B                     	;# 
  2849     019C                     	;# 
  2850     020C                     	;# 
  2851     020C                     	;# 
  2852     020D                     	;# 
  2853     020E                     	;# 
  2854     020F                     	;# 
  2855     020F                     	;# 
  2856     0210                     	;# 
  2857     0210                     	;# 
  2858     0211                     	;# 
  2859     0211                     	;# 
  2860     0212                     	;# 
  2861     0212                     	;# 
  2862     0213                     	;# 
  2863     0214                     	;# 
  2864     0215                     	;# 
  2865     0215                     	;# 
  2866     0216                     	;# 
  2867     0216                     	;# 
  2868     0217                     	;# 
  2869     0217                     	;# 
  2870     0218                     	;# 
  2871     0218                     	;# 
  2872     0219                     	;# 
  2873     021A                     	;# 
  2874     021B                     	;# 
  2875     021B                     	;# 
  2876     021C                     	;# 
  2877     021C                     	;# 
  2878     021D                     	;# 
  2879     021D                     	;# 
  2880     021E                     	;# 
  2881     021F                     	;# 
  2882     028C                     	;# 
  2883     028C                     	;# 
  2884     028D                     	;# 
  2885     028D                     	;# 
  2886     028E                     	;# 
  2887     028F                     	;# 
  2888     0290                     	;# 
  2889     0290                     	;# 
  2890     0291                     	;# 
  2891     0292                     	;# 
  2892     0292                     	;# 
  2893     0293                     	;# 
  2894     0293                     	;# 
  2895     0294                     	;# 
  2896     0295                     	;# 
  2897     0296                     	;# 
  2898     0296                     	;# 
  2899     0297                     	;# 
  2900     0298                     	;# 
  2901     0298                     	;# 
  2902     0299                     	;# 
  2903     0299                     	;# 
  2904     029A                     	;# 
  2905     029B                     	;# 
  2906     029C                     	;# 
  2907     029C                     	;# 
  2908     029D                     	;# 
  2909     030C                     	;# 
  2910     030C                     	;# 
  2911     030D                     	;# 
  2912     030E                     	;# 
  2913     030F                     	;# 
  2914     0310                     	;# 
  2915     0310                     	;# 
  2916     0311                     	;# 
  2917     0312                     	;# 
  2918     0313                     	;# 
  2919     0314                     	;# 
  2920     0314                     	;# 
  2921     0315                     	;# 
  2922     0316                     	;# 
  2923     0317                     	;# 
  2924     0318                     	;# 
  2925     0318                     	;# 
  2926     0319                     	;# 
  2927     031A                     	;# 
  2928     031B                     	;# 
  2929     031C                     	;# 
  2930     031C                     	;# 
  2931     031D                     	;# 
  2932     031E                     	;# 
  2933     031F                     	;# 
  2934     038C                     	;# 
  2935     038C                     	;# 
  2936     038D                     	;# 
  2937     038E                     	;# 
  2938     0390                     	;# 
  2939     0390                     	;# 
  2940     0391                     	;# 
  2941     0392                     	;# 
  2942     040C                     	;# 
  2943     040D                     	;# 
  2944     040E                     	;# 
  2945     040F                     	;# 
  2946     0410                     	;# 
  2947     0411                     	;# 
  2948     0416                     	;# 
  2949     0416                     	;# 
  2950     0417                     	;# 
  2951     0418                     	;# 
  2952     0418                     	;# 
  2953     0419                     	;# 
  2954     041A                     	;# 
  2955     041A                     	;# 
  2956     041B                     	;# 
  2957     041C                     	;# 
  2958     041C                     	;# 
  2959     041D                     	;# 
  2960     041E                     	;# 
  2961     041F                     	;# 
  2962     048C                     	;# 
  2963     048C                     	;# 
  2964     048D                     	;# 
  2965     048E                     	;# 
  2966     048F                     	;# 
  2967     048F                     	;# 
  2968     0490                     	;# 
  2969     0491                     	;# 
  2970     0492                     	;# 
  2971     0492                     	;# 
  2972     0493                     	;# 
  2973     0494                     	;# 
  2974     0495                     	;# 
  2975     0495                     	;# 
  2976     0496                     	;# 
  2977     0497                     	;# 
  2978     0498                     	;# 
  2979     0499                     	;# 
  2980     049A                     	;# 
  2981     049B                     	;# 
  2982     049C                     	;# 
  2983     049D                     	;# 
  2984     050C                     	;# 
  2985     050C                     	;# 
  2986     050D                     	;# 
  2987     050E                     	;# 
  2988     050F                     	;# 
  2989     050F                     	;# 
  2990     0510                     	;# 
  2991     0511                     	;# 
  2992     0512                     	;# 
  2993     0512                     	;# 
  2994     0513                     	;# 
  2995     0514                     	;# 
  2996     0515                     	;# 
  2997     0515                     	;# 
  2998     0516                     	;# 
  2999     0517                     	;# 
  3000     0518                     	;# 
  3001     0519                     	;# 
  3002     051A                     	;# 
  3003     051B                     	;# 
  3004     051C                     	;# 
  3005     051D                     	;# 
  3006     058C                     	;# 
  3007     058C                     	;# 
  3008     058D                     	;# 
  3009     058E                     	;# 
  3010     058F                     	;# 
  3011     058F                     	;# 
  3012     0590                     	;# 
  3013     0591                     	;# 
  3014     0592                     	;# 
  3015     0593                     	;# 
  3016     060C                     	;# 
  3017     060D                     	;# 
  3018     060E                     	;# 
  3019     060F                     	;# 
  3020     0610                     	;# 
  3021     0611                     	;# 
  3022     0612                     	;# 
  3023     0613                     	;# 
  3024     0614                     	;# 
  3025     0616                     	;# 
  3026     0617                     	;# 
  3027     0618                     	;# 
  3028     0619                     	;# 
  3029     061A                     	;# 
  3030     061B                     	;# 
  3031     061C                     	;# 
  3032     061D                     	;# 
  3033     061E                     	;# 
  3034     068C                     	;# 
  3035     068D                     	;# 
  3036     068E                     	;# 
  3037     068F                     	;# 
  3038     0690                     	;# 
  3039     0691                     	;# 
  3040     0692                     	;# 
  3041     0693                     	;# 
  3042     0694                     	;# 
  3043     070C                     	;# 
  3044     070D                     	;# 
  3045     070E                     	;# 
  3046     070F                     	;# 
  3047     0710                     	;# 
  3048     0711                     	;# 
  3049     0712                     	;# 
  3050     0713                     	;# 
  3051     0714                     	;# 
  3052     0716                     	;# 
  3053     0717                     	;# 
  3054     0718                     	;# 
  3055     0719                     	;# 
  3056     071A                     	;# 
  3057     071B                     	;# 
  3058     071C                     	;# 
  3059     071D                     	;# 
  3060     071E                     	;# 
  3061     0796                     	;# 
  3062     0797                     	;# 
  3063     0798                     	;# 
  3064     0799                     	;# 
  3065     079A                     	;# 
  3066     079B                     	;# 
  3067     080C                     	;# 
  3068     080D                     	;# 
  3069     080E                     	;# 
  3070     080F                     	;# 
  3071     0810                     	;# 
  3072     0811                     	;# 
  3073     0812                     	;# 
  3074     0813                     	;# 
  3075     0814                     	;# 
  3076     081A                     	;# 
  3077     081B                     	;# 
  3078     081C                     	;# 
  3079     081D                     	;# 
  3080     081E                     	;# 
  3081     081F                     	;# 
  3082     088C                     	;# 
  3083     088D                     	;# 
  3084     088E                     	;# 
  3085     088F                     	;# 
  3086     0890                     	;# 
  3087     0891                     	;# 
  3088     0892                     	;# 
  3089     0893                     	;# 
  3090     0895                     	;# 
  3091     0896                     	;# 
  3092     0897                     	;# 
  3093     0898                     	;# 
  3094     0899                     	;# 
  3095     089A                     	;# 
  3096     089B                     	;# 
  3097     090C                     	;# 
  3098     090E                     	;# 
  3099     090F                     	;# 
  3100     091F                     	;# 
  3101     091F                     	;# 
  3102     098F                     	;# 
  3103     098F                     	;# 
  3104     0990                     	;# 
  3105     0991                     	;# 
  3106     0992                     	;# 
  3107     0993                     	;# 
  3108     0994                     	;# 
  3109     0995                     	;# 
  3110     0996                     	;# 
  3111     0997                     	;# 
  3112     0E0F                     	;# 
  3113     0E10                     	;# 
  3114     0E11                     	;# 
  3115     0E12                     	;# 
  3116     0E13                     	;# 
  3117     0E14                     	;# 
  3118     0E15                     	;# 
  3119     0E16                     	;# 
  3120     0E17                     	;# 
  3121     0E18                     	;# 
  3122     0E19                     	;# 
  3123     0E1A                     	;# 
  3124     0E1B                     	;# 
  3125     0E1C                     	;# 
  3126     0E1D                     	;# 
  3127     0E1E                     	;# 
  3128     0E1F                     	;# 
  3129     0E20                     	;# 
  3130     0E21                     	;# 
  3131     0E22                     	;# 
  3132     0E23                     	;# 
  3133     0E24                     	;# 
  3134     0E25                     	;# 
  3135     0E26                     	;# 
  3136     0E27                     	;# 
  3137     0E28                     	;# 
  3138     0E29                     	;# 
  3139     0E2A                     	;# 
  3140     0E2B                     	;# 
  3141     0E2C                     	;# 
  3142     0E2D                     	;# 
  3143     0E2E                     	;# 
  3144     0E2F                     	;# 
  3145     0E30                     	;# 
  3146     0E31                     	;# 
  3147     0E32                     	;# 
  3148     0E33                     	;# 
  3149     0E34                     	;# 
  3150     0E35                     	;# 
  3151     0E36                     	;# 
  3152     0E37                     	;# 
  3153     0E8F                     	;# 
  3154     0E90                     	;# 
  3155     0E91                     	;# 
  3156     0E92                     	;# 
  3157     0E93                     	;# 
  3158     0E94                     	;# 
  3159     0E95                     	;# 
  3160     0E96                     	;# 
  3161     0E97                     	;# 
  3162     0E9C                     	;# 
  3163     0E9D                     	;# 
  3164     0E9E                     	;# 
  3165     0EA1                     	;# 
  3166     0EA2                     	;# 
  3167     0EA3                     	;# 
  3168     0EA4                     	;# 
  3169     0EA5                     	;# 
  3170     0EA9                     	;# 
  3171     0EAA                     	;# 
  3172     0EAB                     	;# 
  3173     0EAC                     	;# 
  3174     0EB1                     	;# 
  3175     0EB2                     	;# 
  3176     0EB3                     	;# 
  3177     0EB8                     	;# 
  3178     0EB9                     	;# 
  3179     0EBA                     	;# 
  3180     0EBB                     	;# 
  3181     0EBC                     	;# 
  3182     0EBD                     	;# 
  3183     0EBE                     	;# 
  3184     0EC3                     	;# 
  3185     0EC5                     	;# 
  3186     0EC6                     	;# 
  3187     0EC7                     	;# 
  3188     0EC8                     	;# 
  3189     0EC9                     	;# 
  3190     0ECA                     	;# 
  3191     0ECB                     	;# 
  3192     0ECC                     	;# 
  3193     0F10                     	;# 
  3194     0F11                     	;# 
  3195     0F12                     	;# 
  3196     0F13                     	;# 
  3197     0F14                     	;# 
  3198     0F15                     	;# 
  3199     0F16                     	;# 
  3200     0F17                     	;# 
  3201     0F18                     	;# 
  3202     0F19                     	;# 
  3203     0F1A                     	;# 
  3204     0F1B                     	;# 
  3205     0F1C                     	;# 
  3206     0F1D                     	;# 
  3207     0F1E                     	;# 
  3208     0F1F                     	;# 
  3209     0F20                     	;# 
  3210     0F21                     	;# 
  3211     0F22                     	;# 
  3212     0F23                     	;# 
  3213     0F24                     	;# 
  3214     0F25                     	;# 
  3215     0F26                     	;# 
  3216     0F27                     	;# 
  3217     0F38                     	;# 
  3218     0F39                     	;# 
  3219     0F3A                     	;# 
  3220     0F3B                     	;# 
  3221     0F3C                     	;# 
  3222     0F3D                     	;# 
  3223     0F3E                     	;# 
  3224     0F3F                     	;# 
  3225     0F40                     	;# 
  3226     0F41                     	;# 
  3227     0F43                     	;# 
  3228     0F44                     	;# 
  3229     0F45                     	;# 
  3230     0F46                     	;# 
  3231     0F47                     	;# 
  3232     0F48                     	;# 
  3233     0F49                     	;# 
  3234     0F4A                     	;# 
  3235     0F4B                     	;# 
  3236     0F4C                     	;# 
  3237     0F4E                     	;# 
  3238     0F4F                     	;# 
  3239     0F50                     	;# 
  3240     0F51                     	;# 
  3241     0F52                     	;# 
  3242     0F53                     	;# 
  3243     0F54                     	;# 
  3244     0F55                     	;# 
  3245     0F56                     	;# 
  3246     0F57                     	;# 
  3247     0F65                     	;# 
  3248     0F68                     	;# 
  3249     0F69                     	;# 
  3250     0F6A                     	;# 
  3251     0F6B                     	;# 
  3252     0FE4                     	;# 
  3253     0FE5                     	;# 
  3254     0FE6                     	;# 
  3255     0FE7                     	;# 
  3256     0FE8                     	;# 
  3257     0FE9                     	;# 
  3258     0FEA                     	;# 
  3259     0FEB                     	;# 
  3260     0FED                     	;# 
  3261     0FEE                     	;# 
  3262     0FEF                     	;# 
  3263     0000                     	;# 
  3264     0001                     	;# 
  3265     0002                     	;# 
  3266     0003                     	;# 
  3267     0004                     	;# 
  3268     0005                     	;# 
  3269     0006                     	;# 
  3270     0007                     	;# 
  3271     0008                     	;# 
  3272     0009                     	;# 
  3273     000A                     	;# 
  3274     000B                     	;# 
  3275     000C                     	;# 
  3276     000D                     	;# 
  3277     000E                     	;# 
  3278     0010                     	;# 
  3279     0011                     	;# 
  3280     0012                     	;# 
  3281     0013                     	;# 
  3282     0016                     	;# 
  3283     0017                     	;# 
  3284     0018                     	;# 
  3285     001C                     	;# 
  3286     001C                     	;# 
  3287     001D                     	;# 
  3288     001D                     	;# 
  3289     001E                     	;# 
  3290     001F                     	;# 
  3291     008C                     	;# 
  3292     008C                     	;# 
  3293     008D                     	;# 
  3294     008E                     	;# 
  3295     008E                     	;# 
  3296     008F                     	;# 
  3297     0090                     	;# 
  3298     0090                     	;# 
  3299     0091                     	;# 
  3300     0093                     	;# 
  3301     0094                     	;# 
  3302     0095                     	;# 
  3303     0096                     	;# 
  3304     0097                     	;# 
  3305     0098                     	;# 
  3306     0099                     	;# 
  3307     009A                     	;# 
  3308     009B                     	;# 
  3309     009C                     	;# 
  3310     009D                     	;# 
  3311     009E                     	;# 
  3312     010C                     	;# 
  3313     010D                     	;# 
  3314     010E                     	;# 
  3315     010E                     	;# 
  3316     010F                     	;# 
  3317     0110                     	;# 
  3318     0110                     	;# 
  3319     0111                     	;# 
  3320     0112                     	;# 
  3321     0112                     	;# 
  3322     0113                     	;# 
  3323     0114                     	;# 
  3324     0114                     	;# 
  3325     0115                     	;# 
  3326     0116                     	;# 
  3327     0116                     	;# 
  3328     0117                     	;# 
  3329     0119                     	;# 
  3330     0119                     	;# 
  3331     0119                     	;# 
  3332     011A                     	;# 
  3333     011A                     	;# 
  3334     011A                     	;# 
  3335     011B                     	;# 
  3336     011B                     	;# 
  3337     011B                     	;# 
  3338     011B                     	;# 
  3339     011B                     	;# 
  3340     011C                     	;# 
  3341     011C                     	;# 
  3342     011C                     	;# 
  3343     011D                     	;# 
  3344     011D                     	;# 
  3345     011D                     	;# 
  3346     011E                     	;# 
  3347     011E                     	;# 
  3348     011E                     	;# 
  3349     011F                     	;# 
  3350     011F                     	;# 
  3351     011F                     	;# 
  3352     011F                     	;# 
  3353     011F                     	;# 
  3354     018C                     	;# 
  3355     018D                     	;# 
  3356     018E                     	;# 
  3357     018F                     	;# 
  3358     0190                     	;# 
  3359     0191                     	;# 
  3360     0192                     	;# 
  3361     0196                     	;# 
  3362     0197                     	;# 
  3363     0198                     	;# 
  3364     0199                     	;# 
  3365     019A                     	;# 
  3366     019B                     	;# 
  3367     019C                     	;# 
  3368     020C                     	;# 
  3369     020C                     	;# 
  3370     020D                     	;# 
  3371     020E                     	;# 
  3372     020F                     	;# 
  3373     020F                     	;# 
  3374     0210                     	;# 
  3375     0210                     	;# 
  3376     0211                     	;# 
  3377     0211                     	;# 
  3378     0212                     	;# 
  3379     0212                     	;# 
  3380     0213                     	;# 
  3381     0214                     	;# 
  3382     0215                     	;# 
  3383     0215                     	;# 
  3384     0216                     	;# 
  3385     0216                     	;# 
  3386     0217                     	;# 
  3387     0217                     	;# 
  3388     0218                     	;# 
  3389     0218                     	;# 
  3390     0219                     	;# 
  3391     021A                     	;# 
  3392     021B                     	;# 
  3393     021B                     	;# 
  3394     021C                     	;# 
  3395     021C                     	;# 
  3396     021D                     	;# 
  3397     021D                     	;# 
  3398     021E                     	;# 
  3399     021F                     	;# 
  3400     028C                     	;# 
  3401     028C                     	;# 
  3402     028D                     	;# 
  3403     028D                     	;# 
  3404     028E                     	;# 
  3405     028F                     	;# 
  3406     0290                     	;# 
  3407     0290                     	;# 
  3408     0291                     	;# 
  3409     0292                     	;# 
  3410     0292                     	;# 
  3411     0293                     	;# 
  3412     0293                     	;# 
  3413     0294                     	;# 
  3414     0295                     	;# 
  3415     0296                     	;# 
  3416     0296                     	;# 
  3417     0297                     	;# 
  3418     0298                     	;# 
  3419     0298                     	;# 
  3420     0299                     	;# 
  3421     0299                     	;# 
  3422     029A                     	;# 
  3423     029B                     	;# 
  3424     029C                     	;# 
  3425     029C                     	;# 
  3426     029D                     	;# 
  3427     030C                     	;# 
  3428     030C                     	;# 
  3429     030D                     	;# 
  3430     030E                     	;# 
  3431     030F                     	;# 
  3432     0310                     	;# 
  3433     0310                     	;# 
  3434     0311                     	;# 
  3435     0312                     	;# 
  3436     0313                     	;# 
  3437     0314                     	;# 
  3438     0314                     	;# 
  3439     0315                     	;# 
  3440     0316                     	;# 
  3441     0317                     	;# 
  3442     0318                     	;# 
  3443     0318                     	;# 
  3444     0319                     	;# 
  3445     031A                     	;# 
  3446     031B                     	;# 
  3447     031C                     	;# 
  3448     031C                     	;# 
  3449     031D                     	;# 
  3450     031E                     	;# 
  3451     031F                     	;# 
  3452     038C                     	;# 
  3453     038C                     	;# 
  3454     038D                     	;# 
  3455     038E                     	;# 
  3456     0390                     	;# 
  3457     0390                     	;# 
  3458     0391                     	;# 
  3459     0392                     	;# 
  3460     040C                     	;# 
  3461     040D                     	;# 
  3462     040E                     	;# 
  3463     040F                     	;# 
  3464     0410                     	;# 
  3465     0411                     	;# 
  3466     0416                     	;# 
  3467     0416                     	;# 
  3468     0417                     	;# 
  3469     0418                     	;# 
  3470     0418                     	;# 
  3471     0419                     	;# 
  3472     041A                     	;# 
  3473     041A                     	;# 
  3474     041B                     	;# 
  3475     041C                     	;# 
  3476     041C                     	;# 
  3477     041D                     	;# 
  3478     041E                     	;# 
  3479     041F                     	;# 
  3480     048C                     	;# 
  3481     048C                     	;# 
  3482     048D                     	;# 
  3483     048E                     	;# 
  3484     048F                     	;# 
  3485     048F                     	;# 
  3486     0490                     	;# 
  3487     0491                     	;# 
  3488     0492                     	;# 
  3489     0492                     	;# 
  3490     0493                     	;# 
  3491     0494                     	;# 
  3492     0495                     	;# 
  3493     0495                     	;# 
  3494     0496                     	;# 
  3495     0497                     	;# 
  3496     0498                     	;# 
  3497     0499                     	;# 
  3498     049A                     	;# 
  3499     049B                     	;# 
  3500     049C                     	;# 
  3501     049D                     	;# 
  3502     050C                     	;# 
  3503     050C                     	;# 
  3504     050D                     	;# 
  3505     050E                     	;# 
  3506     050F                     	;# 
  3507     050F                     	;# 
  3508     0510                     	;# 
  3509     0511                     	;# 
  3510     0512                     	;# 
  3511     0512                     	;# 
  3512     0513                     	;# 
  3513     0514                     	;# 
  3514     0515                     	;# 
  3515     0515                     	;# 
  3516     0516                     	;# 
  3517     0517                     	;# 
  3518     0518                     	;# 
  3519     0519                     	;# 
  3520     051A                     	;# 
  3521     051B                     	;# 
  3522     051C                     	;# 
  3523     051D                     	;# 
  3524     058C                     	;# 
  3525     058C                     	;# 
  3526     058D                     	;# 
  3527     058E                     	;# 
  3528     058F                     	;# 
  3529     058F                     	;# 
  3530     0590                     	;# 
  3531     0591                     	;# 
  3532     0592                     	;# 
  3533     0593                     	;# 
  3534     060C                     	;# 
  3535     060D                     	;# 
  3536     060E                     	;# 
  3537     060F                     	;# 
  3538     0610                     	;# 
  3539     0611                     	;# 
  3540     0612                     	;# 
  3541     0613                     	;# 
  3542     0614                     	;# 
  3543     0616                     	;# 
  3544     0617                     	;# 
  3545     0618                     	;# 
  3546     0619                     	;# 
  3547     061A                     	;# 
  3548     061B                     	;# 
  3549     061C                     	;# 
  3550     061D                     	;# 
  3551     061E                     	;# 
  3552     068C                     	;# 
  3553     068D                     	;# 
  3554     068E                     	;# 
  3555     068F                     	;# 
  3556     0690                     	;# 
  3557     0691                     	;# 
  3558     0692                     	;# 
  3559     0693                     	;# 
  3560     0694                     	;# 
  3561     070C                     	;# 
  3562     070D                     	;# 
  3563     070E                     	;# 
  3564     070F                     	;# 
  3565     0710                     	;# 
  3566     0711                     	;# 
  3567     0712                     	;# 
  3568     0713                     	;# 
  3569     0714                     	;# 
  3570     0716                     	;# 
  3571     0717                     	;# 
  3572     0718                     	;# 
  3573     0719                     	;# 
  3574     071A                     	;# 
  3575     071B                     	;# 
  3576     071C                     	;# 
  3577     071D                     	;# 
  3578     071E                     	;# 
  3579     0796                     	;# 
  3580     0797                     	;# 
  3581     0798                     	;# 
  3582     0799                     	;# 
  3583     079A                     	;# 
  3584     079B                     	;# 
  3585     080C                     	;# 
  3586     080D                     	;# 
  3587     080E                     	;# 
  3588     080F                     	;# 
  3589     0810                     	;# 
  3590     0811                     	;# 
  3591     0812                     	;# 
  3592     0813                     	;# 
  3593     0814                     	;# 
  3594     081A                     	;# 
  3595     081B                     	;# 
  3596     081C                     	;# 
  3597     081D                     	;# 
  3598     081E                     	;# 
  3599     081F                     	;# 
  3600     088C                     	;# 
  3601     088D                     	;# 
  3602     088E                     	;# 
  3603     088F                     	;# 
  3604     0890                     	;# 
  3605     0891                     	;# 
  3606     0892                     	;# 
  3607     0893                     	;# 
  3608     0895                     	;# 
  3609     0896                     	;# 
  3610     0897                     	;# 
  3611     0898                     	;# 
  3612     0899                     	;# 
  3613     089A                     	;# 
  3614     089B                     	;# 
  3615     090C                     	;# 
  3616     090E                     	;# 
  3617     090F                     	;# 
  3618     091F                     	;# 
  3619     091F                     	;# 
  3620     098F                     	;# 
  3621     098F                     	;# 
  3622     0990                     	;# 
  3623     0991                     	;# 
  3624     0992                     	;# 
  3625     0993                     	;# 
  3626     0994                     	;# 
  3627     0995                     	;# 
  3628     0996                     	;# 
  3629     0997                     	;# 
  3630     0E0F                     	;# 
  3631     0E10                     	;# 
  3632     0E11                     	;# 
  3633     0E12                     	;# 
  3634     0E13                     	;# 
  3635     0E14                     	;# 
  3636     0E15                     	;# 
  3637     0E16                     	;# 
  3638     0E17                     	;# 
  3639     0E18                     	;# 
  3640     0E19                     	;# 
  3641     0E1A                     	;# 
  3642     0E1B                     	;# 
  3643     0E1C                     	;# 
  3644     0E1D                     	;# 
  3645     0E1E                     	;# 
  3646     0E1F                     	;# 
  3647     0E20                     	;# 
  3648     0E21                     	;# 
  3649     0E22                     	;# 
  3650     0E23                     	;# 
  3651     0E24                     	;# 
  3652     0E25                     	;# 
  3653     0E26                     	;# 
  3654     0E27                     	;# 
  3655     0E28                     	;# 
  3656     0E29                     	;# 
  3657     0E2A                     	;# 
  3658     0E2B                     	;# 
  3659     0E2C                     	;# 
  3660     0E2D                     	;# 
  3661     0E2E                     	;# 
  3662     0E2F                     	;# 
  3663     0E30                     	;# 
  3664     0E31                     	;# 
  3665     0E32                     	;# 
  3666     0E33                     	;# 
  3667     0E34                     	;# 
  3668     0E35                     	;# 
  3669     0E36                     	;# 
  3670     0E37                     	;# 
  3671     0E8F                     	;# 
  3672     0E90                     	;# 
  3673     0E91                     	;# 
  3674     0E92                     	;# 
  3675     0E93                     	;# 
  3676     0E94                     	;# 
  3677     0E95                     	;# 
  3678     0E96                     	;# 
  3679     0E97                     	;# 
  3680     0E9C                     	;# 
  3681     0E9D                     	;# 
  3682     0E9E                     	;# 
  3683     0EA1                     	;# 
  3684     0EA2                     	;# 
  3685     0EA3                     	;# 
  3686     0EA4                     	;# 
  3687     0EA5                     	;# 
  3688     0EA9                     	;# 
  3689     0EAA                     	;# 
  3690     0EAB                     	;# 
  3691     0EAC                     	;# 
  3692     0EB1                     	;# 
  3693     0EB2                     	;# 
  3694     0EB3                     	;# 
  3695     0EB8                     	;# 
  3696     0EB9                     	;# 
  3697     0EBA                     	;# 
  3698     0EBB                     	;# 
  3699     0EBC                     	;# 
  3700     0EBD                     	;# 
  3701     0EBE                     	;# 
  3702     0EC3                     	;# 
  3703     0EC5                     	;# 
  3704     0EC6                     	;# 
  3705     0EC7                     	;# 
  3706     0EC8                     	;# 
  3707     0EC9                     	;# 
  3708     0ECA                     	;# 
  3709     0ECB                     	;# 
  3710     0ECC                     	;# 
  3711     0F10                     	;# 
  3712     0F11                     	;# 
  3713     0F12                     	;# 
  3714     0F13                     	;# 
  3715     0F14                     	;# 
  3716     0F15                     	;# 
  3717     0F16                     	;# 
  3718     0F17                     	;# 
  3719     0F18                     	;# 
  3720     0F19                     	;# 
  3721     0F1A                     	;# 
  3722     0F1B                     	;# 
  3723     0F1C                     	;# 
  3724     0F1D                     	;# 
  3725     0F1E                     	;# 
  3726     0F1F                     	;# 
  3727     0F20                     	;# 
  3728     0F21                     	;# 
  3729     0F22                     	;# 
  3730     0F23                     	;# 
  3731     0F24                     	;# 
  3732     0F25                     	;# 
  3733     0F26                     	;# 
  3734     0F27                     	;# 
  3735     0F38                     	;# 
  3736     0F39                     	;# 
  3737     0F3A                     	;# 
  3738     0F3B                     	;# 
  3739     0F3C                     	;# 
  3740     0F3D                     	;# 
  3741     0F3E                     	;# 
  3742     0F3F                     	;# 
  3743     0F40                     	;# 
  3744     0F41                     	;# 
  3745     0F43                     	;# 
  3746     0F44                     	;# 
  3747     0F45                     	;# 
  3748     0F46                     	;# 
  3749     0F47                     	;# 
  3750     0F48                     	;# 
  3751     0F49                     	;# 
  3752     0F4A                     	;# 
  3753     0F4B                     	;# 
  3754     0F4C                     	;# 
  3755     0F4E                     	;# 
  3756     0F4F                     	;# 
  3757     0F50                     	;# 
  3758     0F51                     	;# 
  3759     0F52                     	;# 
  3760     0F53                     	;# 
  3761     0F54                     	;# 
  3762     0F55                     	;# 
  3763     0F56                     	;# 
  3764     0F57                     	;# 
  3765     0F65                     	;# 
  3766     0F68                     	;# 
  3767     0F69                     	;# 
  3768     0F6A                     	;# 
  3769     0F6B                     	;# 
  3770     0FE4                     	;# 
  3771     0FE5                     	;# 
  3772     0FE6                     	;# 
  3773     0FE7                     	;# 
  3774     0FE8                     	;# 
  3775     0FE9                     	;# 
  3776     0FEA                     	;# 
  3777     0FEB                     	;# 
  3778     0FED                     	;# 
  3779     0FEE                     	;# 
  3780     0FEF                     	;# 
  3781     0000                     	;# 
  3782     0001                     	;# 
  3783     0002                     	;# 
  3784     0003                     	;# 
  3785     0004                     	;# 
  3786     0005                     	;# 
  3787     0006                     	;# 
  3788     0007                     	;# 
  3789     0008                     	;# 
  3790     0009                     	;# 
  3791     000A                     	;# 
  3792     000B                     	;# 
  3793     000C                     	;# 
  3794     000D                     	;# 
  3795     000E                     	;# 
  3796     0010                     	;# 
  3797     0011                     	;# 
  3798     0012                     	;# 
  3799     0013                     	;# 
  3800     0016                     	;# 
  3801     0017                     	;# 
  3802     0018                     	;# 
  3803     001C                     	;# 
  3804     001C                     	;# 
  3805     001D                     	;# 
  3806     001D                     	;# 
  3807     001E                     	;# 
  3808     001F                     	;# 
  3809     008C                     	;# 
  3810     008C                     	;# 
  3811     008D                     	;# 
  3812     008E                     	;# 
  3813     008E                     	;# 
  3814     008F                     	;# 
  3815     0090                     	;# 
  3816     0090                     	;# 
  3817     0091                     	;# 
  3818     0093                     	;# 
  3819     0094                     	;# 
  3820     0095                     	;# 
  3821     0096                     	;# 
  3822     0097                     	;# 
  3823     0098                     	;# 
  3824     0099                     	;# 
  3825     009A                     	;# 
  3826     009B                     	;# 
  3827     009C                     	;# 
  3828     009D                     	;# 
  3829     009E                     	;# 
  3830     010C                     	;# 
  3831     010D                     	;# 
  3832     010E                     	;# 
  3833     010E                     	;# 
  3834     010F                     	;# 
  3835     0110                     	;# 
  3836     0110                     	;# 
  3837     0111                     	;# 
  3838     0112                     	;# 
  3839     0112                     	;# 
  3840     0113                     	;# 
  3841     0114                     	;# 
  3842     0114                     	;# 
  3843     0115                     	;# 
  3844     0116                     	;# 
  3845     0116                     	;# 
  3846     0117                     	;# 
  3847     0119                     	;# 
  3848     0119                     	;# 
  3849     0119                     	;# 
  3850     011A                     	;# 
  3851     011A                     	;# 
  3852     011A                     	;# 
  3853     011B                     	;# 
  3854     011B                     	;# 
  3855     011B                     	;# 
  3856     011B                     	;# 
  3857     011B                     	;# 
  3858     011C                     	;# 
  3859     011C                     	;# 
  3860     011C                     	;# 
  3861     011D                     	;# 
  3862     011D                     	;# 
  3863     011D                     	;# 
  3864     011E                     	;# 
  3865     011E                     	;# 
  3866     011E                     	;# 
  3867     011F                     	;# 
  3868     011F                     	;# 
  3869     011F                     	;# 
  3870     011F                     	;# 
  3871     011F                     	;# 
  3872     018C                     	;# 
  3873     018D                     	;# 
  3874     018E                     	;# 
  3875     018F                     	;# 
  3876     0190                     	;# 
  3877     0191                     	;# 
  3878     0192                     	;# 
  3879     0196                     	;# 
  3880     0197                     	;# 
  3881     0198                     	;# 
  3882     0199                     	;# 
  3883     019A                     	;# 
  3884     019B                     	;# 
  3885     019C                     	;# 
  3886     020C                     	;# 
  3887     020C                     	;# 
  3888     020D                     	;# 
  3889     020E                     	;# 
  3890     020F                     	;# 
  3891     020F                     	;# 
  3892     0210                     	;# 
  3893     0210                     	;# 
  3894     0211                     	;# 
  3895     0211                     	;# 
  3896     0212                     	;# 
  3897     0212                     	;# 
  3898     0213                     	;# 
  3899     0214                     	;# 
  3900     0215                     	;# 
  3901     0215                     	;# 
  3902     0216                     	;# 
  3903     0216                     	;# 
  3904     0217                     	;# 
  3905     0217                     	;# 
  3906     0218                     	;# 
  3907     0218                     	;# 
  3908     0219                     	;# 
  3909     021A                     	;# 
  3910     021B                     	;# 
  3911     021B                     	;# 
  3912     021C                     	;# 
  3913     021C                     	;# 
  3914     021D                     	;# 
  3915     021D                     	;# 
  3916     021E                     	;# 
  3917     021F                     	;# 
  3918     028C                     	;# 
  3919     028C                     	;# 
  3920     028D                     	;# 
  3921     028D                     	;# 
  3922     028E                     	;# 
  3923     028F                     	;# 
  3924     0290                     	;# 
  3925     0290                     	;# 
  3926     0291                     	;# 
  3927     0292                     	;# 
  3928     0292                     	;# 
  3929     0293                     	;# 
  3930     0293                     	;# 
  3931     0294                     	;# 
  3932     0295                     	;# 
  3933     0296                     	;# 
  3934     0296                     	;# 
  3935     0297                     	;# 
  3936     0298                     	;# 
  3937     0298                     	;# 
  3938     0299                     	;# 
  3939     0299                     	;# 
  3940     029A                     	;# 
  3941     029B                     	;# 
  3942     029C                     	;# 
  3943     029C                     	;# 
  3944     029D                     	;# 
  3945     030C                     	;# 
  3946     030C                     	;# 
  3947     030D                     	;# 
  3948     030E                     	;# 
  3949     030F                     	;# 
  3950     0310                     	;# 
  3951     0310                     	;# 
  3952     0311                     	;# 
  3953     0312                     	;# 
  3954     0313                     	;# 
  3955     0314                     	;# 
  3956     0314                     	;# 
  3957     0315                     	;# 
  3958     0316                     	;# 
  3959     0317                     	;# 
  3960     0318                     	;# 
  3961     0318                     	;# 
  3962     0319                     	;# 
  3963     031A                     	;# 
  3964     031B                     	;# 
  3965     031C                     	;# 
  3966     031C                     	;# 
  3967     031D                     	;# 
  3968     031E                     	;# 
  3969     031F                     	;# 
  3970     038C                     	;# 
  3971     038C                     	;# 
  3972     038D                     	;# 
  3973     038E                     	;# 
  3974     0390                     	;# 
  3975     0390                     	;# 
  3976     0391                     	;# 
  3977     0392                     	;# 
  3978     040C                     	;# 
  3979     040D                     	;# 
  3980     040E                     	;# 
  3981     040F                     	;# 
  3982     0410                     	;# 
  3983     0411                     	;# 
  3984     0416                     	;# 
  3985     0416                     	;# 
  3986     0417                     	;# 
  3987     0418                     	;# 
  3988     0418                     	;# 
  3989     0419                     	;# 
  3990     041A                     	;# 
  3991     041A                     	;# 
  3992     041B                     	;# 
  3993     041C                     	;# 
  3994     041C                     	;# 
  3995     041D                     	;# 
  3996     041E                     	;# 
  3997     041F                     	;# 
  3998     048C                     	;# 
  3999     048C                     	;# 
  4000     048D                     	;# 
  4001     048E                     	;# 
  4002     048F                     	;# 
  4003     048F                     	;# 
  4004     0490                     	;# 
  4005     0491                     	;# 
  4006     0492                     	;# 
  4007     0492                     	;# 
  4008     0493                     	;# 
  4009     0494                     	;# 
  4010     0495                     	;# 
  4011     0495                     	;# 
  4012     0496                     	;# 
  4013     0497                     	;# 
  4014     0498                     	;# 
  4015     0499                     	;# 
  4016     049A                     	;# 
  4017     049B                     	;# 
  4018     049C                     	;# 
  4019     049D                     	;# 
  4020     050C                     	;# 
  4021     050C                     	;# 
  4022     050D                     	;# 
  4023     050E                     	;# 
  4024     050F                     	;# 
  4025     050F                     	;# 
  4026     0510                     	;# 
  4027     0511                     	;# 
  4028     0512                     	;# 
  4029     0512                     	;# 
  4030     0513                     	;# 
  4031     0514                     	;# 
  4032     0515                     	;# 
  4033     0515                     	;# 
  4034     0516                     	;# 
  4035     0517                     	;# 
  4036     0518                     	;# 
  4037     0519                     	;# 
  4038     051A                     	;# 
  4039     051B                     	;# 
  4040     051C                     	;# 
  4041     051D                     	;# 
  4042     058C                     	;# 
  4043     058C                     	;# 
  4044     058D                     	;# 
  4045     058E                     	;# 
  4046     058F                     	;# 
  4047     058F                     	;# 
  4048     0590                     	;# 
  4049     0591                     	;# 
  4050     0592                     	;# 
  4051     0593                     	;# 
  4052     060C                     	;# 
  4053     060D                     	;# 
  4054     060E                     	;# 
  4055     060F                     	;# 
  4056     0610                     	;# 
  4057     0611                     	;# 
  4058     0612                     	;# 
  4059     0613                     	;# 
  4060     0614                     	;# 
  4061     0616                     	;# 
  4062     0617                     	;# 
  4063     0618                     	;# 
  4064     0619                     	;# 
  4065     061A                     	;# 
  4066     061B                     	;# 
  4067     061C                     	;# 
  4068     061D                     	;# 
  4069     061E                     	;# 
  4070     068C                     	;# 
  4071     068D                     	;# 
  4072     068E                     	;# 
  4073     068F                     	;# 
  4074     0690                     	;# 
  4075     0691                     	;# 
  4076     0692                     	;# 
  4077     0693                     	;# 
  4078     0694                     	;# 
  4079     070C                     	;# 
  4080     070D                     	;# 
  4081     070E                     	;# 
  4082     070F                     	;# 
  4083     0710                     	;# 
  4084     0711                     	;# 
  4085     0712                     	;# 
  4086     0713                     	;# 
  4087     0714                     	;# 
  4088     0716                     	;# 
  4089     0717                     	;# 
  4090     0718                     	;# 
  4091     0719                     	;# 
  4092     071A                     	;# 
  4093     071B                     	;# 
  4094     071C                     	;# 
  4095     071D                     	;# 
  4096     071E                     	;# 
  4097     0796                     	;# 
  4098     0797                     	;# 
  4099     0798                     	;# 
  4100     0799                     	;# 
  4101     079A                     	;# 
  4102     079B                     	;# 
  4103     080C                     	;# 
  4104     080D                     	;# 
  4105     080E                     	;# 
  4106     080F                     	;# 
  4107     0810                     	;# 
  4108     0811                     	;# 
  4109     0812                     	;# 
  4110     0813                     	;# 
  4111     0814                     	;# 
  4112     081A                     	;# 
  4113     081B                     	;# 
  4114     081C                     	;# 
  4115     081D                     	;# 
  4116     081E                     	;# 
  4117     081F                     	;# 
  4118     088C                     	;# 
  4119     088D                     	;# 
  4120     088E                     	;# 
  4121     088F                     	;# 
  4122     0890                     	;# 
  4123     0891                     	;# 
  4124     0892                     	;# 
  4125     0893                     	;# 
  4126     0895                     	;# 
  4127     0896                     	;# 
  4128     0897                     	;# 
  4129     0898                     	;# 
  4130     0899                     	;# 
  4131     089A                     	;# 
  4132     089B                     	;# 
  4133     090C                     	;# 
  4134     090E                     	;# 
  4135     090F                     	;# 
  4136     091F                     	;# 
  4137     091F                     	;# 
  4138     098F                     	;# 
  4139     098F                     	;# 
  4140     0990                     	;# 
  4141     0991                     	;# 
  4142     0992                     	;# 
  4143     0993                     	;# 
  4144     0994                     	;# 
  4145     0995                     	;# 
  4146     0996                     	;# 
  4147     0997                     	;# 
  4148     0E0F                     	;# 
  4149     0E10                     	;# 
  4150     0E11                     	;# 
  4151     0E12                     	;# 
  4152     0E13                     	;# 
  4153     0E14                     	;# 
  4154     0E15                     	;# 
  4155     0E16                     	;# 
  4156     0E17                     	;# 
  4157     0E18                     	;# 
  4158     0E19                     	;# 
  4159     0E1A                     	;# 
  4160     0E1B                     	;# 
  4161     0E1C                     	;# 
  4162     0E1D                     	;# 
  4163     0E1E                     	;# 
  4164     0E1F                     	;# 
  4165     0E20                     	;# 
  4166     0E21                     	;# 
  4167     0E22                     	;# 
  4168     0E23                     	;# 
  4169     0E24                     	;# 
  4170     0E25                     	;# 
  4171     0E26                     	;# 
  4172     0E27                     	;# 
  4173     0E28                     	;# 
  4174     0E29                     	;# 
  4175     0E2A                     	;# 
  4176     0E2B                     	;# 
  4177     0E2C                     	;# 
  4178     0E2D                     	;# 
  4179     0E2E                     	;# 
  4180     0E2F                     	;# 
  4181     0E30                     	;# 
  4182     0E31                     	;# 
  4183     0E32                     	;# 
  4184     0E33                     	;# 
  4185     0E34                     	;# 
  4186     0E35                     	;# 
  4187     0E36                     	;# 
  4188     0E37                     	;# 
  4189     0E8F                     	;# 
  4190     0E90                     	;# 
  4191     0E91                     	;# 
  4192     0E92                     	;# 
  4193     0E93                     	;# 
  4194     0E94                     	;# 
  4195     0E95                     	;# 
  4196     0E96                     	;# 
  4197     0E97                     	;# 
  4198     0E9C                     	;# 
  4199     0E9D                     	;# 
  4200     0E9E                     	;# 
  4201     0EA1                     	;# 
  4202     0EA2                     	;# 
  4203     0EA3                     	;# 
  4204     0EA4                     	;# 
  4205     0EA5                     	;# 
  4206     0EA9                     	;# 
  4207     0EAA                     	;# 
  4208     0EAB                     	;# 
  4209     0EAC                     	;# 
  4210     0EB1                     	;# 
  4211     0EB2                     	;# 
  4212     0EB3                     	;# 
  4213     0EB8                     	;# 
  4214     0EB9                     	;# 
  4215     0EBA                     	;# 
  4216     0EBB                     	;# 
  4217     0EBC                     	;# 
  4218     0EBD                     	;# 
  4219     0EBE                     	;# 
  4220     0EC3                     	;# 
  4221     0EC5                     	;# 
  4222     0EC6                     	;# 
  4223     0EC7                     	;# 
  4224     0EC8                     	;# 
  4225     0EC9                     	;# 
  4226     0ECA                     	;# 
  4227     0ECB                     	;# 
  4228     0ECC                     	;# 
  4229     0F10                     	;# 
  4230     0F11                     	;# 
  4231     0F12                     	;# 
  4232     0F13                     	;# 
  4233     0F14                     	;# 
  4234     0F15                     	;# 
  4235     0F16                     	;# 
  4236     0F17                     	;# 
  4237     0F18                     	;# 
  4238     0F19                     	;# 
  4239     0F1A                     	;# 
  4240     0F1B                     	;# 
  4241     0F1C                     	;# 
  4242     0F1D                     	;# 
  4243     0F1E                     	;# 
  4244     0F1F                     	;# 
  4245     0F20                     	;# 
  4246     0F21                     	;# 
  4247     0F22                     	;# 
  4248     0F23                     	;# 
  4249     0F24                     	;# 
  4250     0F25                     	;# 
  4251     0F26                     	;# 
  4252     0F27                     	;# 
  4253     0F38                     	;# 
  4254     0F39                     	;# 
  4255     0F3A                     	;# 
  4256     0F3B                     	;# 
  4257     0F3C                     	;# 
  4258     0F3D                     	;# 
  4259     0F3E                     	;# 
  4260     0F3F                     	;# 
  4261     0F40                     	;# 
  4262     0F41                     	;# 
  4263     0F43                     	;# 
  4264     0F44                     	;# 
  4265     0F45                     	;# 
  4266     0F46                     	;# 
  4267     0F47                     	;# 
  4268     0F48                     	;# 
  4269     0F49                     	;# 
  4270     0F4A                     	;# 
  4271     0F4B                     	;# 
  4272     0F4C                     	;# 
  4273     0F4E                     	;# 
  4274     0F4F                     	;# 
  4275     0F50                     	;# 
  4276     0F51                     	;# 
  4277     0F52                     	;# 
  4278     0F53                     	;# 
  4279     0F54                     	;# 
  4280     0F55                     	;# 
  4281     0F56                     	;# 
  4282     0F57                     	;# 
  4283     0F65                     	;# 
  4284     0F68                     	;# 
  4285     0F69                     	;# 
  4286     0F6A                     	;# 
  4287     0F6B                     	;# 
  4288     0FE4                     	;# 
  4289     0FE5                     	;# 
  4290     0FE6                     	;# 
  4291     0FE7                     	;# 
  4292     0FE8                     	;# 
  4293     0FE9                     	;# 
  4294     0FEA                     	;# 
  4295     0FEB                     	;# 
  4296     0FED                     	;# 
  4297     0FEE                     	;# 
  4298     0FEF                     	;# 
  4299     0000                     	;# 
  4300     0001                     	;# 
  4301     0002                     	;# 
  4302     0003                     	;# 
  4303     0004                     	;# 
  4304     0005                     	;# 
  4305     0006                     	;# 
  4306     0007                     	;# 
  4307     0008                     	;# 
  4308     0009                     	;# 
  4309     000A                     	;# 
  4310     000B                     	;# 
  4311     000C                     	;# 
  4312     000D                     	;# 
  4313     000E                     	;# 
  4314     0010                     	;# 
  4315     0011                     	;# 
  4316     0012                     	;# 
  4317     0013                     	;# 
  4318     0016                     	;# 
  4319     0017                     	;# 
  4320     0018                     	;# 
  4321     001C                     	;# 
  4322     001C                     	;# 
  4323     001D                     	;# 
  4324     001D                     	;# 
  4325     001E                     	;# 
  4326     001F                     	;# 
  4327     008C                     	;# 
  4328     008C                     	;# 
  4329     008D                     	;# 
  4330     008E                     	;# 
  4331     008E                     	;# 
  4332     008F                     	;# 
  4333     0090                     	;# 
  4334     0090                     	;# 
  4335     0091                     	;# 
  4336     0093                     	;# 
  4337     0094                     	;# 
  4338     0095                     	;# 
  4339     0096                     	;# 
  4340     0097                     	;# 
  4341     0098                     	;# 
  4342     0099                     	;# 
  4343     009A                     	;# 
  4344     009B                     	;# 
  4345     009C                     	;# 
  4346     009D                     	;# 
  4347     009E                     	;# 
  4348     010C                     	;# 
  4349     010D                     	;# 
  4350     010E                     	;# 
  4351     010E                     	;# 
  4352     010F                     	;# 
  4353     0110                     	;# 
  4354     0110                     	;# 
  4355     0111                     	;# 
  4356     0112                     	;# 
  4357     0112                     	;# 
  4358     0113                     	;# 
  4359     0114                     	;# 
  4360     0114                     	;# 
  4361     0115                     	;# 
  4362     0116                     	;# 
  4363     0116                     	;# 
  4364     0117                     	;# 
  4365     0119                     	;# 
  4366     0119                     	;# 
  4367     0119                     	;# 
  4368     011A                     	;# 
  4369     011A                     	;# 
  4370     011A                     	;# 
  4371     011B                     	;# 
  4372     011B                     	;# 
  4373     011B                     	;# 
  4374     011B                     	;# 
  4375     011B                     	;# 
  4376     011C                     	;# 
  4377     011C                     	;# 
  4378     011C                     	;# 
  4379     011D                     	;# 
  4380     011D                     	;# 
  4381     011D                     	;# 
  4382     011E                     	;# 
  4383     011E                     	;# 
  4384     011E                     	;# 
  4385     011F                     	;# 
  4386     011F                     	;# 
  4387     011F                     	;# 
  4388     011F                     	;# 
  4389     011F                     	;# 
  4390     018C                     	;# 
  4391     018D                     	;# 
  4392     018E                     	;# 
  4393     018F                     	;# 
  4394     0190                     	;# 
  4395     0191                     	;# 
  4396     0192                     	;# 
  4397     0196                     	;# 
  4398     0197                     	;# 
  4399     0198                     	;# 
  4400     0199                     	;# 
  4401     019A                     	;# 
  4402     019B                     	;# 
  4403     019C                     	;# 
  4404     020C                     	;# 
  4405     020C                     	;# 
  4406     020D                     	;# 
  4407     020E                     	;# 
  4408     020F                     	;# 
  4409     020F                     	;# 
  4410     0210                     	;# 
  4411     0210                     	;# 
  4412     0211                     	;# 
  4413     0211                     	;# 
  4414     0212                     	;# 
  4415     0212                     	;# 
  4416     0213                     	;# 
  4417     0214                     	;# 
  4418     0215                     	;# 
  4419     0215                     	;# 
  4420     0216                     	;# 
  4421     0216                     	;# 
  4422     0217                     	;# 
  4423     0217                     	;# 
  4424     0218                     	;# 
  4425     0218                     	;# 
  4426     0219                     	;# 
  4427     021A                     	;# 
  4428     021B                     	;# 
  4429     021B                     	;# 
  4430     021C                     	;# 
  4431     021C                     	;# 
  4432     021D                     	;# 
  4433     021D                     	;# 
  4434     021E                     	;# 
  4435     021F                     	;# 
  4436     028C                     	;# 
  4437     028C                     	;# 
  4438     028D                     	;# 
  4439     028D                     	;# 
  4440     028E                     	;# 
  4441     028F                     	;# 
  4442     0290                     	;# 
  4443     0290                     	;# 
  4444     0291                     	;# 
  4445     0292                     	;# 
  4446     0292                     	;# 
  4447     0293                     	;# 
  4448     0293                     	;# 
  4449     0294                     	;# 
  4450     0295                     	;# 
  4451     0296                     	;# 
  4452     0296                     	;# 
  4453     0297                     	;# 
  4454     0298                     	;# 
  4455     0298                     	;# 
  4456     0299                     	;# 
  4457     0299                     	;# 
  4458     029A                     	;# 
  4459     029B                     	;# 
  4460     029C                     	;# 
  4461     029C                     	;# 
  4462     029D                     	;# 
  4463     030C                     	;# 
  4464     030C                     	;# 
  4465     030D                     	;# 
  4466     030E                     	;# 
  4467     030F                     	;# 
  4468     0310                     	;# 
  4469     0310                     	;# 
  4470     0311                     	;# 
  4471     0312                     	;# 
  4472     0313                     	;# 
  4473     0314                     	;# 
  4474     0314                     	;# 
  4475     0315                     	;# 
  4476     0316                     	;# 
  4477     0317                     	;# 
  4478     0318                     	;# 
  4479     0318                     	;# 
  4480     0319                     	;# 
  4481     031A                     	;# 
  4482     031B                     	;# 
  4483     031C                     	;# 
  4484     031C                     	;# 
  4485     031D                     	;# 
  4486     031E                     	;# 
  4487     031F                     	;# 
  4488     038C                     	;# 
  4489     038C                     	;# 
  4490     038D                     	;# 
  4491     038E                     	;# 
  4492     0390                     	;# 
  4493     0390                     	;# 
  4494     0391                     	;# 
  4495     0392                     	;# 
  4496     040C                     	;# 
  4497     040D                     	;# 
  4498     040E                     	;# 
  4499     040F                     	;# 
  4500     0410                     	;# 
  4501     0411                     	;# 
  4502     0416                     	;# 
  4503     0416                     	;# 
  4504     0417                     	;# 
  4505     0418                     	;# 
  4506     0418                     	;# 
  4507     0419                     	;# 
  4508     041A                     	;# 
  4509     041A                     	;# 
  4510     041B                     	;# 
  4511     041C                     	;# 
  4512     041C                     	;# 
  4513     041D                     	;# 
  4514     041E                     	;# 
  4515     041F                     	;# 
  4516     048C                     	;# 
  4517     048C                     	;# 
  4518     048D                     	;# 
  4519     048E                     	;# 
  4520     048F                     	;# 
  4521     048F                     	;# 
  4522     0490                     	;# 
  4523     0491                     	;# 
  4524     0492                     	;# 
  4525     0492                     	;# 
  4526     0493                     	;# 
  4527     0494                     	;# 
  4528     0495                     	;# 
  4529     0495                     	;# 
  4530     0496                     	;# 
  4531     0497                     	;# 
  4532     0498                     	;# 
  4533     0499                     	;# 
  4534     049A                     	;# 
  4535     049B                     	;# 
  4536     049C                     	;# 
  4537     049D                     	;# 
  4538     050C                     	;# 
  4539     050C                     	;# 
  4540     050D                     	;# 
  4541     050E                     	;# 
  4542     050F                     	;# 
  4543     050F                     	;# 
  4544     0510                     	;# 
  4545     0511                     	;# 
  4546     0512                     	;# 
  4547     0512                     	;# 
  4548     0513                     	;# 
  4549     0514                     	;# 
  4550     0515                     	;# 
  4551     0515                     	;# 
  4552     0516                     	;# 
  4553     0517                     	;# 
  4554     0518                     	;# 
  4555     0519                     	;# 
  4556     051A                     	;# 
  4557     051B                     	;# 
  4558     051C                     	;# 
  4559     051D                     	;# 
  4560     058C                     	;# 
  4561     058C                     	;# 
  4562     058D                     	;# 
  4563     058E                     	;# 
  4564     058F                     	;# 
  4565     058F                     	;# 
  4566     0590                     	;# 
  4567     0591                     	;# 
  4568     0592                     	;# 
  4569     0593                     	;# 
  4570     060C                     	;# 
  4571     060D                     	;# 
  4572     060E                     	;# 
  4573     060F                     	;# 
  4574     0610                     	;# 
  4575     0611                     	;# 
  4576     0612                     	;# 
  4577     0613                     	;# 
  4578     0614                     	;# 
  4579     0616                     	;# 
  4580     0617                     	;# 
  4581     0618                     	;# 
  4582     0619                     	;# 
  4583     061A                     	;# 
  4584     061B                     	;# 
  4585     061C                     	;# 
  4586     061D                     	;# 
  4587     061E                     	;# 
  4588     068C                     	;# 
  4589     068D                     	;# 
  4590     068E                     	;# 
  4591     068F                     	;# 
  4592     0690                     	;# 
  4593     0691                     	;# 
  4594     0692                     	;# 
  4595     0693                     	;# 
  4596     0694                     	;# 
  4597     070C                     	;# 
  4598     070D                     	;# 
  4599     070E                     	;# 
  4600     070F                     	;# 
  4601     0710                     	;# 
  4602     0711                     	;# 
  4603     0712                     	;# 
  4604     0713                     	;# 
  4605     0714                     	;# 
  4606     0716                     	;# 
  4607     0717                     	;# 
  4608     0718                     	;# 
  4609     0719                     	;# 
  4610     071A                     	;# 
  4611     071B                     	;# 
  4612     071C                     	;# 
  4613     071D                     	;# 
  4614     071E                     	;# 
  4615     0796                     	;# 
  4616     0797                     	;# 
  4617     0798                     	;# 
  4618     0799                     	;# 
  4619     079A                     	;# 
  4620     079B                     	;# 
  4621     080C                     	;# 
  4622     080D                     	;# 
  4623     080E                     	;# 
  4624     080F                     	;# 
  4625     0810                     	;# 
  4626     0811                     	;# 
  4627     0812                     	;# 
  4628     0813                     	;# 
  4629     0814                     	;# 
  4630     081A                     	;# 
  4631     081B                     	;# 
  4632     081C                     	;# 
  4633     081D                     	;# 
  4634     081E                     	;# 
  4635     081F                     	;# 
  4636     088C                     	;# 
  4637     088D                     	;# 
  4638     088E                     	;# 
  4639     088F                     	;# 
  4640     0890                     	;# 
  4641     0891                     	;# 
  4642     0892                     	;# 
  4643     0893                     	;# 
  4644     0895                     	;# 
  4645     0896                     	;# 
  4646     0897                     	;# 
  4647     0898                     	;# 
  4648     0899                     	;# 
  4649     089A                     	;# 
  4650     089B                     	;# 
  4651     090C                     	;# 
  4652     090E                     	;# 
  4653     090F                     	;# 
  4654     091F                     	;# 
  4655     091F                     	;# 
  4656     098F                     	;# 
  4657     098F                     	;# 
  4658     0990                     	;# 
  4659     0991                     	;# 
  4660     0992                     	;# 
  4661     0993                     	;# 
  4662     0994                     	;# 
  4663     0995                     	;# 
  4664     0996                     	;# 
  4665     0997                     	;# 
  4666     0E0F                     	;# 
  4667     0E10                     	;# 
  4668     0E11                     	;# 
  4669     0E12                     	;# 
  4670     0E13                     	;# 
  4671     0E14                     	;# 
  4672     0E15                     	;# 
  4673     0E16                     	;# 
  4674     0E17                     	;# 
  4675     0E18                     	;# 
  4676     0E19                     	;# 
  4677     0E1A                     	;# 
  4678     0E1B                     	;# 
  4679     0E1C                     	;# 
  4680     0E1D                     	;# 
  4681     0E1E                     	;# 
  4682     0E1F                     	;# 
  4683     0E20                     	;# 
  4684     0E21                     	;# 
  4685     0E22                     	;# 
  4686     0E23                     	;# 
  4687     0E24                     	;# 
  4688     0E25                     	;# 
  4689     0E26                     	;# 
  4690     0E27                     	;# 
  4691     0E28                     	;# 
  4692     0E29                     	;# 
  4693     0E2A                     	;# 
  4694     0E2B                     	;# 
  4695     0E2C                     	;# 
  4696     0E2D                     	;# 
  4697     0E2E                     	;# 
  4698     0E2F                     	;# 
  4699     0E30                     	;# 
  4700     0E31                     	;# 
  4701     0E32                     	;# 
  4702     0E33                     	;# 
  4703     0E34                     	;# 
  4704     0E35                     	;# 
  4705     0E36                     	;# 
  4706     0E37                     	;# 
  4707     0E8F                     	;# 
  4708     0E90                     	;# 
  4709     0E91                     	;# 
  4710     0E92                     	;# 
  4711     0E93                     	;# 
  4712     0E94                     	;# 
  4713     0E95                     	;# 
  4714     0E96                     	;# 
  4715     0E97                     	;# 
  4716     0E9C                     	;# 
  4717     0E9D                     	;# 
  4718     0E9E                     	;# 
  4719     0EA1                     	;# 
  4720     0EA2                     	;# 
  4721     0EA3                     	;# 
  4722     0EA4                     	;# 
  4723     0EA5                     	;# 
  4724     0EA9                     	;# 
  4725     0EAA                     	;# 
  4726     0EAB                     	;# 
  4727     0EAC                     	;# 
  4728     0EB1                     	;# 
  4729     0EB2                     	;# 
  4730     0EB3                     	;# 
  4731     0EB8                     	;# 
  4732     0EB9                     	;# 
  4733     0EBA                     	;# 
  4734     0EBB                     	;# 
  4735     0EBC                     	;# 
  4736     0EBD                     	;# 
  4737     0EBE                     	;# 
  4738     0EC3                     	;# 
  4739     0EC5                     	;# 
  4740     0EC6                     	;# 
  4741     0EC7                     	;# 
  4742     0EC8                     	;# 
  4743     0EC9                     	;# 
  4744     0ECA                     	;# 
  4745     0ECB                     	;# 
  4746     0ECC                     	;# 
  4747     0F10                     	;# 
  4748     0F11                     	;# 
  4749     0F12                     	;# 
  4750     0F13                     	;# 
  4751     0F14                     	;# 
  4752     0F15                     	;# 
  4753     0F16                     	;# 
  4754     0F17                     	;# 
  4755     0F18                     	;# 
  4756     0F19                     	;# 
  4757     0F1A                     	;# 
  4758     0F1B                     	;# 
  4759     0F1C                     	;# 
  4760     0F1D                     	;# 
  4761     0F1E                     	;# 
  4762     0F1F                     	;# 
  4763     0F20                     	;# 
  4764     0F21                     	;# 
  4765     0F22                     	;# 
  4766     0F23                     	;# 
  4767     0F24                     	;# 
  4768     0F25                     	;# 
  4769     0F26                     	;# 
  4770     0F27                     	;# 
  4771     0F38                     	;# 
  4772     0F39                     	;# 
  4773     0F3A                     	;# 
  4774     0F3B                     	;# 
  4775     0F3C                     	;# 
  4776     0F3D                     	;# 
  4777     0F3E                     	;# 
  4778     0F3F                     	;# 
  4779     0F40                     	;# 
  4780     0F41                     	;# 
  4781     0F43                     	;# 
  4782     0F44                     	;# 
  4783     0F45                     	;# 
  4784     0F46                     	;# 
  4785     0F47                     	;# 
  4786     0F48                     	;# 
  4787     0F49                     	;# 
  4788     0F4A                     	;# 
  4789     0F4B                     	;# 
  4790     0F4C                     	;# 
  4791     0F4E                     	;# 
  4792     0F4F                     	;# 
  4793     0F50                     	;# 
  4794     0F51                     	;# 
  4795     0F52                     	;# 
  4796     0F53                     	;# 
  4797     0F54                     	;# 
  4798     0F55                     	;# 
  4799     0F56                     	;# 
  4800     0F57                     	;# 
  4801     0F65                     	;# 
  4802     0F68                     	;# 
  4803     0F69                     	;# 
  4804     0F6A                     	;# 
  4805     0F6B                     	;# 
  4806     0FE4                     	;# 
  4807     0FE5                     	;# 
  4808     0FE6                     	;# 
  4809     0FE7                     	;# 
  4810     0FE8                     	;# 
  4811     0FE9                     	;# 
  4812     0FEA                     	;# 
  4813     0FEB                     	;# 
  4814     0FED                     	;# 
  4815     0FEE                     	;# 
  4816     0FEF                     	;# 
  4817     0000                     	;# 
  4818     0001                     	;# 
  4819     0002                     	;# 
  4820     0003                     	;# 
  4821     0004                     	;# 
  4822     0005                     	;# 
  4823     0006                     	;# 
  4824     0007                     	;# 
  4825     0008                     	;# 
  4826     0009                     	;# 
  4827     000A                     	;# 
  4828     000B                     	;# 
  4829     000C                     	;# 
  4830     000D                     	;# 
  4831     000E                     	;# 
  4832     0010                     	;# 
  4833     0011                     	;# 
  4834     0012                     	;# 
  4835     0013                     	;# 
  4836     0016                     	;# 
  4837     0017                     	;# 
  4838     0018                     	;# 
  4839     001C                     	;# 
  4840     001C                     	;# 
  4841     001D                     	;# 
  4842     001D                     	;# 
  4843     001E                     	;# 
  4844     001F                     	;# 
  4845     008C                     	;# 
  4846     008C                     	;# 
  4847     008D                     	;# 
  4848     008E                     	;# 
  4849     008E                     	;# 
  4850     008F                     	;# 
  4851     0090                     	;# 
  4852     0090                     	;# 
  4853     0091                     	;# 
  4854     0093                     	;# 
  4855     0094                     	;# 
  4856     0095                     	;# 
  4857     0096                     	;# 
  4858     0097                     	;# 
  4859     0098                     	;# 
  4860     0099                     	;# 
  4861     009A                     	;# 
  4862     009B                     	;# 
  4863     009C                     	;# 
  4864     009D                     	;# 
  4865     009E                     	;# 
  4866     010C                     	;# 
  4867     010D                     	;# 
  4868     010E                     	;# 
  4869     010E                     	;# 
  4870     010F                     	;# 
  4871     0110                     	;# 
  4872     0110                     	;# 
  4873     0111                     	;# 
  4874     0112                     	;# 
  4875     0112                     	;# 
  4876     0113                     	;# 
  4877     0114                     	;# 
  4878     0114                     	;# 
  4879     0115                     	;# 
  4880     0116                     	;# 
  4881     0116                     	;# 
  4882     0117                     	;# 
  4883     0119                     	;# 
  4884     0119                     	;# 
  4885     0119                     	;# 
  4886     011A                     	;# 
  4887     011A                     	;# 
  4888     011A                     	;# 
  4889     011B                     	;# 
  4890     011B                     	;# 
  4891     011B                     	;# 
  4892     011B                     	;# 
  4893     011B                     	;# 
  4894     011C                     	;# 
  4895     011C                     	;# 
  4896     011C                     	;# 
  4897     011D                     	;# 
  4898     011D                     	;# 
  4899     011D                     	;# 
  4900     011E                     	;# 
  4901     011E                     	;# 
  4902     011E                     	;# 
  4903     011F                     	;# 
  4904     011F                     	;# 
  4905     011F                     	;# 
  4906     011F                     	;# 
  4907     011F                     	;# 
  4908     018C                     	;# 
  4909     018D                     	;# 
  4910     018E                     	;# 
  4911     018F                     	;# 
  4912     0190                     	;# 
  4913     0191                     	;# 
  4914     0192                     	;# 
  4915     0196                     	;# 
  4916     0197                     	;# 
  4917     0198                     	;# 
  4918     0199                     	;# 
  4919     019A                     	;# 
  4920     019B                     	;# 
  4921     019C                     	;# 
  4922     020C                     	;# 
  4923     020C                     	;# 
  4924     020D                     	;# 
  4925     020E                     	;# 
  4926     020F                     	;# 
  4927     020F                     	;# 
  4928     0210                     	;# 
  4929     0210                     	;# 
  4930     0211                     	;# 
  4931     0211                     	;# 
  4932     0212                     	;# 
  4933     0212                     	;# 
  4934     0213                     	;# 
  4935     0214                     	;# 
  4936     0215                     	;# 
  4937     0215                     	;# 
  4938     0216                     	;# 
  4939     0216                     	;# 
  4940     0217                     	;# 
  4941     0217                     	;# 
  4942     0218                     	;# 
  4943     0218                     	;# 
  4944     0219                     	;# 
  4945     021A                     	;# 
  4946     021B                     	;# 
  4947     021B                     	;# 
  4948     021C                     	;# 
  4949     021C                     	;# 
  4950     021D                     	;# 
  4951     021D                     	;# 
  4952     021E                     	;# 
  4953     021F                     	;# 
  4954     028C                     	;# 
  4955     028C                     	;# 
  4956     028D                     	;# 
  4957     028D                     	;# 
  4958     028E                     	;# 
  4959     028F                     	;# 
  4960     0290                     	;# 
  4961     0290                     	;# 
  4962     0291                     	;# 
  4963     0292                     	;# 
  4964     0292                     	;# 
  4965     0293                     	;# 
  4966     0293                     	;# 
  4967     0294                     	;# 
  4968     0295                     	;# 
  4969     0296                     	;# 
  4970     0296                     	;# 
  4971     0297                     	;# 
  4972     0298                     	;# 
  4973     0298                     	;# 
  4974     0299                     	;# 
  4975     0299                     	;# 
  4976     029A                     	;# 
  4977     029B                     	;# 
  4978     029C                     	;# 
  4979     029C                     	;# 
  4980     029D                     	;# 
  4981     030C                     	;# 
  4982     030C                     	;# 
  4983     030D                     	;# 
  4984     030E                     	;# 
  4985     030F                     	;# 
  4986     0310                     	;# 
  4987     0310                     	;# 
  4988     0311                     	;# 
  4989     0312                     	;# 
  4990     0313                     	;# 
  4991     0314                     	;# 
  4992     0314                     	;# 
  4993     0315                     	;# 
  4994     0316                     	;# 
  4995     0317                     	;# 
  4996     0318                     	;# 
  4997     0318                     	;# 
  4998     0319                     	;# 
  4999     031A                     	;# 
  5000     031B                     	;# 
  5001     031C                     	;# 
  5002     031C                     	;# 
  5003     031D                     	;# 
  5004     031E                     	;# 
  5005     031F                     	;# 
  5006     038C                     	;# 
  5007     038C                     	;# 
  5008     038D                     	;# 
  5009     038E                     	;# 
  5010     0390                     	;# 
  5011     0390                     	;# 
  5012     0391                     	;# 
  5013     0392                     	;# 
  5014     040C                     	;# 
  5015     040D                     	;# 
  5016     040E                     	;# 
  5017     040F                     	;# 
  5018     0410                     	;# 
  5019     0411                     	;# 
  5020     0416                     	;# 
  5021     0416                     	;# 
  5022     0417                     	;# 
  5023     0418                     	;# 
  5024     0418                     	;# 
  5025     0419                     	;# 
  5026     041A                     	;# 
  5027     041A                     	;# 
  5028     041B                     	;# 
  5029     041C                     	;# 
  5030     041C                     	;# 
  5031     041D                     	;# 
  5032     041E                     	;# 
  5033     041F                     	;# 
  5034     048C                     	;# 
  5035     048C                     	;# 
  5036     048D                     	;# 
  5037     048E                     	;# 
  5038     048F                     	;# 
  5039     048F                     	;# 
  5040     0490                     	;# 
  5041     0491                     	;# 
  5042     0492                     	;# 
  5043     0492                     	;# 
  5044     0493                     	;# 
  5045     0494                     	;# 
  5046     0495                     	;# 
  5047     0495                     	;# 
  5048     0496                     	;# 
  5049     0497                     	;# 
  5050     0498                     	;# 
  5051     0499                     	;# 
  5052     049A                     	;# 
  5053     049B                     	;# 
  5054     049C                     	;# 
  5055     049D                     	;# 
  5056     050C                     	;# 
  5057     050C                     	;# 
  5058     050D                     	;# 
  5059     050E                     	;# 
  5060     050F                     	;# 
  5061     050F                     	;# 
  5062     0510                     	;# 
  5063     0511                     	;# 
  5064     0512                     	;# 
  5065     0512                     	;# 
  5066     0513                     	;# 
  5067     0514                     	;# 
  5068     0515                     	;# 
  5069     0515                     	;# 
  5070     0516                     	;# 
  5071     0517                     	;# 
  5072     0518                     	;# 
  5073     0519                     	;# 
  5074     051A                     	;# 
  5075     051B                     	;# 
  5076     051C                     	;# 
  5077     051D                     	;# 
  5078     058C                     	;# 
  5079     058C                     	;# 
  5080     058D                     	;# 
  5081     058E                     	;# 
  5082     058F                     	;# 
  5083     058F                     	;# 
  5084     0590                     	;# 
  5085     0591                     	;# 
  5086     0592                     	;# 
  5087     0593                     	;# 
  5088     060C                     	;# 
  5089     060D                     	;# 
  5090     060E                     	;# 
  5091     060F                     	;# 
  5092     0610                     	;# 
  5093     0611                     	;# 
  5094     0612                     	;# 
  5095     0613                     	;# 
  5096     0614                     	;# 
  5097     0616                     	;# 
  5098     0617                     	;# 
  5099     0618                     	;# 
  5100     0619                     	;# 
  5101     061A                     	;# 
  5102     061B                     	;# 
  5103     061C                     	;# 
  5104     061D                     	;# 
  5105     061E                     	;# 
  5106     068C                     	;# 
  5107     068D                     	;# 
  5108     068E                     	;# 
  5109     068F                     	;# 
  5110     0690                     	;# 
  5111     0691                     	;# 
  5112     0692                     	;# 
  5113     0693                     	;# 
  5114     0694                     	;# 
  5115     070C                     	;# 
  5116     070D                     	;# 
  5117     070E                     	;# 
  5118     070F                     	;# 
  5119     0710                     	;# 
  5120     0711                     	;# 
  5121     0712                     	;# 
  5122     0713                     	;# 
  5123     0714                     	;# 
  5124     0716                     	;# 
  5125     0717                     	;# 
  5126     0718                     	;# 
  5127     0719                     	;# 
  5128     071A                     	;# 
  5129     071B                     	;# 
  5130     071C                     	;# 
  5131     071D                     	;# 
  5132     071E                     	;# 
  5133     0796                     	;# 
  5134     0797                     	;# 
  5135     0798                     	;# 
  5136     0799                     	;# 
  5137     079A                     	;# 
  5138     079B                     	;# 
  5139     080C                     	;# 
  5140     080D                     	;# 
  5141     080E                     	;# 
  5142     080F                     	;# 
  5143     0810                     	;# 
  5144     0811                     	;# 
  5145     0812                     	;# 
  5146     0813                     	;# 
  5147     0814                     	;# 
  5148     081A                     	;# 
  5149     081B                     	;# 
  5150     081C                     	;# 
  5151     081D                     	;# 
  5152     081E                     	;# 
  5153     081F                     	;# 
  5154     088C                     	;# 
  5155     088D                     	;# 
  5156     088E                     	;# 
  5157     088F                     	;# 
  5158     0890                     	;# 
  5159     0891                     	;# 
  5160     0892                     	;# 
  5161     0893                     	;# 
  5162     0895                     	;# 
  5163     0896                     	;# 
  5164     0897                     	;# 
  5165     0898                     	;# 
  5166     0899                     	;# 
  5167     089A                     	;# 
  5168     089B                     	;# 
  5169     090C                     	;# 
  5170     090E                     	;# 
  5171     090F                     	;# 
  5172     091F                     	;# 
  5173     091F                     	;# 
  5174     098F                     	;# 
  5175     098F                     	;# 
  5176     0990                     	;# 
  5177     0991                     	;# 
  5178     0992                     	;# 
  5179     0993                     	;# 
  5180     0994                     	;# 
  5181     0995                     	;# 
  5182     0996                     	;# 
  5183     0997                     	;# 
  5184     0E0F                     	;# 
  5185     0E10                     	;# 
  5186     0E11                     	;# 
  5187     0E12                     	;# 
  5188     0E13                     	;# 
  5189     0E14                     	;# 
  5190     0E15                     	;# 
  5191     0E16                     	;# 
  5192     0E17                     	;# 
  5193     0E18                     	;# 
  5194     0E19                     	;# 
  5195     0E1A                     	;# 
  5196     0E1B                     	;# 
  5197     0E1C                     	;# 
  5198     0E1D                     	;# 
  5199     0E1E                     	;# 
  5200     0E1F                     	;# 
  5201     0E20                     	;# 
  5202     0E21                     	;# 
  5203     0E22                     	;# 
  5204     0E23                     	;# 
  5205     0E24                     	;# 
  5206     0E25                     	;# 
  5207     0E26                     	;# 
  5208     0E27                     	;# 
  5209     0E28                     	;# 
  5210     0E29                     	;# 
  5211     0E2A                     	;# 
  5212     0E2B                     	;# 
  5213     0E2C                     	;# 
  5214     0E2D                     	;# 
  5215     0E2E                     	;# 
  5216     0E2F                     	;# 
  5217     0E30                     	;# 
  5218     0E31                     	;# 
  5219     0E32                     	;# 
  5220     0E33                     	;# 
  5221     0E34                     	;# 
  5222     0E35                     	;# 
  5223     0E36                     	;# 
  5224     0E37                     	;# 
  5225     0E8F                     	;# 
  5226     0E90                     	;# 
  5227     0E91                     	;# 
  5228     0E92                     	;# 
  5229     0E93                     	;# 
  5230     0E94                     	;# 
  5231     0E95                     	;# 
  5232     0E96                     	;# 
  5233     0E97                     	;# 
  5234     0E9C                     	;# 
  5235     0E9D                     	;# 
  5236     0E9E                     	;# 
  5237     0EA1                     	;# 
  5238     0EA2                     	;# 
  5239     0EA3                     	;# 
  5240     0EA4                     	;# 
  5241     0EA5                     	;# 
  5242     0EA9                     	;# 
  5243     0EAA                     	;# 
  5244     0EAB                     	;# 
  5245     0EAC                     	;# 
  5246     0EB1                     	;# 
  5247     0EB2                     	;# 
  5248     0EB3                     	;# 
  5249     0EB8                     	;# 
  5250     0EB9                     	;# 
  5251     0EBA                     	;# 
  5252     0EBB                     	;# 
  5253     0EBC                     	;# 
  5254     0EBD                     	;# 
  5255     0EBE                     	;# 
  5256     0EC3                     	;# 
  5257     0EC5                     	;# 
  5258     0EC6                     	;# 
  5259     0EC7                     	;# 
  5260     0EC8                     	;# 
  5261     0EC9                     	;# 
  5262     0ECA                     	;# 
  5263     0ECB                     	;# 
  5264     0ECC                     	;# 
  5265     0F10                     	;# 
  5266     0F11                     	;# 
  5267     0F12                     	;# 
  5268     0F13                     	;# 
  5269     0F14                     	;# 
  5270     0F15                     	;# 
  5271     0F16                     	;# 
  5272     0F17                     	;# 
  5273     0F18                     	;# 
  5274     0F19                     	;# 
  5275     0F1A                     	;# 
  5276     0F1B                     	;# 
  5277     0F1C                     	;# 
  5278     0F1D                     	;# 
  5279     0F1E                     	;# 
  5280     0F1F                     	;# 
  5281     0F20                     	;# 
  5282     0F21                     	;# 
  5283     0F22                     	;# 
  5284     0F23                     	;# 
  5285     0F24                     	;# 
  5286     0F25                     	;# 
  5287     0F26                     	;# 
  5288     0F27                     	;# 
  5289     0F38                     	;# 
  5290     0F39                     	;# 
  5291     0F3A                     	;# 
  5292     0F3B                     	;# 
  5293     0F3C                     	;# 
  5294     0F3D                     	;# 
  5295     0F3E                     	;# 
  5296     0F3F                     	;# 
  5297     0F40                     	;# 
  5298     0F41                     	;# 
  5299     0F43                     	;# 
  5300     0F44                     	;# 
  5301     0F45                     	;# 
  5302     0F46                     	;# 
  5303     0F47                     	;# 
  5304     0F48                     	;# 
  5305     0F49                     	;# 
  5306     0F4A                     	;# 
  5307     0F4B                     	;# 
  5308     0F4C                     	;# 
  5309     0F4E                     	;# 
  5310     0F4F                     	;# 
  5311     0F50                     	;# 
  5312     0F51                     	;# 
  5313     0F52                     	;# 
  5314     0F53                     	;# 
  5315     0F54                     	;# 
  5316     0F55                     	;# 
  5317     0F56                     	;# 
  5318     0F57                     	;# 
  5319     0F65                     	;# 
  5320     0F68                     	;# 
  5321     0F69                     	;# 
  5322     0F6A                     	;# 
  5323     0F6B                     	;# 
  5324     0FE4                     	;# 
  5325     0FE5                     	;# 
  5326     0FE6                     	;# 
  5327     0FE7                     	;# 
  5328     0FE8                     	;# 
  5329     0FE9                     	;# 
  5330     0FEA                     	;# 
  5331     0FEB                     	;# 
  5332     0FED                     	;# 
  5333     0FEE                     	;# 
  5334     0FEF                     	;# 
  5335     0000                     	;# 
  5336     0001                     	;# 
  5337     0002                     	;# 
  5338     0003                     	;# 
  5339     0004                     	;# 
  5340     0005                     	;# 
  5341     0006                     	;# 
  5342     0007                     	;# 
  5343     0008                     	;# 
  5344     0009                     	;# 
  5345     000A                     	;# 
  5346     000B                     	;# 
  5347     000C                     	;# 
  5348     000D                     	;# 
  5349     000E                     	;# 
  5350     0010                     	;# 
  5351     0011                     	;# 
  5352     0012                     	;# 
  5353     0013                     	;# 
  5354     0016                     	;# 
  5355     0017                     	;# 
  5356     0018                     	;# 
  5357     001C                     	;# 
  5358     001C                     	;# 
  5359     001D                     	;# 
  5360     001D                     	;# 
  5361     001E                     	;# 
  5362     001F                     	;# 
  5363     008C                     	;# 
  5364     008C                     	;# 
  5365     008D                     	;# 
  5366     008E                     	;# 
  5367     008E                     	;# 
  5368     008F                     	;# 
  5369     0090                     	;# 
  5370     0090                     	;# 
  5371     0091                     	;# 
  5372     0093                     	;# 
  5373     0094                     	;# 
  5374     0095                     	;# 
  5375     0096                     	;# 
  5376     0097                     	;# 
  5377     0098                     	;# 
  5378     0099                     	;# 
  5379     009A                     	;# 
  5380     009B                     	;# 
  5381     009C                     	;# 
  5382     009D                     	;# 
  5383     009E                     	;# 
  5384     010C                     	;# 
  5385     010D                     	;# 
  5386     010E                     	;# 
  5387     010E                     	;# 
  5388     010F                     	;# 
  5389     0110                     	;# 
  5390     0110                     	;# 
  5391     0111                     	;# 
  5392     0112                     	;# 
  5393     0112                     	;# 
  5394     0113                     	;# 
  5395     0114                     	;# 
  5396     0114                     	;# 
  5397     0115                     	;# 
  5398     0116                     	;# 
  5399     0116                     	;# 
  5400     0117                     	;# 
  5401     0119                     	;# 
  5402     0119                     	;# 
  5403     0119                     	;# 
  5404     011A                     	;# 
  5405     011A                     	;# 
  5406     011A                     	;# 
  5407     011B                     	;# 
  5408     011B                     	;# 
  5409     011B                     	;# 
  5410     011B                     	;# 
  5411     011B                     	;# 
  5412     011C                     	;# 
  5413     011C                     	;# 
  5414     011C                     	;# 
  5415     011D                     	;# 
  5416     011D                     	;# 
  5417     011D                     	;# 
  5418     011E                     	;# 
  5419     011E                     	;# 
  5420     011E                     	;# 
  5421     011F                     	;# 
  5422     011F                     	;# 
  5423     011F                     	;# 
  5424     011F                     	;# 
  5425     011F                     	;# 
  5426     018C                     	;# 
  5427     018D                     	;# 
  5428     018E                     	;# 
  5429     018F                     	;# 
  5430     0190                     	;# 
  5431     0191                     	;# 
  5432     0192                     	;# 
  5433     0196                     	;# 
  5434     0197                     	;# 
  5435     0198                     	;# 
  5436     0199                     	;# 
  5437     019A                     	;# 
  5438     019B                     	;# 
  5439     019C                     	;# 
  5440     020C                     	;# 
  5441     020C                     	;# 
  5442     020D                     	;# 
  5443     020E                     	;# 
  5444     020F                     	;# 
  5445     020F                     	;# 
  5446     0210                     	;# 
  5447     0210                     	;# 
  5448     0211                     	;# 
  5449     0211                     	;# 
  5450     0212                     	;# 
  5451     0212                     	;# 
  5452     0213                     	;# 
  5453     0214                     	;# 
  5454     0215                     	;# 
  5455     0215                     	;# 
  5456     0216                     	;# 
  5457     0216                     	;# 
  5458     0217                     	;# 
  5459     0217                     	;# 
  5460     0218                     	;# 
  5461     0218                     	;# 
  5462     0219                     	;# 
  5463     021A                     	;# 
  5464     021B                     	;# 
  5465     021B                     	;# 
  5466     021C                     	;# 
  5467     021C                     	;# 
  5468     021D                     	;# 
  5469     021D                     	;# 
  5470     021E                     	;# 
  5471     021F                     	;# 
  5472     028C                     	;# 
  5473     028C                     	;# 
  5474     028D                     	;# 
  5475     028D                     	;# 
  5476     028E                     	;# 
  5477     028F                     	;# 
  5478     0290                     	;# 
  5479     0290                     	;# 
  5480     0291                     	;# 
  5481     0292                     	;# 
  5482     0292                     	;# 
  5483     0293                     	;# 
  5484     0293                     	;# 
  5485     0294                     	;# 
  5486     0295                     	;# 
  5487     0296                     	;# 
  5488     0296                     	;# 
  5489     0297                     	;# 
  5490     0298                     	;# 
  5491     0298                     	;# 
  5492     0299                     	;# 
  5493     0299                     	;# 
  5494     029A                     	;# 
  5495     029B                     	;# 
  5496     029C                     	;# 
  5497     029C                     	;# 
  5498     029D                     	;# 
  5499     030C                     	;# 
  5500     030C                     	;# 
  5501     030D                     	;# 
  5502     030E                     	;# 
  5503     030F                     	;# 
  5504     0310                     	;# 
  5505     0310                     	;# 
  5506     0311                     	;# 
  5507     0312                     	;# 
  5508     0313                     	;# 
  5509     0314                     	;# 
  5510     0314                     	;# 
  5511     0315                     	;# 
  5512     0316                     	;# 
  5513     0317                     	;# 
  5514     0318                     	;# 
  5515     0318                     	;# 
  5516     0319                     	;# 
  5517     031A                     	;# 
  5518     031B                     	;# 
  5519     031C                     	;# 
  5520     031C                     	;# 
  5521     031D                     	;# 
  5522     031E                     	;# 
  5523     031F                     	;# 
  5524     038C                     	;# 
  5525     038C                     	;# 
  5526     038D                     	;# 
  5527     038E                     	;# 
  5528     0390                     	;# 
  5529     0390                     	;# 
  5530     0391                     	;# 
  5531     0392                     	;# 
  5532     040C                     	;# 
  5533     040D                     	;# 
  5534     040E                     	;# 
  5535     040F                     	;# 
  5536     0410                     	;# 
  5537     0411                     	;# 
  5538     0416                     	;# 
  5539     0416                     	;# 
  5540     0417                     	;# 
  5541     0418                     	;# 
  5542     0418                     	;# 
  5543     0419                     	;# 
  5544     041A                     	;# 
  5545     041A                     	;# 
  5546     041B                     	;# 
  5547     041C                     	;# 
  5548     041C                     	;# 
  5549     041D                     	;# 
  5550     041E                     	;# 
  5551     041F                     	;# 
  5552     048C                     	;# 
  5553     048C                     	;# 
  5554     048D                     	;# 
  5555     048E                     	;# 
  5556     048F                     	;# 
  5557     048F                     	;# 
  5558     0490                     	;# 
  5559     0491                     	;# 
  5560     0492                     	;# 
  5561     0492                     	;# 
  5562     0493                     	;# 
  5563     0494                     	;# 
  5564     0495                     	;# 
  5565     0495                     	;# 
  5566     0496                     	;# 
  5567     0497                     	;# 
  5568     0498                     	;# 
  5569     0499                     	;# 
  5570     049A                     	;# 
  5571     049B                     	;# 
  5572     049C                     	;# 
  5573     049D                     	;# 
  5574     050C                     	;# 
  5575     050C                     	;# 
  5576     050D                     	;# 
  5577     050E                     	;# 
  5578     050F                     	;# 
  5579     050F                     	;# 
  5580     0510                     	;# 
  5581     0511                     	;# 
  5582     0512                     	;# 
  5583     0512                     	;# 
  5584     0513                     	;# 
  5585     0514                     	;# 
  5586     0515                     	;# 
  5587     0515                     	;# 
  5588     0516                     	;# 
  5589     0517                     	;# 
  5590     0518                     	;# 
  5591     0519                     	;# 
  5592     051A                     	;# 
  5593     051B                     	;# 
  5594     051C                     	;# 
  5595     051D                     	;# 
  5596     058C                     	;# 
  5597     058C                     	;# 
  5598     058D                     	;# 
  5599     058E                     	;# 
  5600     058F                     	;# 
  5601     058F                     	;# 
  5602     0590                     	;# 
  5603     0591                     	;# 
  5604     0592                     	;# 
  5605     0593                     	;# 
  5606     060C                     	;# 
  5607     060D                     	;# 
  5608     060E                     	;# 
  5609     060F                     	;# 
  5610     0610                     	;# 
  5611     0611                     	;# 
  5612     0612                     	;# 
  5613     0613                     	;# 
  5614     0614                     	;# 
  5615     0616                     	;# 
  5616     0617                     	;# 
  5617     0618                     	;# 
  5618     0619                     	;# 
  5619     061A                     	;# 
  5620     061B                     	;# 
  5621     061C                     	;# 
  5622     061D                     	;# 
  5623     061E                     	;# 
  5624     068C                     	;# 
  5625     068D                     	;# 
  5626     068E                     	;# 
  5627     068F                     	;# 
  5628     0690                     	;# 
  5629     0691                     	;# 
  5630     0692                     	;# 
  5631     0693                     	;# 
  5632     0694                     	;# 
  5633     070C                     	;# 
  5634     070D                     	;# 
  5635     070E                     	;# 
  5636     070F                     	;# 
  5637     0710                     	;# 
  5638     0711                     	;# 
  5639     0712                     	;# 
  5640     0713                     	;# 
  5641     0714                     	;# 
  5642     0716                     	;# 
  5643     0717                     	;# 
  5644     0718                     	;# 
  5645     0719                     	;# 
  5646     071A                     	;# 
  5647     071B                     	;# 
  5648     071C                     	;# 
  5649     071D                     	;# 
  5650     071E                     	;# 
  5651     0796                     	;# 
  5652     0797                     	;# 
  5653     0798                     	;# 
  5654     0799                     	;# 
  5655     079A                     	;# 
  5656     079B                     	;# 
  5657     080C                     	;# 
  5658     080D                     	;# 
  5659     080E                     	;# 
  5660     080F                     	;# 
  5661     0810                     	;# 
  5662     0811                     	;# 
  5663     0812                     	;# 
  5664     0813                     	;# 
  5665     0814                     	;# 
  5666     081A                     	;# 
  5667     081B                     	;# 
  5668     081C                     	;# 
  5669     081D                     	;# 
  5670     081E                     	;# 
  5671     081F                     	;# 
  5672     088C                     	;# 
  5673     088D                     	;# 
  5674     088E                     	;# 
  5675     088F                     	;# 
  5676     0890                     	;# 
  5677     0891                     	;# 
  5678     0892                     	;# 
  5679     0893                     	;# 
  5680     0895                     	;# 
  5681     0896                     	;# 
  5682     0897                     	;# 
  5683     0898                     	;# 
  5684     0899                     	;# 
  5685     089A                     	;# 
  5686     089B                     	;# 
  5687     090C                     	;# 
  5688     090E                     	;# 
  5689     090F                     	;# 
  5690     091F                     	;# 
  5691     091F                     	;# 
  5692     098F                     	;# 
  5693     098F                     	;# 
  5694     0990                     	;# 
  5695     0991                     	;# 
  5696     0992                     	;# 
  5697     0993                     	;# 
  5698     0994                     	;# 
  5699     0995                     	;# 
  5700     0996                     	;# 
  5701     0997                     	;# 
  5702     0E0F                     	;# 
  5703     0E10                     	;# 
  5704     0E11                     	;# 
  5705     0E12                     	;# 
  5706     0E13                     	;# 
  5707     0E14                     	;# 
  5708     0E15                     	;# 
  5709     0E16                     	;# 
  5710     0E17                     	;# 
  5711     0E18                     	;# 
  5712     0E19                     	;# 
  5713     0E1A                     	;# 
  5714     0E1B                     	;# 
  5715     0E1C                     	;# 
  5716     0E1D                     	;# 
  5717     0E1E                     	;# 
  5718     0E1F                     	;# 
  5719     0E20                     	;# 
  5720     0E21                     	;# 
  5721     0E22                     	;# 
  5722     0E23                     	;# 
  5723     0E24                     	;# 
  5724     0E25                     	;# 
  5725     0E26                     	;# 
  5726     0E27                     	;# 
  5727     0E28                     	;# 
  5728     0E29                     	;# 
  5729     0E2A                     	;# 
  5730     0E2B                     	;# 
  5731     0E2C                     	;# 
  5732     0E2D                     	;# 
  5733     0E2E                     	;# 
  5734     0E2F                     	;# 
  5735     0E30                     	;# 
  5736     0E31                     	;# 
  5737     0E32                     	;# 
  5738     0E33                     	;# 
  5739     0E34                     	;# 
  5740     0E35                     	;# 
  5741     0E36                     	;# 
  5742     0E37                     	;# 
  5743     0E8F                     	;# 
  5744     0E90                     	;# 
  5745     0E91                     	;# 
  5746     0E92                     	;# 
  5747     0E93                     	;# 
  5748     0E94                     	;# 
  5749     0E95                     	;# 
  5750     0E96                     	;# 
  5751     0E97                     	;# 
  5752     0E9C                     	;# 
  5753     0E9D                     	;# 
  5754     0E9E                     	;# 
  5755     0EA1                     	;# 
  5756     0EA2                     	;# 
  5757     0EA3                     	;# 
  5758     0EA4                     	;# 
  5759     0EA5                     	;# 
  5760     0EA9                     	;# 
  5761     0EAA                     	;# 
  5762     0EAB                     	;# 
  5763     0EAC                     	;# 
  5764     0EB1                     	;# 
  5765     0EB2                     	;# 
  5766     0EB3                     	;# 
  5767     0EB8                     	;# 
  5768     0EB9                     	;# 
  5769     0EBA                     	;# 
  5770     0EBB                     	;# 
  5771     0EBC                     	;# 
  5772     0EBD                     	;# 
  5773     0EBE                     	;# 
  5774     0EC3                     	;# 
  5775     0EC5                     	;# 
  5776     0EC6                     	;# 
  5777     0EC7                     	;# 
  5778     0EC8                     	;# 
  5779     0EC9                     	;# 
  5780     0ECA                     	;# 
  5781     0ECB                     	;# 
  5782     0ECC                     	;# 
  5783     0F10                     	;# 
  5784     0F11                     	;# 
  5785     0F12                     	;# 
  5786     0F13                     	;# 
  5787     0F14                     	;# 
  5788     0F15                     	;# 
  5789     0F16                     	;# 
  5790     0F17                     	;# 
  5791     0F18                     	;# 
  5792     0F19                     	;# 
  5793     0F1A                     	;# 
  5794     0F1B                     	;# 
  5795     0F1C                     	;# 
  5796     0F1D                     	;# 
  5797     0F1E                     	;# 
  5798     0F1F                     	;# 
  5799     0F20                     	;# 
  5800     0F21                     	;# 
  5801     0F22                     	;# 
  5802     0F23                     	;# 
  5803     0F24                     	;# 
  5804     0F25                     	;# 
  5805     0F26                     	;# 
  5806     0F27                     	;# 
  5807     0F38                     	;# 
  5808     0F39                     	;# 
  5809     0F3A                     	;# 
  5810     0F3B                     	;# 
  5811     0F3C                     	;# 
  5812     0F3D                     	;# 
  5813     0F3E                     	;# 
  5814     0F3F                     	;# 
  5815     0F40                     	;# 
  5816     0F41                     	;# 
  5817     0F43                     	;# 
  5818     0F44                     	;# 
  5819     0F45                     	;# 
  5820     0F46                     	;# 
  5821     0F47                     	;# 
  5822     0F48                     	;# 
  5823     0F49                     	;# 
  5824     0F4A                     	;# 
  5825     0F4B                     	;# 
  5826     0F4C                     	;# 
  5827     0F4E                     	;# 
  5828     0F4F                     	;# 
  5829     0F50                     	;# 
  5830     0F51                     	;# 
  5831     0F52                     	;# 
  5832     0F53                     	;# 
  5833     0F54                     	;# 
  5834     0F55                     	;# 
  5835     0F56                     	;# 
  5836     0F57                     	;# 
  5837     0F65                     	;# 
  5838     0F68                     	;# 
  5839     0F69                     	;# 
  5840     0F6A                     	;# 
  5841     0F6B                     	;# 
  5842     0FE4                     	;# 
  5843     0FE5                     	;# 
  5844     0FE6                     	;# 
  5845     0FE7                     	;# 
  5846     0FE8                     	;# 
  5847     0FE9                     	;# 
  5848     0FEA                     	;# 
  5849     0FEB                     	;# 
  5850     0FED                     	;# 
  5851     0FEE                     	;# 
  5852     0FEF                     	;# 
  5853                           
  5854                           	psect	idataBANK0
  5855     07F7                     __pidataBANK0:
  5856                           
  5857                           ;initializer for _freq_hop
  5858     07F7  3400               	retlw	0
  5859     07F8  3407               	retlw	7
  5860     07F9  340F               	retlw	15
  5861                           
  5862                           ;initializer for _callback_sampled
  5863     07FA  348D               	retlw	low _Sensor_DefaultCallback
  5864     07FB  3408               	retlw	high _Sensor_DefaultCallback
  5865                           
  5866                           ;initializer for _callback_notPressed
  5867     07FC  348B               	retlw	low _Button_DefaultCallback
  5868     07FD  3408               	retlw	high _Button_DefaultCallback
  5869                           
  5870                           ;initializer for _callback_pressed
  5871     07FE  348B               	retlw	low _Button_DefaultCallback
  5872     07FF  3408               	retlw	high _Button_DefaultCallback
  5873                           
  5874                           	psect	idataBANK1
  5875     0BB4                     __pidataBANK1:
  5876                           
  5877                           ;initializer for _data
  5878     0BB4  345F               	retlw	95
  5879     0BB5  34B4               	retlw	180
  5880     0BB6  3400               	retlw	0
  5881     0BB7  3486               	retlw	134
  5882     0BB8  344A               	retlw	74
  5883     0BB9  3403               	retlw	3
  5884     0BBA  34EB               	retlw	235
  5885     0BBB  3400               	retlw	0
  5886     0BBC  3400               	retlw	0
  5887     0BBD  3400               	retlw	0
  5888     0BBE  3400               	retlw	0
  5889     0BBF  3400               	retlw	0
  5890     0BC0  3400               	retlw	0
  5891     0BC1  3400               	retlw	0
  5892     0BC2  34AA               	retlw	170
  5893     0BC3  3455               	retlw	85
  5894     0BC4  3401               	retlw	1
  5895     0BC5  346E               	retlw	110
  5896     0BC6  34A0               	retlw	160
  5897                           
  5898                           ;initializer for _Button_StateMachine
  5899     0BC7  3440               	retlw	low _Button_State_Initializing
  5900     0BC8  3407               	retlw	high _Button_State_Initializing
  5901     0BC9  348F               	retlw	low _Button_State_NotPressed
  5902     0BCA  3404               	retlw	high _Button_State_NotPressed
  5903     0BCB  349F               	retlw	low _Button_State_Pressed
  5904     0BCC  3407               	retlw	high _Button_State_Pressed
  5905                           
  5906                           	psect	stringtext1
  5907     1000                     __pstringtext1:
  5908     1000                     _mtouch_button_init:
  5909     1000  3400               	retlw	0
  5910     1001  3400               	retlw	0
  5911     1002  3400               	retlw	0
  5912     1003  3400               	retlw	0
  5913     1004  3400               	retlw	0
  5914     1005  3400               	retlw	0
  5915     1006  3400               	retlw	0
  5916     1007  3400               	retlw	0
  5917     1008  3400               	retlw	0
  5918     1009  3400               	retlw	0
  5919     100A  3400               	retlw	0
  5920     100B  3400               	retlw	0
  5921     100C  3400               	retlw	0
  5922     100D  3400               	retlw	0
  5923     100E  3464               	retlw	100
  5924     100F  3401               	retlw	1
  5925     1010                     __end_of_mtouch_button_init:
  5926                           
  5927                           	psect	stringtext2
  5928     1010                     __pstringtext2:
  5929     1010                     _mtouch_sensor_init:
  5930     1010  3400               	retlw	0
  5931     1011  3413               	retlw	19
  5932     1012  3430               	retlw	48
  5933     1013  3410               	retlw	16
  5934     1014  3420               	retlw	32
  5935     1015  3400               	retlw	0
  5936     1016  3400               	retlw	0
  5937     1017  3400               	retlw	0
  5938     1018  3400               	retlw	0
  5939     1019                     __end_of_mtouch_sensor_init:
  5940                           
  5941                           	psect	nvBANK0
  5942     006B                     __pnvBANK0:
  5943     006B                     _ADCC_ADTI_InterruptHandler:
  5944     006B                     	ds	2
  5945     006D                     _EUSART_TxDefaultInterruptHandler:
  5946     006D                     	ds	2
  5947                           
  5948                           	psect	nvBANK1
  5949     00D9                     __pnvBANK1:
  5950     00D9                     _EUSART_ErrorHandler:
  5951     00D9                     	ds	2
  5952     00DB                     _EUSART_OverrunErrorHandler:
  5953     00DB                     	ds	2
  5954     00DD                     _EUSART_FramingErrorHandler:
  5955     00DD                     	ds	2
  5956     00DF                     _EUSART_RxDefaultInterruptHandler:
  5957     00DF                     	ds	2
  5958     0013                     _TRISCbits	set	19
  5959     000B                     _INTCONbits	set	11
  5960     0013                     _TRISC	set	19
  5961     0012                     _TRISB	set	18
  5962     0011                     _TRISA	set	17
  5963     0018                     _LATC	set	24
  5964     0017                     _LATB	set	23
  5965     0016                     _LATA	set	22
  5966     005F                     _GIE	set	95
  5967     0090                     _ADACC	set	144
  5968     0094                     _ADCON1bits	set	148
  5969     008E                     _ADPREVL	set	142
  5970     008F                     _ADPREVH	set	143
  5971     0097                     _ADSTATbits	set	151
  5972     0090                     _ADACCL	set	144
  5973     0091                     _ADACCH	set	145
  5974     0095                     _ADCON2bits	set	149
  5975     0096                     _ADCON3bits	set	150
  5976     008C                     _ADRESL	set	140
  5977     008D                     _ADRESH	set	141
  5978     0093                     _ADCON0bits	set	147
  5979     009D                     _ADACQ	set	157
  5980     0093                     _ADCON0	set	147
  5981     0098                     _ADCLK	set	152
  5982     0099                     _ADACT	set	153
  5983     009A                     _ADREF	set	154
  5984     0097                     _ADSTAT	set	151
  5985     0096                     _ADCON3	set	150
  5986     0095                     _ADCON2	set	149
  5987     0094                     _ADCON1	set	148
  5988     009C                     _ADPRE	set	156
  5989     009B                     _ADCAP	set	155
  5990     009E                     _ADPCH	set	158
  5991     0114                     _ADFLTR	set	276
  5992     0119                     _RC1REG	set	281
  5993     011D                     _RC1STAbits	set	285
  5994     011A                     _TX1REG	set	282
  5995     011E                     _TX1STAbits	set	286
  5996     011C                     _SP1BRGH	set	284
  5997     011B                     _SP1BRGL	set	283
  5998     011E                     _TX1STA	set	286
  5999     011D                     _RC1STA	set	285
  6000     011F                     _BAUD1CON	set	287
  6001     0116                     _ADERRL	set	278
  6002     0117                     _ADERRH	set	279
  6003     0114                     _ADFLTRL	set	276
  6004     0115                     _ADFLTRH	set	277
  6005     010C                     _ADCNT	set	268
  6006     010D                     _ADRPT	set	269
  6007     0113                     _ADSTPTH	set	275
  6008     0112                     _ADSTPTL	set	274
  6009     0111                     _ADUTHH	set	273
  6010     0110                     _ADUTHL	set	272
  6011     010F                     _ADLTHH	set	271
  6012     010E                     _ADLTHL	set	270
  6013     070D                     _PIR1bits	set	1805
  6014     0717                     _PIE1bits	set	1815
  6015     070F                     _PIR3bits	set	1807
  6016     0719                     _PIE3bits	set	1817
  6017     079B                     _PMD5	set	1947
  6018     079A                     _PMD4	set	1946
  6019     0799                     _PMD3	set	1945
  6020     0798                     _PMD2	set	1944
  6021     0797                     _PMD1	set	1943
  6022     0796                     _PMD0	set	1942
  6023     0892                     _OSCTUNE	set	2194
  6024     0893                     _OSCFRQ	set	2195
  6025     0891                     _OSCEN	set	2193
  6026     088F                     _OSCCON3	set	2191
  6027     088D                     _OSCCON1	set	2189
  6028     0F27                     _RC7PPS	set	3879
  6029     0F68                     _INLVLE	set	3944
  6030     0F52                     _INLVLC	set	3922
  6031     0F47                     _INLVLB	set	3911
  6032     0F3C                     _INLVLA	set	3900
  6033     0F51                     _SLRCONC	set	3921
  6034     0F46                     _SLRCONB	set	3910
  6035     0F3B                     _SLRCONA	set	3899
  6036     0F50                     _ODCONC	set	3920
  6037     0F45                     _ODCONB	set	3909
  6038     0F3A                     _ODCONA	set	3898
  6039     0F4F                     _WPUC	set	3919
  6040     0F39                     _WPUA	set	3897
  6041     0F44                     _WPUB	set	3908
  6042     0F65                     _WPUE	set	3941
  6043     0F38                     _ANSELA	set	3896
  6044     0F43                     _ANSELB	set	3907
  6045     0F4E                     _ANSELC	set	3918
  6046                           
  6047                           	psect	cinit
  6048     0039                     start_initialization:	
  6049                           ; #config settings
  6050                           
  6051     0039                     __initialization:
  6052                           
  6053                           ; Initialize objects allocated to BANK0
  6054     0039  30F7               	movlw	low __pidataBANK0
  6055     003A  0084               	movwf	4
  6056     003B  3087               	movlw	(high __pidataBANK0)| (0+128)
  6057     003C  0085               	movwf	5
  6058     003D  3062               	movlw	low __pdataBANK0
  6059     003E  0086               	movwf	6
  6060     003F  3000               	movlw	high __pdataBANK0
  6061     0040  0087               	movwf	7
  6062     0041  3009               	movlw	9
  6063     0042  3188  20BE  3180   	fcall	init_ram
  6064                           
  6065                           ; Initialize objects allocated to BANK1
  6066     0045  30B4               	movlw	low __pidataBANK1
  6067     0046  0084               	movwf	4
  6068     0047  308B               	movlw	(high __pidataBANK1)| (0+128)
  6069     0048  0085               	movwf	5
  6070     0049  30C0               	movlw	low __pdataBANK1
  6071     004A  0086               	movwf	6
  6072     004B  3000               	movlw	high __pdataBANK1
  6073     004C  0087               	movwf	7
  6074     004D  3019               	movlw	25
  6075     004E  3188  20BE  3180   	fcall	init_ram
  6076                           
  6077                           ; Clear objects allocated to COMMON
  6078     0051  01FD               	clrf	__pbssCOMMON& (0+127)
  6079                           
  6080                           ; Clear objects allocated to BANK0
  6081     0052  3020               	movlw	low __pbssBANK0
  6082     0053  0084               	movwf	4
  6083     0054  3000               	movlw	high __pbssBANK0
  6084     0055  0085               	movwf	5
  6085     0056  302C               	movlw	44
  6086     0057  3188  20B8  3180   	fcall	clear_ram0
  6087                           
  6088                           ; Clear objects allocated to BANK1
  6089     005A  30A0               	movlw	low __pbssBANK1
  6090     005B  0084               	movwf	4
  6091     005C  3000               	movlw	high __pbssBANK1
  6092     005D  0085               	movwf	5
  6093     005E  3020               	movlw	32
  6094     005F  3188  20B8  3180   	fcall	clear_ram0
  6095     0062                     end_of_initialization:	
  6096                           ;End of C runtime variable initialization code
  6097                           
  6098     0062                     __end_of__initialization:
  6099     0062  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6100     0063  0020               	movlb	0
  6101     0064  3189  2932         	ljmp	_main	;jump to C main() function
  6102                           
  6103                           	psect	bssCOMMON
  6104     007D                     __pbssCOMMON:
  6105     007D                     _eusartRxTail:
  6106     007D                     	ds	1
  6107                           
  6108                           	psect	bssBANK0
  6109     0020                     __pbssBANK0:
  6110     0020                     _eusartRxStatusBuffer:
  6111     0020                     	ds	8
  6112     0028                     _sensor_medianBuffer:
  6113     0028                     	ds	6
  6114     002E                     Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter:
  6115     002E                     	ds	3
  6116     0031                     _packet_sample:
  6117     0031                     	ds	2
  6118     0033                     _eusartRxLastError:
  6119     0033                     	ds	1
  6120     0034                     _eusartRxCount:
  6121     0034                     	ds	1
  6122     0035                     _eusartRxHead:
  6123     0035                     	ds	1
  6124     0036                     _eusartTxBufferRemaining:
  6125     0036                     	ds	1
  6126     0037                     _eusartTxTail:
  6127     0037                     	ds	1
  6128     0038                     _eusartTxHead:
  6129     0038                     	ds	1
  6130     0039                     MTOUCH_DataStreamer_Service@sequence:
  6131     0039                     	ds	1
  6132     003A                     medianFilter@bufferIndex:
  6133     003A                     	ds	1
  6134     003B                     _sample_delay:
  6135     003B                     	ds	1
  6136     003C                     _freq_index:
  6137     003C                     	ds	1
  6138     003D                     _lowpowerActivated:
  6139     003D                     	ds	1
  6140     003E                     _scanInterrupted:
  6141     003E                     	ds	1
  6142     003F                     _sampling_flag:
  6143     003F                     	ds	1
  6144     0040                     _currentScanSensor:
  6145     0040                     	ds	1
  6146     0041                     _mtouch_request_init:
  6147     0041                     	ds	1
  6148     0042                     _mtouch_time_toScan:
  6149     0042                     	ds	1
  6150     0043                     _mtouch_sensor:
  6151     0043                     	ds	9
  6152                           
  6153                           	psect	dataBANK0
  6154     0062                     __pdataBANK0:
  6155     0062                     _freq_hop:
  6156     0062                     	ds	3
  6157     0065                     _callback_sampled:
  6158     0065                     	ds	2
  6159     0067                     _callback_notPressed:
  6160     0067                     	ds	2
  6161     0069                     _callback_pressed:
  6162     0069                     	ds	2
  6163                           
  6164                           	psect	bssBANK1
  6165     00A0                     __pbssBANK1:
  6166     00A0                     _eusartRxBuffer:
  6167     00A0                     	ds	8
  6168     00A8                     _eusartTxBuffer:
  6169     00A8                     	ds	8
  6170     00B0                     _mtouch_button:
  6171     00B0                     	ds	16
  6172                           
  6173                           	psect	dataBANK1
  6174     00C0                     __pdataBANK1:
  6175     00C0                     _data:
  6176     00C0                     	ds	19
  6177     00D3                     _Button_StateMachine:
  6178     00D3                     	ds	6
  6179                           
  6180                           	psect	inittext
  6181     08BE                     init_ram:
  6182     08BE  00FE               	movwf	btemp
  6183     08BF                     initloop:
  6184     08BF  0012               	moviw fsr0++
  6185     08C0  001E               	movwi fsr1++
  6186     08C1  0BFE               	decfsz	btemp,f
  6187     08C2  28BF               	goto	initloop
  6188     08C3  3400               	retlw	0
  6189                           
  6190                           	psect	clrtext
  6191     08B8                     clear_ram0:	
  6192                           ;	Called with FSR0 containing the base address, and
  6193                           ;	WREG with the size to clear
  6194                           
  6195     08B8  0064               	clrwdt	;clear the watchdog before getting into this loop
  6196     08B9                     clrloop0:
  6197     08B9  0180               	clrf	0	;clear RAM location pointed to by FSR
  6198     08BA  3101               	addfsr 0,1
  6199     08BB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6200     08BC  28B9               	goto	clrloop0	;have we reached the end yet?
  6201     08BD  3400               	retlw	0	;all done for this memory range, return
  6202                           
  6203                           	psect	cstackCOMMON
  6204     0070                     __pcstackCOMMON:
  6205     0070                     ?_PMD_Initialize:
  6206     0070                     ?_PIN_MANAGER_Initialize:	
  6207                           ; 1 bytes @ 0x0
  6208                           
  6209     0070                     ?_OSCILLATOR_Initialize:	
  6210                           ; 1 bytes @ 0x0
  6211                           
  6212     0070                     ?_ADCC_Initialize:	
  6213                           ; 1 bytes @ 0x0
  6214                           
  6215     0070                     ?_EUSART_Initialize:	
  6216                           ; 1 bytes @ 0x0
  6217                           
  6218     0070                     ?_MTOUCH_Initialize:	
  6219                           ; 1 bytes @ 0x0
  6220                           
  6221     0070                     ?_MTOUCH_Service_Mainloop:	
  6222                           ; 1 bytes @ 0x0
  6223                           
  6224     0070                     ?_ADCC_ThresholdISR:	
  6225                           ; 1 bytes @ 0x0
  6226                           
  6227     0070                     ?_MTOUCH_Sensor_Calibrate:	
  6228                           ; 1 bytes @ 0x0
  6229                           
  6230     0070                     ?_Button_Service:	
  6231                           ; 1 bytes @ 0x0
  6232                           
  6233     0070                     ?_MTOUCH_Sensor_wasSampled:	
  6234                           ; 1 bytes @ 0x0
  6235                           
  6236     0070                     ?_MTOUCH_Sensor_isCalibrated:	
  6237                           ; 1 bytes @ 0x0
  6238                           
  6239     0070                     ?_Button_Reading_Update:	
  6240                           ; 1 bytes @ 0x0
  6241                           
  6242     0070                     ?_Button_Deviation_Update:	
  6243                           ; 1 bytes @ 0x0
  6244                           
  6245     0070                     ?_Button_Baseline_Initialize:	
  6246                           ; 1 bytes @ 0x0
  6247                           
  6248     0070                     ?_Button_Baseline_Update:	
  6249                           ; 1 bytes @ 0x0
  6250                           
  6251     0070                     ?_Button_Tick_helper:	
  6252                           ; 1 bytes @ 0x0
  6253                           
  6254     0070                     ?_Button_Reading_Update_Helper:	
  6255                           ; 1 bytes @ 0x0
  6256                           
  6257     0070                     ?_MTOUCH_Sensor_InitializeAll:	
  6258                           ; 1 bytes @ 0x0
  6259                           
  6260     0070                     ?_MTOUCH_DataStreamer_Initialize:	
  6261                           ; 1 bytes @ 0x0
  6262                           
  6263     0070                     ?_MTOUCH_Sensor_Sampled_ResetAll:	
  6264                           ; 1 bytes @ 0x0
  6265                           
  6266     0070                     ?_MTOUCH_Sensor_Scan_Initialize:	
  6267                           ; 1 bytes @ 0x0
  6268                           
  6269     0070                     ?_MTOUCH_Sensor_SampleAll:	
  6270                           ; 1 bytes @ 0x0
  6271                           
  6272     0070                     ?_MTOUCH_DataStreamer_Service:	
  6273                           ; 1 bytes @ 0x0
  6274                           
  6275     0070                     ?_MTOUCH_needReburst:	
  6276                           ; 1 bytes @ 0x0
  6277                           
  6278     0070                     ?_MTOUCH_Tick:	
  6279                           ; 1 bytes @ 0x0
  6280                           
  6281     0070                     ?_ADCC_DefaultInterruptHandler:	
  6282                           ; 1 bytes @ 0x0
  6283                           
  6284     0070                     ??_ADCC_DefaultInterruptHandler:	
  6285                           ; 1 bytes @ 0x0
  6286                           
  6287     0070                     ?_MTOUCH_Sensor_Enable:	
  6288                           ; 1 bytes @ 0x0
  6289                           
  6290     0070                     ?_Sensor_Sampled_Reset:	
  6291                           ; 1 bytes @ 0x0
  6292                           
  6293     0070                     ?_ADCC_ThresholdISR_mTouch:	
  6294                           ; 1 bytes @ 0x0
  6295                           
  6296     0070                     ?_MTOUCH_Sensor_isEnabled:	
  6297                           ; 1 bytes @ 0x0
  6298                           
  6299     0070                     ?_MTOUCH_Sensor_isSampling:	
  6300                           ; 1 bytes @ 0x0
  6301                           
  6302     0070                     ?_Sensor_scheduleNextScan:	
  6303                           ; 1 bytes @ 0x0
  6304                           
  6305     0070                     ?_Sensor_FrequencyHopping:	
  6306                           ; 1 bytes @ 0x0
  6307                           
  6308     0070                     ?_MTOUCH_Sensor_postAcquisitionProcess:	
  6309                           ; 1 bytes @ 0x0
  6310                           
  6311     0070                     ?_Sensor_isCalibrated:	
  6312                           ; 1 bytes @ 0x0
  6313                           
  6314     0070                     ?_Sensor_isCalibratingAcqTime:	
  6315                           ; 1 bytes @ 0x0
  6316                           
  6317     0070                     ?_Sensor_setCalibratAcqTime:	
  6318                           ; 1 bytes @ 0x0
  6319                           
  6320     0070                     ??_Sensor_setCalibratAcqTime:	
  6321                           ; 1 bytes @ 0x0
  6322                           
  6323     0070                     ?_Sensor_setCalibrated:	
  6324                           ; 1 bytes @ 0x0
  6325                           
  6326     0070                     ??_Sensor_setCalibrated:	
  6327                           ; 1 bytes @ 0x0
  6328                           
  6329     0070                     ?_Sensor_RawSample_Update:	
  6330                           ; 1 bytes @ 0x0
  6331                           
  6332     0070                     ?_MTOUCH_Sensor_Service:	
  6333                           ; 1 bytes @ 0x0
  6334                           
  6335     0070                     ?_Sensor_setSampled:	
  6336                           ; 1 bytes @ 0x0
  6337                           
  6338     0070                     ??_Sensor_setSampled:	
  6339                           ; 1 bytes @ 0x0
  6340                           
  6341     0070                     ?_Sensor_FrequencyHopping_Autotune_Process:	
  6342                           ; 1 bytes @ 0x0
  6343                           
  6344     0070                     ?_EUSART_Write:	
  6345                           ; 1 bytes @ 0x0
  6346                           
  6347     0070                     ?_EUSART_Receive_ISR:	
  6348                           ; 1 bytes @ 0x0
  6349                           
  6350     0070                     ?_EUSART_Transmit_ISR:	
  6351                           ; 1 bytes @ 0x0
  6352                           
  6353     0070                     ??_EUSART_Transmit_ISR:	
  6354                           ; 1 bytes @ 0x0
  6355                           
  6356     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  6357                           ; 1 bytes @ 0x0
  6358                           
  6359     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  6360                           ; 1 bytes @ 0x0
  6361                           
  6362     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  6363                           ; 1 bytes @ 0x0
  6364                           
  6365     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  6366                           ; 1 bytes @ 0x0
  6367                           
  6368     0070                     ?_EUSART_DefaultErrorHandler:	
  6369                           ; 1 bytes @ 0x0
  6370                           
  6371     0070                     ?_EUSART_RxDataHandler:	
  6372                           ; 1 bytes @ 0x0
  6373                           
  6374     0070                     ??_EUSART_RxDataHandler:	
  6375                           ; 1 bytes @ 0x0
  6376                           
  6377     0070                     ?_SYSTEM_Initialize:	
  6378                           ; 1 bytes @ 0x0
  6379                           
  6380     0070                     ?_main:	
  6381                           ; 1 bytes @ 0x0
  6382                           
  6383     0070                     ?_INTERRUPT_InterruptManager:	
  6384                           ; 1 bytes @ 0x0
  6385                           
  6386     0070                     ?_MTOUCH_Button_Initialize:	
  6387                           ; 1 bytes @ 0x0
  6388                           
  6389     0070                     ?_MTOUCH_Button_InitializeAll:	
  6390                           ; 1 bytes @ 0x0
  6391                           
  6392     0070                     ?_MTOUCH_Button_ServiceAll:	
  6393                           ; 1 bytes @ 0x0
  6394                           
  6395     0070                     ?_MTOUCH_Button_Tick:	
  6396                           ; 1 bytes @ 0x0
  6397                           
  6398     0070                     ?_MTOUCH_Button_Threshold_Get:	
  6399                           ; 1 bytes @ 0x0
  6400                           
  6401     0070                     ?_MTOUCH_Button_Scaling_Get:	
  6402                           ; 1 bytes @ 0x0
  6403                           
  6404     0070                     ?_MTOUCH_Button_isPressed:	
  6405                           ; 1 bytes @ 0x0
  6406                           
  6407     0070                     ?_MTOUCH_Button_Deviation_Get:	
  6408                           ; 1 bytes @ 0x0
  6409                           
  6410     0070                     ?_MTOUCH_Sensor_Initialize:	
  6411                           ; 1 bytes @ 0x0
  6412                           
  6413     0070                     ?_MTOUCH_Sensor_ADCC_Initialize:	
  6414                           ; 1 bytes @ 0x0
  6415                           
  6416     0070                     ?_MTOUCH_Sensor_isSamplingComplete:	
  6417                           ; 1 bytes @ 0x0
  6418                           
  6419     0070                     ?_Sensor_autoCalibration:	
  6420                           ; 1 bytes @ 0x0
  6421                           
  6422     0070                     ?_Sensor_setSamplePeriod:	
  6423                           ; 1 bytes @ 0x0
  6424                           
  6425     0070                     ?_MTOUCH_Sensor_AdditionalCap_Get:	
  6426                           ; 1 bytes @ 0x0
  6427                           
  6428     0070                     ?_MTOUCH_Sensor_AcquisitionTime_Get:	
  6429                           ; 1 bytes @ 0x0
  6430                           
  6431     0070                     ?_datastreamer_output_byte:	
  6432                           ; 1 bytes @ 0x0
  6433                           
  6434     0070                     ?i1_Sensor_SetTrisBit:	
  6435                           ; 1 bytes @ 0x0
  6436                           
  6437     0070                     ?i1_Sensor_scheduleNextScan:	
  6438                           ; 1 bytes @ 0x0
  6439                           
  6440     0070                     ?i1_MTOUCH_Sensor_isEnabled:	
  6441                           ; 1 bytes @ 0x0
  6442                           
  6443     0070                     ?i1_Sensor_isCalibrated:	
  6444                           ; 1 bytes @ 0x0
  6445                           
  6446     0070                     ??i1_Sensor_isCalibrated:	
  6447                           ; 1 bytes @ 0x0
  6448                           
  6449     0070                     ?i1_Sensor_isCalibratingAcqTime:	
  6450                           ; 1 bytes @ 0x0
  6451                           
  6452     0070                     ??i1_Sensor_isCalibratingAcqTime:	
  6453                           ; 1 bytes @ 0x0
  6454                           
  6455     0070                     ?i1_MTOUCH_Sensor_wasSampled:	
  6456                           ; 1 bytes @ 0x0
  6457                           
  6458     0070                     ?i1___bmul:	
  6459                           ; 1 bytes @ 0x0
  6460                           
  6461     0070                     ?i1_abs:	
  6462                           ; 1 bytes @ 0x0
  6463                           
  6464     0070                     Sensor_setCalibrated@sensor:	
  6465                           ; 2 bytes @ 0x0
  6466                           
  6467     0070                     Sensor_setCalibratAcqTime@sensor:	
  6468                           ; 1 bytes @ 0x0
  6469                           
  6470     0070                     Sensor_setSampled@sensor:	
  6471                           ; 1 bytes @ 0x0
  6472                           
  6473     0070                     i1Sensor_SetTrisBit@TrisBit:	
  6474                           ; 1 bytes @ 0x0
  6475                           
  6476     0070                     i1Sensor_isCalibratingAcqTime@sensor:	
  6477                           ; 1 bytes @ 0x0
  6478                           
  6479     0070                     i1___bmul@multiplicand:	
  6480                           ; 1 bytes @ 0x0
  6481                           
  6482     0070                     i1abs@a:	
  6483                           ; 1 bytes @ 0x0
  6484                           
  6485                           
  6486                           ; 2 bytes @ 0x0
  6487     0070                     	ds	1
  6488     0071                     ??_EUSART_Receive_ISR:
  6489     0071                     ??_EUSART_DefaultErrorHandler:	
  6490                           ; 1 bytes @ 0x1
  6491                           
  6492     0071                     ??i1_Sensor_SetTrisBit:	
  6493                           ; 1 bytes @ 0x1
  6494                           
  6495     0071                     ??i1___bmul:	
  6496                           ; 1 bytes @ 0x1
  6497                           
  6498     0071                     i1Sensor_isCalibrated@sensor:	
  6499                           ; 1 bytes @ 0x1
  6500                           
  6501                           
  6502                           ; 1 bytes @ 0x1
  6503     0071                     	ds	1
  6504     0072                     ??i1_abs:
  6505     0072                     i1___bmul@product:	
  6506                           ; 1 bytes @ 0x2
  6507                           
  6508                           
  6509                           ; 1 bytes @ 0x2
  6510     0072                     	ds	1
  6511     0073                     i1Sensor_SetTrisBit@sensor:
  6512     0073                     i1___bmul@multiplier:	
  6513                           ; 1 bytes @ 0x3
  6514                           
  6515                           
  6516                           ; 1 bytes @ 0x3
  6517     0073                     	ds	1
  6518     0074                     ??_Sensor_autoCalibration:
  6519     0074                     ??i1_MTOUCH_Sensor_isEnabled:	
  6520                           ; 1 bytes @ 0x4
  6521                           
  6522     0074                     ??i1_MTOUCH_Sensor_wasSampled:	
  6523                           ; 1 bytes @ 0x4
  6524                           
  6525     0074                     i1MTOUCH_Sensor_isEnabled@sensor:	
  6526                           ; 1 bytes @ 0x4
  6527                           
  6528     0074                     i1MTOUCH_Sensor_wasSampled@sensor:	
  6529                           ; 1 bytes @ 0x4
  6530                           
  6531                           
  6532                           ; 1 bytes @ 0x4
  6533     0074                     	ds	1
  6534     0075                     ??i1_Sensor_scheduleNextScan:
  6535                           
  6536                           ; 1 bytes @ 0x5
  6537     0075                     	ds	2
  6538     0077                     i1Sensor_scheduleNextScan@state:
  6539                           
  6540                           ; 1 bytes @ 0x7
  6541     0077                     	ds	1
  6542     0078                     Sensor_autoCalibration@name:
  6543     0078                     i1Sensor_scheduleNextScan@skipScan:	
  6544                           ; 1 bytes @ 0x8
  6545                           
  6546                           
  6547                           ; 1 bytes @ 0x8
  6548     0078                     	ds	1
  6549     0079                     Sensor_autoCalibration@sensor:
  6550     0079                     i1Sensor_scheduleNextScan@sensor:	
  6551                           ; 1 bytes @ 0x9
  6552                           
  6553                           
  6554                           ; 1 bytes @ 0x9
  6555     0079                     	ds	1
  6556     007A                     ??_MTOUCH_Sensor_Service:
  6557                           
  6558                           ; 1 bytes @ 0xA
  6559     007A                     	ds	2
  6560     007C                     MTOUCH_Sensor_Service@sensor:
  6561                           
  6562                           ; 1 bytes @ 0xC
  6563     007C                     	ds	1
  6564     007D                     ??_ADCC_ThresholdISR:
  6565     007D                     ??_ADCC_ThresholdISR_mTouch:	
  6566                           ; 1 bytes @ 0xD
  6567                           
  6568     007D                     ??_INTERRUPT_InterruptManager:	
  6569                           ; 1 bytes @ 0xD
  6570                           
  6571                           
  6572                           	psect	cstackBANK0
  6573     004C                     __pcstackBANK0:	
  6574                           ; 1 bytes @ 0xD
  6575                           
  6576     004C                     ??_PMD_Initialize:
  6577     004C                     ??_PIN_MANAGER_Initialize:	
  6578                           ; 1 bytes @ 0x0
  6579                           
  6580     004C                     ??_OSCILLATOR_Initialize:	
  6581                           ; 1 bytes @ 0x0
  6582                           
  6583     004C                     ?_Button_DefaultCallback:	
  6584                           ; 1 bytes @ 0x0
  6585                           
  6586     004C                     ?_memcpy:	
  6587                           ; 1 bytes @ 0x0
  6588                           
  6589     004C                     ??_Button_Deviation_Update:	
  6590                           ; 1 bytes @ 0x0
  6591                           
  6592     004C                     ??_Button_Baseline_Update:	
  6593                           ; 1 bytes @ 0x0
  6594                           
  6595     004C                     ??_Button_Tick_helper:	
  6596                           ; 1 bytes @ 0x0
  6597                           
  6598     004C                     ??_MTOUCH_DataStreamer_Initialize:	
  6599                           ; 1 bytes @ 0x0
  6600                           
  6601     004C                     ??_MTOUCH_needReburst:	
  6602                           ; 1 bytes @ 0x0
  6603                           
  6604     004C                     ?_ADCC_SetADTIInterruptHandler:	
  6605                           ; 1 bytes @ 0x0
  6606                           
  6607     004C                     ?_Sensor_DefaultCallback:	
  6608                           ; 1 bytes @ 0x0
  6609                           
  6610     004C                     ??_Sensor_Sampled_Reset:	
  6611                           ; 1 bytes @ 0x0
  6612                           
  6613     004C                     ??_MTOUCH_Sensor_isSampling:	
  6614                           ; 1 bytes @ 0x0
  6615                           
  6616     004C                     ??_Sensor_isCalibrated:	
  6617                           ; 1 bytes @ 0x0
  6618                           
  6619     004C                     ??_Sensor_isCalibratingAcqTime:	
  6620                           ; 1 bytes @ 0x0
  6621                           
  6622     004C                     ??_EUSART_Write:	
  6623                           ; 1 bytes @ 0x0
  6624                           
  6625     004C                     ?_EUSART_SetRxInterruptHandler:	
  6626                           ; 1 bytes @ 0x0
  6627                           
  6628     004C                     ?_EUSART_SetTxInterruptHandler:	
  6629                           ; 1 bytes @ 0x0
  6630                           
  6631     004C                     ?_EUSART_SetFramingErrorHandler:	
  6632                           ; 1 bytes @ 0x0
  6633                           
  6634     004C                     ?_EUSART_SetOverrunErrorHandler:	
  6635                           ; 1 bytes @ 0x0
  6636                           
  6637     004C                     ?_EUSART_SetErrorHandler:	
  6638                           ; 1 bytes @ 0x0
  6639                           
  6640     004C                     ??_MTOUCH_Button_Threshold_Get:	
  6641                           ; 1 bytes @ 0x0
  6642                           
  6643     004C                     ??_MTOUCH_Button_Scaling_Get:	
  6644                           ; 1 bytes @ 0x0
  6645                           
  6646     004C                     ??_MTOUCH_Button_isPressed:	
  6647                           ; 1 bytes @ 0x0
  6648                           
  6649     004C                     ??_MTOUCH_Button_Deviation_Get:	
  6650                           ; 1 bytes @ 0x0
  6651                           
  6652     004C                     ?_Sensor_SetTrisBit:	
  6653                           ; 1 bytes @ 0x0
  6654                           
  6655     004C                     ??_Sensor_setSamplePeriod:	
  6656                           ; 1 bytes @ 0x0
  6657                           
  6658     004C                     ?___bmul:	
  6659                           ; 1 bytes @ 0x0
  6660                           
  6661     004C                     ?_Button_Baseline_Get_helper:	
  6662                           ; 1 bytes @ 0x0
  6663                           
  6664     004C                     ?_MTOUCH_Button_Reading_Get:	
  6665                           ; 2 bytes @ 0x0
  6666                           
  6667     004C                     ?___awmod:	
  6668                           ; 2 bytes @ 0x0
  6669                           
  6670     004C                     Button_DefaultCallback@button:	
  6671                           ; 2 bytes @ 0x0
  6672                           
  6673     004C                     Sensor_SetTrisBit@TrisBit:	
  6674                           ; 1 bytes @ 0x0
  6675                           
  6676     004C                     Sensor_DefaultCallback@sensor:	
  6677                           ; 1 bytes @ 0x0
  6678                           
  6679     004C                     Sensor_isCalibratingAcqTime@sensor:	
  6680                           ; 1 bytes @ 0x0
  6681                           
  6682     004C                     Sensor_Sampled_Reset@sensor:	
  6683                           ; 1 bytes @ 0x0
  6684                           
  6685     004C                     ___bmul@multiplicand:	
  6686                           ; 1 bytes @ 0x0
  6687                           
  6688     004C                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
  6689                           ; 1 bytes @ 0x0
  6690                           
  6691     004C                     EUSART_SetFramingErrorHandler@interruptHandler:	
  6692                           ; 2 bytes @ 0x0
  6693                           
  6694     004C                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  6695                           ; 2 bytes @ 0x0
  6696                           
  6697     004C                     EUSART_SetErrorHandler@interruptHandler:	
  6698                           ; 2 bytes @ 0x0
  6699                           
  6700     004C                     EUSART_SetTxInterruptHandler@interruptHandler:	
  6701                           ; 2 bytes @ 0x0
  6702                           
  6703     004C                     EUSART_SetRxInterruptHandler@interruptHandler:	
  6704                           ; 2 bytes @ 0x0
  6705                           
  6706     004C                     ___awmod@divisor:	
  6707                           ; 2 bytes @ 0x0
  6708                           
  6709     004C                     memcpy@s1:	
  6710                           ; 2 bytes @ 0x0
  6711                           
  6712                           
  6713                           ; 2 bytes @ 0x0
  6714     004C                     	ds	1
  6715     004D                     ??_Button_DefaultCallback:
  6716     004D                     ??_MTOUCH_Sensor_Sampled_ResetAll:	
  6717                           ; 1 bytes @ 0x1
  6718                           
  6719     004D                     ??_Sensor_DefaultCallback:	
  6720                           ; 1 bytes @ 0x1
  6721                           
  6722     004D                     ??_Sensor_SetTrisBit:	
  6723                           ; 1 bytes @ 0x1
  6724                           
  6725     004D                     ??___bmul:	
  6726                           ; 1 bytes @ 0x1
  6727                           
  6728     004D                     MTOUCH_Button_Threshold_Get@name:	
  6729                           ; 1 bytes @ 0x1
  6730                           
  6731     004D                     MTOUCH_Button_Scaling_Get@name:	
  6732                           ; 1 bytes @ 0x1
  6733                           
  6734     004D                     MTOUCH_Button_isPressed@name:	
  6735                           ; 1 bytes @ 0x1
  6736                           
  6737     004D                     MTOUCH_Button_Deviation_Get@name:	
  6738                           ; 1 bytes @ 0x1
  6739                           
  6740     004D                     Sensor_isCalibrated@sensor:	
  6741                           ; 1 bytes @ 0x1
  6742                           
  6743     004D                     EUSART_Write@txData:	
  6744                           ; 1 bytes @ 0x1
  6745                           
  6746                           
  6747                           ; 1 bytes @ 0x1
  6748     004D                     	ds	1
  6749     004E                     ??_ADCC_Initialize:
  6750     004E                     ??_EUSART_Initialize:	
  6751                           ; 1 bytes @ 0x2
  6752                           
  6753     004E                     ??_Button_Baseline_Get_helper:	
  6754                           ; 1 bytes @ 0x2
  6755                           
  6756     004E                     ??_MTOUCH_Sensor_Scan_Initialize:	
  6757                           ; 1 bytes @ 0x2
  6758                           
  6759     004E                     ??_ADCC_SetADTIInterruptHandler:	
  6760                           ; 1 bytes @ 0x2
  6761                           
  6762     004E                     ??_EUSART_SetRxInterruptHandler:	
  6763                           ; 1 bytes @ 0x2
  6764                           
  6765     004E                     ??_EUSART_SetTxInterruptHandler:	
  6766                           ; 1 bytes @ 0x2
  6767                           
  6768     004E                     ??_EUSART_SetFramingErrorHandler:	
  6769                           ; 1 bytes @ 0x2
  6770                           
  6771     004E                     ??_EUSART_SetOverrunErrorHandler:	
  6772                           ; 1 bytes @ 0x2
  6773                           
  6774     004E                     ??_EUSART_SetErrorHandler:	
  6775                           ; 1 bytes @ 0x2
  6776                           
  6777     004E                     ??_MTOUCH_Button_Reading_Get:	
  6778                           ; 1 bytes @ 0x2
  6779                           
  6780     004E                     ??_MTOUCH_Sensor_ADCC_Initialize:	
  6781                           ; 1 bytes @ 0x2
  6782                           
  6783     004E                     ??_datastreamer_output_byte:	
  6784                           ; 1 bytes @ 0x2
  6785                           
  6786     004E                     Button_Tick_helper@button:	
  6787                           ; 1 bytes @ 0x2
  6788                           
  6789     004E                     MTOUCH_Sensor_Sampled_ResetAll@sensor:	
  6790                           ; 1 bytes @ 0x2
  6791                           
  6792     004E                     datastreamer_output_byte@data:	
  6793                           ; 1 bytes @ 0x2
  6794                           
  6795     004E                     ___bmul@product:	
  6796                           ; 1 bytes @ 0x2
  6797                           
  6798     004E                     ___awmod@dividend:	
  6799                           ; 1 bytes @ 0x2
  6800                           
  6801     004E                     memcpy@n:	
  6802                           ; 2 bytes @ 0x2
  6803                           
  6804                           
  6805                           ; 2 bytes @ 0x2
  6806     004E                     	ds	1
  6807     004F                     ??_MTOUCH_Tick:
  6808     004F                     ??_MTOUCH_Button_Tick:	
  6809                           ; 1 bytes @ 0x3
  6810                           
  6811     004F                     MTOUCH_Button_Reading_Get@name:	
  6812                           ; 1 bytes @ 0x3
  6813                           
  6814     004F                     Sensor_SetTrisBit@sensor:	
  6815                           ; 1 bytes @ 0x3
  6816                           
  6817     004F                     ___bmul@multiplier:	
  6818                           ; 1 bytes @ 0x3
  6819                           
  6820                           
  6821                           ; 1 bytes @ 0x3
  6822     004F                     	ds	1
  6823     0050                     ??_MTOUCH_Sensor_Calibrate:
  6824     0050                     ??_memcpy:	
  6825                           ; 1 bytes @ 0x4
  6826                           
  6827     0050                     ??_MTOUCH_Sensor_wasSampled:	
  6828                           ; 1 bytes @ 0x4
  6829                           
  6830     0050                     ??_MTOUCH_Sensor_isCalibrated:	
  6831                           ; 1 bytes @ 0x4
  6832                           
  6833     0050                     ??_MTOUCH_Sensor_Enable:	
  6834                           ; 1 bytes @ 0x4
  6835                           
  6836     0050                     ??_MTOUCH_Sensor_isEnabled:	
  6837                           ; 1 bytes @ 0x4
  6838                           
  6839     0050                     ??_MTOUCH_Sensor_AdditionalCap_Get:	
  6840                           ; 1 bytes @ 0x4
  6841                           
  6842     0050                     ??_MTOUCH_Sensor_AcquisitionTime_Get:	
  6843                           ; 1 bytes @ 0x4
  6844                           
  6845     0050                     ??___awmod:	
  6846                           ; 1 bytes @ 0x4
  6847                           
  6848     0050                     ?_MTOUCH_Sensor_RawSample_Get:	
  6849                           ; 1 bytes @ 0x4
  6850                           
  6851     0050                     ?_abs:	
  6852                           ; 2 bytes @ 0x4
  6853                           
  6854     0050                     ?_medianFilter:	
  6855                           ; 2 bytes @ 0x4
  6856                           
  6857     0050                     MTOUCH_Sensor_Enable@sensor:	
  6858                           ; 2 bytes @ 0x4
  6859                           
  6860     0050                     MTOUCH_Sensor_isEnabled@sensor:	
  6861                           ; 1 bytes @ 0x4
  6862                           
  6863     0050                     MTOUCH_Sensor_Calibrate@sensor:	
  6864                           ; 1 bytes @ 0x4
  6865                           
  6866     0050                     MTOUCH_Sensor_wasSampled@sensor:	
  6867                           ; 1 bytes @ 0x4
  6868                           
  6869     0050                     MTOUCH_Sensor_AdditionalCap_Get@name:	
  6870                           ; 1 bytes @ 0x4
  6871                           
  6872     0050                     MTOUCH_Sensor_AcquisitionTime_Get@name:	
  6873                           ; 1 bytes @ 0x4
  6874                           
  6875     0050                     abs@a:	
  6876                           ; 1 bytes @ 0x4
  6877                           
  6878                           
  6879                           ; 2 bytes @ 0x4
  6880     0050                     	ds	1
  6881     0051                     ??_Sensor_scheduleNextScan:
  6882     0051                     ??_MTOUCH_Button_Initialize:	
  6883                           ; 1 bytes @ 0x5
  6884                           
  6885     0051                     ??_MTOUCH_Sensor_Initialize:	
  6886                           ; 1 bytes @ 0x5
  6887                           
  6888     0051                     MTOUCH_Sensor_Initialize@sensor:	
  6889                           ; 1 bytes @ 0x5
  6890                           
  6891     0051                     MTOUCH_Sensor_isCalibrated@sensor:	
  6892                           ; 1 bytes @ 0x5
  6893                           
  6894     0051                     ___awmod@counter:	
  6895                           ; 1 bytes @ 0x5
  6896                           
  6897     0051                     memcpy@s:	
  6898                           ; 1 bytes @ 0x5
  6899                           
  6900                           
  6901                           ; 2 bytes @ 0x5
  6902     0051                     	ds	1
  6903     0052                     ??_MTOUCH_Sensor_RawSample_Get:
  6904     0052                     ??_abs:	
  6905                           ; 1 bytes @ 0x6
  6906                           
  6907     0052                     ??_medianFilter:	
  6908                           ; 1 bytes @ 0x6
  6909                           
  6910     0052                     MTOUCH_Button_Initialize@name:	
  6911                           ; 1 bytes @ 0x6
  6912                           
  6913     0052                     Button_Baseline_Update@button:	
  6914                           ; 1 bytes @ 0x6
  6915                           
  6916     0052                     MTOUCH_Sensor_RawSample_Get@name:	
  6917                           ; 1 bytes @ 0x6
  6918                           
  6919     0052                     ___awmod@sign:	
  6920                           ; 1 bytes @ 0x6
  6921                           
  6922                           
  6923                           ; 1 bytes @ 0x6
  6924     0052                     	ds	1
  6925     0053                     ??_Button_Baseline_Initialize:
  6926     0053                     ??_Button_Reading_Update_Helper:	
  6927                           ; 1 bytes @ 0x7
  6928                           
  6929     0053                     MTOUCH_Button_Initialize@button:	
  6930                           ; 1 bytes @ 0x7
  6931                           
  6932     0053                     Button_Baseline_Get_helper@name:	
  6933                           ; 1 bytes @ 0x7
  6934                           
  6935     0053                     Sensor_scheduleNextScan@state:	
  6936                           ; 1 bytes @ 0x7
  6937                           
  6938     0053                     memcpy@tmp:	
  6939                           ; 1 bytes @ 0x7
  6940                           
  6941                           
  6942                           ; 1 bytes @ 0x7
  6943     0053                     	ds	1
  6944     0054                     ??_Sensor_FrequencyHopping_Autotune_Process:
  6945     0054                     ?_MTOUCH_Button_Baseline_Get:	
  6946                           ; 1 bytes @ 0x8
  6947                           
  6948     0054                     Sensor_scheduleNextScan@skipScan:	
  6949                           ; 2 bytes @ 0x8
  6950                           
  6951     0054                     memcpy@d:	
  6952                           ; 1 bytes @ 0x8
  6953                           
  6954                           
  6955                           ; 1 bytes @ 0x8
  6956     0054                     	ds	1
  6957     0055                     Button_Reading_Update_Helper@button:
  6958     0055                     Sensor_scheduleNextScan@sensor:	
  6959                           ; 1 bytes @ 0x9
  6960                           
  6961     0055                     memcpy@d1:	
  6962                           ; 1 bytes @ 0x9
  6963                           
  6964                           
  6965                           ; 1 bytes @ 0x9
  6966     0055                     	ds	1
  6967     0056                     ??_Button_Reading_Update:
  6968     0056                     ??_MTOUCH_Sensor_InitializeAll:	
  6969                           ; 1 bytes @ 0xA
  6970                           
  6971     0056                     ??_MTOUCH_Button_InitializeAll:	
  6972                           ; 1 bytes @ 0xA
  6973                           
  6974     0056                     ??_MTOUCH_Button_Baseline_Get:	
  6975                           ; 1 bytes @ 0xA
  6976                           
  6977     0056                     ??_MTOUCH_Sensor_isSamplingComplete:	
  6978                           ; 1 bytes @ 0xA
  6979                           
  6980     0056                     Button_Deviation_Update@button:	
  6981                           ; 1 bytes @ 0xA
  6982                           
  6983     0056                     Button_Reading_Update@button:	
  6984                           ; 1 bytes @ 0xA
  6985                           
  6986     0056                     MTOUCH_Button_Baseline_Get@name:	
  6987                           ; 1 bytes @ 0xA
  6988                           
  6989     0056                     medianFilter@sensor:	
  6990                           ; 1 bytes @ 0xA
  6991                           
  6992                           
  6993                           ; 1 bytes @ 0xA
  6994     0056                     	ds	1
  6995     0057                     ??_MTOUCH_DataStreamer_Service:
  6996     0057                     ??_Sensor_RawSample_Update:	
  6997                           ; 1 bytes @ 0xB
  6998                           
  6999     0057                     MTOUCH_Button_InitializeAll@button:	
  7000                           ; 1 bytes @ 0xB
  7001                           
  7002     0057                     Button_Baseline_Initialize@button:	
  7003                           ; 1 bytes @ 0xB
  7004                           
  7005     0057                     MTOUCH_Sensor_InitializeAll@sensor:	
  7006                           ; 1 bytes @ 0xB
  7007                           
  7008     0057                     MTOUCH_Sensor_isSamplingComplete@sensor:	
  7009                           ; 1 bytes @ 0xB
  7010                           
  7011     0057                     Sensor_FrequencyHopping_Autotune_Process@newfrequencyFound:	
  7012                           ; 1 bytes @ 0xB
  7013                           
  7014     0057                     Sensor_RawSample_Update@result:	
  7015                           ; 1 bytes @ 0xB
  7016                           
  7017     0057                     Button_Deviation_Update@deviation:	
  7018                           ; 2 bytes @ 0xB
  7019                           
  7020                           
  7021                           ; 4 bytes @ 0xB
  7022     0057                     	ds	1
  7023     0058                     ??_MTOUCH_Initialize:
  7024     0058                     ?_Button_State_Initializing:	
  7025                           ; 1 bytes @ 0xC
  7026                           
  7027     0058                     ?_Button_State_NotPressed:	
  7028                           ; 1 bytes @ 0xC
  7029                           
  7030     0058                     ?_Button_State_Pressed:	
  7031                           ; 1 bytes @ 0xC
  7032                           
  7033     0058                     ??_SYSTEM_Initialize:	
  7034                           ; 1 bytes @ 0xC
  7035                           
  7036     0058                     Button_State_Initializing@button:	
  7037                           ; 1 bytes @ 0xC
  7038                           
  7039     0058                     Button_State_NotPressed@button:	
  7040                           ; 1 bytes @ 0xC
  7041                           
  7042     0058                     Button_State_Pressed@button:	
  7043                           ; 1 bytes @ 0xC
  7044                           
  7045     0058                     Sensor_FrequencyHopping_Autotune_Process@variance:	
  7046                           ; 1 bytes @ 0xC
  7047                           
  7048                           
  7049                           ; 2 bytes @ 0xC
  7050     0058                     	ds	1
  7051     0059                     ??_Button_State_Initializing:
  7052     0059                     ??_Button_State_NotPressed:	
  7053                           ; 1 bytes @ 0xD
  7054                           
  7055     0059                     ??_Button_State_Pressed:	
  7056                           ; 1 bytes @ 0xD
  7057                           
  7058     0059                     Sensor_RawSample_Update@sensor:	
  7059                           ; 1 bytes @ 0xD
  7060                           
  7061     0059                     MTOUCH_DataStreamer_Service@i:	
  7062                           ; 1 bytes @ 0xD
  7063                           
  7064                           
  7065                           ; 1 bytes @ 0xD
  7066     0059                     	ds	1
  7067     005A                     ??_MTOUCH_Sensor_postAcquisitionProcess:
  7068     005A                     Sensor_FrequencyHopping_Autotune_Process@maxVariance:	
  7069                           ; 1 bytes @ 0xE
  7070                           
  7071     005A                     MTOUCH_DataStreamer_Service@u16temp_output:	
  7072                           ; 2 bytes @ 0xE
  7073                           
  7074                           
  7075                           ; 2 bytes @ 0xE
  7076     005A                     	ds	1
  7077     005B                     MTOUCH_Sensor_postAcquisitionProcess@name:
  7078                           
  7079                           ; 1 bytes @ 0xF
  7080     005B                     	ds	1
  7081     005C                     Sensor_FrequencyHopping_Autotune_Process@sensor:
  7082     005C                     MTOUCH_DataStreamer_Service@count_bytes_out:	
  7083                           ; 1 bytes @ 0x10
  7084                           
  7085                           
  7086                           ; 1 bytes @ 0x10
  7087     005C                     	ds	1
  7088     005D                     ??_Button_Service:
  7089     005D                     Sensor_FrequencyHopping_Autotune_Process@selectedFrequency:	
  7090                           ; 1 bytes @ 0x11
  7091                           
  7092                           
  7093                           ; 1 bytes @ 0x11
  7094     005D                     	ds	1
  7095     005E                     Button_Service@name:
  7096     005E                     Sensor_FrequencyHopping_Autotune_Process@frequencyIndex:	
  7097                           ; 1 bytes @ 0x12
  7098                           
  7099                           
  7100                           ; 1 bytes @ 0x12
  7101     005E                     	ds	1
  7102     005F                     ??_MTOUCH_Sensor_SampleAll:
  7103     005F                     ??_Sensor_FrequencyHopping:	
  7104                           ; 1 bytes @ 0x13
  7105                           
  7106     005F                     Button_Service@button:	
  7107                           ; 1 bytes @ 0x13
  7108                           
  7109                           
  7110                           ; 1 bytes @ 0x13
  7111     005F                     	ds	1
  7112     0060                     ??_MTOUCH_Button_ServiceAll:
  7113                           
  7114                           ; 1 bytes @ 0x14
  7115     0060                     	ds	1
  7116     0061                     MTOUCH_Button_ServiceAll@button:
  7117                           
  7118                           ; 1 bytes @ 0x15
  7119     0061                     	ds	1
  7120     0062                     ??_MTOUCH_Service_Mainloop:
  7121     0062                     ??_main:	
  7122                           ; 1 bytes @ 0x16
  7123                           
  7124                           
  7125                           	psect	maintext
  7126     0932                     __pmaintext:	
  7127                           ; 1 bytes @ 0x16
  7128 ;;
  7129 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  7130 ;;
  7131 ;; *************** function _main *****************
  7132 ;; Defined at:
  7133 ;;		line 49 in file "main.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;		None
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;		None
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  1    wreg      void 
  7140 ;; Registers used:
  7141 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7142 ;; Tracked objects:
  7143 ;;		On entry : B1F/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7151 ;;Total ram usage:        0 bytes
  7152 ;; Hardware stack levels required when called: 14
  7153 ;; This function calls:
  7154 ;;		_MTOUCH_Service_Mainloop
  7155 ;;		_SYSTEM_Initialize
  7156 ;; This function is called by:
  7157 ;;		Startup code after reset
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161     0932                     _main:	
  7162                           ;psect for function _main
  7163                           
  7164     0932                     l4409:	
  7165                           ;incstack = 0
  7166                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7167                           
  7168                           
  7169                           ;main.c: 52:     SYSTEM_Initialize();
  7170     0932  318A  2216  3189   	fcall	_SYSTEM_Initialize
  7171     0935                     l4411:
  7172                           
  7173                           ;main.c: 58:     (INTCONbits.GIE = 1);
  7174     0935  178B               	bsf	11,7	;volatile
  7175     0936                     l4413:
  7176                           
  7177                           ;main.c: 61:     (INTCONbits.PEIE = 1);
  7178     0936  170B               	bsf	11,6	;volatile
  7179     0937                     l108:	
  7180                           ;main.c: 69:     while (1)
  7181                           
  7182                           
  7183                           ;main.c: 70:     {;main.c: 74:          MTOUCH_Service_Mainloop();
  7184     0937  318D  25AE  3189   	fcall	_MTOUCH_Service_Mainloop
  7185     093A  2937               	goto	l108
  7186     093B  3180  2837         	ljmp	start
  7187     093D                     __end_of_main:
  7188                           
  7189                           	psect	text1
  7190     0A16                     __ptext1:	
  7191 ;; *************** function _SYSTEM_Initialize *****************
  7192 ;; Defined at:
  7193 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7194 ;; Parameters:    Size  Location     Type
  7195 ;;		None
  7196 ;; Auto vars:     Size  Location     Type
  7197 ;;		None
  7198 ;; Return value:  Size  Location     Type
  7199 ;;                  1    wreg      void 
  7200 ;; Registers used:
  7201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7202 ;; Tracked objects:
  7203 ;;		On entry : 0/0
  7204 ;;		On exit  : 0/0
  7205 ;;		Unchanged: 0/0
  7206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7211 ;;Total ram usage:        0 bytes
  7212 ;; Hardware stack levels used: 1
  7213 ;; Hardware stack levels required when called: 12
  7214 ;; This function calls:
  7215 ;;		_ADCC_Initialize
  7216 ;;		_EUSART_Initialize
  7217 ;;		_MTOUCH_Initialize
  7218 ;;		_OSCILLATOR_Initialize
  7219 ;;		_PIN_MANAGER_Initialize
  7220 ;;		_PMD_Initialize
  7221 ;; This function is called by:
  7222 ;;		_main
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226     0A16                     _SYSTEM_Initialize:	
  7227                           ;psect for function _SYSTEM_Initialize
  7228                           
  7229     0A16                     l4321:	
  7230                           ;incstack = 0
  7231                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7232                           
  7233                           
  7234                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  7235     0A16  3188  20E9  318A   	fcall	_PMD_Initialize
  7236     0A19                     l4323:
  7237                           
  7238                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7239     0A19  318D  2585  318A   	fcall	_PIN_MANAGER_Initialize
  7240     0A1C                     l4325:
  7241                           
  7242                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7243     0A1C  3189  211E  318A   	fcall	_OSCILLATOR_Initialize
  7244     0A1F                     l4327:
  7245                           
  7246                           ;mcc_generated_files/mcc.c: 55:     ADCC_Initialize();
  7247     0A1F  318C  24C2  318A   	fcall	_ADCC_Initialize
  7248     0A22                     l4329:
  7249                           
  7250                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  7251     0A22  318E  26CB  318A   	fcall	_EUSART_Initialize
  7252     0A25                     l4331:
  7253                           
  7254                           ;mcc_generated_files/mcc.c: 57:     MTOUCH_Initialize();
  7255     0A25  3189  2164  318A   	fcall	_MTOUCH_Initialize
  7256     0A28                     l37:
  7257     0A28  0008               	return
  7258     0A29                     __end_of_SYSTEM_Initialize:
  7259                           
  7260                           	psect	text2
  7261     08E9                     __ptext2:	
  7262 ;; *************** function _PMD_Initialize *****************
  7263 ;; Defined at:
  7264 ;;		line 74 in file "mcc_generated_files/mcc.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;		None
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;		None
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  1    wreg      void 
  7271 ;; Registers used:
  7272 ;;		status,2
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7282 ;;Total ram usage:        0 bytes
  7283 ;; Hardware stack levels used: 1
  7284 ;; Hardware stack levels required when called: 7
  7285 ;; This function calls:
  7286 ;;		Nothing
  7287 ;; This function is called by:
  7288 ;;		_SYSTEM_Initialize
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292     08E9                     _PMD_Initialize:	
  7293                           ;psect for function _PMD_Initialize
  7294                           
  7295     08E9                     l4143:	
  7296                           ;incstack = 0
  7297                           ; Regs used in _PMD_Initialize: [status,2]
  7298                           
  7299                           
  7300                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  7301     08E9  002F               	movlb	15	; select bank15
  7302     08EA  0196               	clrf	22	;volatile
  7303                           
  7304                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  7305     08EB  0197               	clrf	23	;volatile
  7306                           
  7307                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  7308     08EC  0198               	clrf	24	;volatile
  7309                           
  7310                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  7311     08ED  0199               	clrf	25	;volatile
  7312                           
  7313                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  7314     08EE  019A               	clrf	26	;volatile
  7315                           
  7316                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  7317     08EF  019B               	clrf	27	;volatile
  7318     08F0                     l43:
  7319     08F0  0008               	return
  7320     08F1                     __end_of_PMD_Initialize:
  7321                           
  7322                           	psect	text3
  7323     0D85                     __ptext3:	
  7324 ;; *************** function _PIN_MANAGER_Initialize *****************
  7325 ;; Defined at:
  7326 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;		None
  7329 ;; Auto vars:     Size  Location     Type
  7330 ;;		None
  7331 ;; Return value:  Size  Location     Type
  7332 ;;                  1    wreg      void 
  7333 ;; Registers used:
  7334 ;;		wreg, status,2
  7335 ;; Tracked objects:
  7336 ;;		On entry : 0/0
  7337 ;;		On exit  : 0/0
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7344 ;;Total ram usage:        0 bytes
  7345 ;; Hardware stack levels used: 1
  7346 ;; Hardware stack levels required when called: 7
  7347 ;; This function calls:
  7348 ;;		Nothing
  7349 ;; This function is called by:
  7350 ;;		_SYSTEM_Initialize
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353                           
  7354     0D85                     _PIN_MANAGER_Initialize:	
  7355                           ;psect for function _PIN_MANAGER_Initialize
  7356                           
  7357     0D85                     l4145:	
  7358                           ;incstack = 0
  7359                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7360                           
  7361                           
  7362                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7363     0D85  0020               	movlb	0	; select bank0
  7364     0D86  0196               	clrf	22	;volatile
  7365                           
  7366                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7367     0D87  0197               	clrf	23	;volatile
  7368                           
  7369                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  7370     0D88  0198               	clrf	24	;volatile
  7371     0D89                     l4147:
  7372                           
  7373                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  7374     0D89  30FF               	movlw	255
  7375     0D8A  0091               	movwf	17	;volatile
  7376     0D8B                     l4149:
  7377                           
  7378                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  7379     0D8B  30FF               	movlw	255
  7380     0D8C  0092               	movwf	18	;volatile
  7381     0D8D                     l4151:
  7382                           
  7383                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x77;
  7384     0D8D  3077               	movlw	119
  7385     0D8E  0093               	movwf	19	;volatile
  7386     0D8F                     l4153:
  7387                           
  7388                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xF7;
  7389     0D8F  30F7               	movlw	247
  7390     0D90  003E               	movlb	30	; select bank30
  7391     0D91  00CE               	movwf	78	;volatile
  7392     0D92                     l4155:
  7393                           
  7394                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFF;
  7395     0D92  30FF               	movlw	255
  7396     0D93  00C3               	movwf	67	;volatile
  7397     0D94                     l4157:
  7398                           
  7399                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xFF;
  7400     0D94  30FF               	movlw	255
  7401     0D95  00B8               	movwf	56	;volatile
  7402                           
  7403                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  7404     0D96  01E5               	clrf	101	;volatile
  7405                           
  7406                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  7407     0D97  01C4               	clrf	68	;volatile
  7408                           
  7409                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  7410     0D98  01B9               	clrf	57	;volatile
  7411                           
  7412                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  7413     0D99  01CF               	clrf	79	;volatile
  7414                           
  7415                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  7416     0D9A  01BA               	clrf	58	;volatile
  7417                           
  7418                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  7419     0D9B  01C5               	clrf	69	;volatile
  7420                           
  7421                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  7422     0D9C  01D0               	clrf	80	;volatile
  7423     0D9D                     l4159:
  7424                           
  7425                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  7426     0D9D  30FF               	movlw	255
  7427     0D9E  00BB               	movwf	59	;volatile
  7428     0D9F                     l4161:
  7429                           
  7430                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  7431     0D9F  30FF               	movlw	255
  7432     0DA0  00C6               	movwf	70	;volatile
  7433     0DA1                     l4163:
  7434                           
  7435                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  7436     0DA1  30FF               	movlw	255
  7437     0DA2  00D1               	movwf	81	;volatile
  7438     0DA3                     l4165:
  7439                           
  7440                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
  7441     0DA3  30FF               	movlw	255
  7442     0DA4  00BC               	movwf	60	;volatile
  7443     0DA5                     l4167:
  7444                           
  7445                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
  7446     0DA5  30FF               	movlw	255
  7447     0DA6  00C7               	movwf	71	;volatile
  7448     0DA7                     l4169:
  7449                           
  7450                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  7451     0DA7  30FF               	movlw	255
  7452     0DA8  00D2               	movwf	82	;volatile
  7453     0DA9                     l4171:
  7454                           
  7455                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
  7456     0DA9  3008               	movlw	8
  7457     0DAA  00E8               	movwf	104	;volatile
  7458     0DAB                     l4173:
  7459                           
  7460                           ;mcc_generated_files/pin_manager.c: 115:     RC7PPS = 0x10;
  7461     0DAB  3010               	movlw	16
  7462     0DAC  00A7               	movwf	39	;volatile
  7463     0DAD                     l94:
  7464     0DAD  0008               	return
  7465     0DAE                     __end_of_PIN_MANAGER_Initialize:
  7466                           
  7467                           	psect	text4
  7468     091E                     __ptext4:	
  7469 ;; *************** function _OSCILLATOR_Initialize *****************
  7470 ;; Defined at:
  7471 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;		None
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;		None
  7476 ;; Return value:  Size  Location     Type
  7477 ;;                  1    wreg      void 
  7478 ;; Registers used:
  7479 ;;		wreg, status,2
  7480 ;; Tracked objects:
  7481 ;;		On entry : 0/0
  7482 ;;		On exit  : 0/0
  7483 ;;		Unchanged: 0/0
  7484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7489 ;;Total ram usage:        0 bytes
  7490 ;; Hardware stack levels used: 1
  7491 ;; Hardware stack levels required when called: 7
  7492 ;; This function calls:
  7493 ;;		Nothing
  7494 ;; This function is called by:
  7495 ;;		_SYSTEM_Initialize
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499     091E                     _OSCILLATOR_Initialize:	
  7500                           ;psect for function _OSCILLATOR_Initialize
  7501                           
  7502     091E                     l4175:	
  7503                           ;incstack = 0
  7504                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7505                           
  7506                           
  7507                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
  7508     091E  3062               	movlw	98
  7509     091F  0031               	movlb	17	; select bank17
  7510     0920  008D               	movwf	13	;volatile
  7511     0921                     l4177:
  7512                           
  7513                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  7514     0921  018F               	clrf	15	;volatile
  7515     0922                     l4179:
  7516                           
  7517                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  7518     0922  0191               	clrf	17	;volatile
  7519                           
  7520                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  7521     0923  3006               	movlw	6
  7522     0924  0093               	movwf	19	;volatile
  7523     0925                     l4181:
  7524                           
  7525                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  7526     0925  0192               	clrf	18	;volatile
  7527     0926                     l40:
  7528     0926  0008               	return
  7529     0927                     __end_of_OSCILLATOR_Initialize:
  7530                           
  7531                           	psect	text5
  7532     0ECB                     __ptext5:	
  7533 ;; *************** function _EUSART_Initialize *****************
  7534 ;; Defined at:
  7535 ;;		line 88 in file "mcc_generated_files/eusart.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;		None
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;		None
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  1    wreg      void 
  7542 ;; Registers used:
  7543 ;;		wreg, status,2, status,0, pclath, cstack
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7553 ;;Total ram usage:        0 bytes
  7554 ;; Hardware stack levels used: 1
  7555 ;; Hardware stack levels required when called: 8
  7556 ;; This function calls:
  7557 ;;		_EUSART_SetErrorHandler
  7558 ;;		_EUSART_SetFramingErrorHandler
  7559 ;;		_EUSART_SetOverrunErrorHandler
  7560 ;;		_EUSART_SetRxInterruptHandler
  7561 ;;		_EUSART_SetTxInterruptHandler
  7562 ;; This function is called by:
  7563 ;;		_SYSTEM_Initialize
  7564 ;; This function uses a non-reentrant model
  7565 ;;
  7566                           
  7567     0ECB                     _EUSART_Initialize:	
  7568                           ;psect for function _EUSART_Initialize
  7569                           
  7570     0ECB                     l4195:	
  7571                           ;incstack = 0
  7572                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7573                           
  7574                           
  7575                           ;mcc_generated_files/eusart.c: 91:     PIE3bits.RCIE = 0;
  7576     0ECB  002E               	movlb	14	; select bank14
  7577     0ECC  1299               	bcf	25,5	;volatile
  7578     0ECD                     l4197:
  7579                           
  7580                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  7581     0ECD  308E               	movlw	low _EUSART_Receive_ISR
  7582     0ECE  0020               	movlb	0	; select bank0
  7583     0ECF  00CC               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  7584     0ED0  300E               	movlw	high _EUSART_Receive_ISR
  7585     0ED1  00CD               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  7586     0ED2  3189  2115  318E   	fcall	_EUSART_SetRxInterruptHandler
  7587     0ED5                     l4199:
  7588                           
  7589                           ;mcc_generated_files/eusart.c: 93:     PIE3bits.TXIE = 0;
  7590     0ED5  002E               	movlb	14	; select bank14
  7591     0ED6  1219               	bcf	25,4	;volatile
  7592                           
  7593                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  7594     0ED7  30A0               	movlw	low _EUSART_Transmit_ISR
  7595     0ED8  0020               	movlb	0	; select bank0
  7596     0ED9  00CC               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  7597     0EDA  300C               	movlw	high _EUSART_Transmit_ISR
  7598     0EDB  00CD               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  7599     0EDC  3188  20B2  318E   	fcall	_EUSART_SetTxInterruptHandler
  7600     0EDF                     l4201:
  7601                           
  7602                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x08;
  7603     0EDF  3008               	movlw	8
  7604     0EE0  0022               	movlb	2	; select bank2
  7605     0EE1  009F               	movwf	31	;volatile
  7606     0EE2                     l4203:
  7607                           
  7608                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0x80;
  7609     0EE2  3080               	movlw	128
  7610     0EE3  009D               	movwf	29	;volatile
  7611     0EE4                     l4205:
  7612                           
  7613                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x24;
  7614     0EE4  3024               	movlw	36
  7615     0EE5  009E               	movwf	30	;volatile
  7616     0EE6                     l4207:
  7617                           
  7618                           ;mcc_generated_files/eusart.c: 107:     SP1BRGL = 0x10;
  7619     0EE6  3010               	movlw	16
  7620     0EE7  009B               	movwf	27	;volatile
  7621     0EE8                     l4209:
  7622                           
  7623                           ;mcc_generated_files/eusart.c: 110:     SP1BRGH = 0x00;
  7624     0EE8  019C               	clrf	28	;volatile
  7625     0EE9                     l4211:
  7626                           
  7627                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  7628     0EE9  308A               	movlw	low _EUSART_DefaultFramingErrorHandler
  7629     0EEA  0020               	movlb	0	; select bank0
  7630     0EEB  00CC               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  7631     0EEC  3008               	movlw	high _EUSART_DefaultFramingErrorHandler
  7632     0EED  00CD               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  7633     0EEE  3189  2103  318E   	fcall	_EUSART_SetFramingErrorHandler
  7634     0EF1                     l4213:
  7635                           
  7636                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  7637     0EF1  3095               	movlw	low _EUSART_DefaultOverrunErrorHandler
  7638     0EF2  0020               	movlb	0	; select bank0
  7639     0EF3  00CC               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  7640     0EF4  3008               	movlw	high _EUSART_DefaultOverrunErrorHandler
  7641     0EF5  00CD               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  7642     0EF6  3189  210C  318E   	fcall	_EUSART_SetOverrunErrorHandler
  7643     0EF9                     l4215:
  7644                           
  7645                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  7646     0EF9  3091               	movlw	low _EUSART_DefaultErrorHandler
  7647     0EFA  0020               	movlb	0	; select bank0
  7648     0EFB  00CC               	movwf	EUSART_SetErrorHandler@interruptHandler
  7649     0EFC  3008               	movlw	high _EUSART_DefaultErrorHandler
  7650     0EFD  00CD               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  7651     0EFE  3188  20FA  318E   	fcall	_EUSART_SetErrorHandler
  7652                           
  7653                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  7654     0F01  0020               	movlb	0	; select bank0
  7655     0F02  01B3               	clrf	_eusartRxLastError	;volatile
  7656                           
  7657                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  7658     0F03  01B8               	clrf	_eusartTxHead	;volatile
  7659                           
  7660                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  7661     0F04  01B7               	clrf	_eusartTxTail	;volatile
  7662     0F05                     l4217:
  7663                           
  7664                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  7665     0F05  3008               	movlw	8
  7666     0F06  00B6               	movwf	_eusartTxBufferRemaining	;volatile
  7667     0F07                     l4219:
  7668                           
  7669                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  7670     0F07  01B5               	clrf	_eusartRxHead	;volatile
  7671     0F08                     l4221:
  7672                           
  7673                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  7674     0F08  01FD               	clrf	_eusartRxTail	;volatile
  7675     0F09                     l4223:
  7676                           
  7677                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  7678     0F09  01B4               	clrf	_eusartRxCount	;volatile
  7679     0F0A                     l4225:
  7680                           
  7681                           ;mcc_generated_files/eusart.c: 129:     PIE3bits.RCIE = 1;
  7682     0F0A  002E               	movlb	14	; select bank14
  7683     0F0B  1699               	bsf	25,5	;volatile
  7684     0F0C                     l1061:
  7685     0F0C  0008               	return
  7686     0F0D                     __end_of_EUSART_Initialize:
  7687                           
  7688                           	psect	text6
  7689     08B2                     __ptext6:	
  7690 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  7691 ;; Defined at:
  7692 ;;		line 276 in file "mcc_generated_files/eusart.c"
  7693 ;; Parameters:    Size  Location     Type
  7694 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  7695 ;;		 -> EUSART_Transmit_ISR(1), 
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;		None
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  1    wreg      void 
  7700 ;; Registers used:
  7701 ;;		wreg
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7707 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7710 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7711 ;;Total ram usage:        2 bytes
  7712 ;; Hardware stack levels used: 1
  7713 ;; Hardware stack levels required when called: 7
  7714 ;; This function calls:
  7715 ;;		Nothing
  7716 ;; This function is called by:
  7717 ;;		_EUSART_Initialize
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721     08B2                     _EUSART_SetTxInterruptHandler:	
  7722                           ;psect for function _EUSART_SetTxInterruptHandler
  7723                           
  7724     08B2                     l4087:	
  7725                           ;incstack = 0
  7726                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  7727                           
  7728                           
  7729                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  7730     08B2  0020               	movlb	0	; select bank0
  7731     08B3  084D               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  7732     08B4  00EE               	movwf	_EUSART_TxDefaultInterruptHandler+1
  7733     08B5  084C               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  7734     08B6  00ED               	movwf	_EUSART_TxDefaultInterruptHandler
  7735     08B7                     l1127:
  7736     08B7  0008               	return
  7737     08B8                     __end_of_EUSART_SetTxInterruptHandler:
  7738                           
  7739                           	psect	text7
  7740     0915                     __ptext7:	
  7741 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  7742 ;; Defined at:
  7743 ;;		line 280 in file "mcc_generated_files/eusart.c"
  7744 ;; Parameters:    Size  Location     Type
  7745 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  7746 ;;		 -> EUSART_Receive_ISR(1), 
  7747 ;; Auto vars:     Size  Location     Type
  7748 ;;		None
  7749 ;; Return value:  Size  Location     Type
  7750 ;;                  1    wreg      void 
  7751 ;; Registers used:
  7752 ;;		wreg
  7753 ;; Tracked objects:
  7754 ;;		On entry : 0/0
  7755 ;;		On exit  : 0/0
  7756 ;;		Unchanged: 0/0
  7757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7758 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7762 ;;Total ram usage:        2 bytes
  7763 ;; Hardware stack levels used: 1
  7764 ;; Hardware stack levels required when called: 7
  7765 ;; This function calls:
  7766 ;;		Nothing
  7767 ;; This function is called by:
  7768 ;;		_EUSART_Initialize
  7769 ;; This function uses a non-reentrant model
  7770 ;;
  7771                           
  7772     0915                     _EUSART_SetRxInterruptHandler:	
  7773                           ;psect for function _EUSART_SetRxInterruptHandler
  7774                           
  7775     0915                     l4085:	
  7776                           ;incstack = 0
  7777                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  7778                           
  7779                           
  7780                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  7781     0915  0020               	movlb	0	; select bank0
  7782     0916  084D               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  7783     0917  0021               	movlb	1	; select bank1
  7784     0918  00E0               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  7785     0919  0020               	movlb	0	; select bank0
  7786     091A  084C               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  7787     091B  0021               	movlb	1	; select bank1
  7788     091C  00DF               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  7789     091D                     l1130:
  7790     091D  0008               	return
  7791     091E                     __end_of_EUSART_SetRxInterruptHandler:
  7792                           
  7793                           	psect	text8
  7794     090C                     __ptext8:	
  7795 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7796 ;; Defined at:
  7797 ;;		line 268 in file "mcc_generated_files/eusart.c"
  7798 ;; Parameters:    Size  Location     Type
  7799 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  7800 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7801 ;; Auto vars:     Size  Location     Type
  7802 ;;		None
  7803 ;; Return value:  Size  Location     Type
  7804 ;;                  1    wreg      void 
  7805 ;; Registers used:
  7806 ;;		wreg
  7807 ;; Tracked objects:
  7808 ;;		On entry : 0/0
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7812 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7815 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7816 ;;Total ram usage:        2 bytes
  7817 ;; Hardware stack levels used: 1
  7818 ;; Hardware stack levels required when called: 7
  7819 ;; This function calls:
  7820 ;;		Nothing
  7821 ;; This function is called by:
  7822 ;;		_EUSART_Initialize
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826     090C                     _EUSART_SetOverrunErrorHandler:	
  7827                           ;psect for function _EUSART_SetOverrunErrorHandler
  7828                           
  7829     090C                     l4091:	
  7830                           ;incstack = 0
  7831                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7832                           
  7833                           
  7834                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  7835     090C  0020               	movlb	0	; select bank0
  7836     090D  084D               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  7837     090E  0021               	movlb	1	; select bank1
  7838     090F  00DC               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  7839     0910  0020               	movlb	0	; select bank0
  7840     0911  084C               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  7841     0912  0021               	movlb	1	; select bank1
  7842     0913  00DB               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  7843     0914                     l1121:
  7844     0914  0008               	return
  7845     0915                     __end_of_EUSART_SetOverrunErrorHandler:
  7846                           
  7847                           	psect	text9
  7848     0903                     __ptext9:	
  7849 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7850 ;; Defined at:
  7851 ;;		line 264 in file "mcc_generated_files/eusart.c"
  7852 ;; Parameters:    Size  Location     Type
  7853 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  7854 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;		None
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  1    wreg      void 
  7859 ;; Registers used:
  7860 ;;		wreg
  7861 ;; Tracked objects:
  7862 ;;		On entry : 0/0
  7863 ;;		On exit  : 0/0
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7866 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7869 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7870 ;;Total ram usage:        2 bytes
  7871 ;; Hardware stack levels used: 1
  7872 ;; Hardware stack levels required when called: 7
  7873 ;; This function calls:
  7874 ;;		Nothing
  7875 ;; This function is called by:
  7876 ;;		_EUSART_Initialize
  7877 ;; This function uses a non-reentrant model
  7878 ;;
  7879                           
  7880     0903                     _EUSART_SetFramingErrorHandler:	
  7881                           ;psect for function _EUSART_SetFramingErrorHandler
  7882                           
  7883     0903                     l4089:	
  7884                           ;incstack = 0
  7885                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7886                           
  7887                           
  7888                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  7889     0903  0020               	movlb	0	; select bank0
  7890     0904  084D               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  7891     0905  0021               	movlb	1	; select bank1
  7892     0906  00DE               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  7893     0907  0020               	movlb	0	; select bank0
  7894     0908  084C               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  7895     0909  0021               	movlb	1	; select bank1
  7896     090A  00DD               	movwf	_EUSART_FramingErrorHandler^(0+128)
  7897     090B                     l1118:
  7898     090B  0008               	return
  7899     090C                     __end_of_EUSART_SetFramingErrorHandler:
  7900                           
  7901                           	psect	text10
  7902     08FA                     __ptext10:	
  7903 ;; *************** function _EUSART_SetErrorHandler *****************
  7904 ;; Defined at:
  7905 ;;		line 272 in file "mcc_generated_files/eusart.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  7908 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;		None
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  1    wreg      void 
  7913 ;; Registers used:
  7914 ;;		wreg
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7920 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7923 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7924 ;;Total ram usage:        2 bytes
  7925 ;; Hardware stack levels used: 1
  7926 ;; Hardware stack levels required when called: 7
  7927 ;; This function calls:
  7928 ;;		Nothing
  7929 ;; This function is called by:
  7930 ;;		_EUSART_Initialize
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934     08FA                     _EUSART_SetErrorHandler:	
  7935                           ;psect for function _EUSART_SetErrorHandler
  7936                           
  7937     08FA                     l4093:	
  7938                           ;incstack = 0
  7939                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7940                           
  7941                           
  7942                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  7943     08FA  0020               	movlb	0	; select bank0
  7944     08FB  084D               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  7945     08FC  0021               	movlb	1	; select bank1
  7946     08FD  00DA               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  7947     08FE  0020               	movlb	0	; select bank0
  7948     08FF  084C               	movf	EUSART_SetErrorHandler@interruptHandler,w
  7949     0900  0021               	movlb	1	; select bank1
  7950     0901  00D9               	movwf	_EUSART_ErrorHandler^(0+128)
  7951     0902                     l1124:
  7952     0902  0008               	return
  7953     0903                     __end_of_EUSART_SetErrorHandler:
  7954                           
  7955                           	psect	text11
  7956     0CC2                     __ptext11:	
  7957 ;; *************** function _ADCC_Initialize *****************
  7958 ;; Defined at:
  7959 ;;		line 64 in file "mcc_generated_files/adcc.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;		None
  7962 ;; Auto vars:     Size  Location     Type
  7963 ;;		None
  7964 ;; Return value:  Size  Location     Type
  7965 ;;                  1    wreg      void 
  7966 ;; Registers used:
  7967 ;;		wreg, status,2, status,0, pclath, cstack
  7968 ;; Tracked objects:
  7969 ;;		On entry : 0/0
  7970 ;;		On exit  : 0/0
  7971 ;;		Unchanged: 0/0
  7972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7977 ;;Total ram usage:        0 bytes
  7978 ;; Hardware stack levels used: 1
  7979 ;; Hardware stack levels required when called: 8
  7980 ;; This function calls:
  7981 ;;		_ADCC_SetADTIInterruptHandler
  7982 ;; This function is called by:
  7983 ;;		_SYSTEM_Initialize
  7984 ;; This function uses a non-reentrant model
  7985 ;;
  7986                           
  7987     0CC2                     _ADCC_Initialize:	
  7988                           ;psect for function _ADCC_Initialize
  7989                           
  7990     0CC2                     l4183:	
  7991                           ;incstack = 0
  7992                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7993                           
  7994                           
  7995                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
  7996     0CC2  0022               	movlb	2	; select bank2
  7997     0CC3  018E               	clrf	14	;volatile
  7998                           
  7999                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
  8000     0CC4  018F               	clrf	15	;volatile
  8001                           
  8002                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
  8003     0CC5  0190               	clrf	16	;volatile
  8004                           
  8005                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
  8006     0CC6  0191               	clrf	17	;volatile
  8007                           
  8008                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
  8009     0CC7  0192               	clrf	18	;volatile
  8010                           
  8011                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
  8012     0CC8  0193               	clrf	19	;volatile
  8013                           
  8014                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  8015     0CC9  018D               	clrf	13	;volatile
  8016                           
  8017                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  8018     0CCA  0021               	movlb	1	; select bank1
  8019     0CCB  019E               	clrf	30	;volatile
  8020                           
  8021                           ;mcc_generated_files/adcc.c: 84:     ADCAP = 0x00;
  8022     0CCC  019B               	clrf	27	;volatile
  8023                           
  8024                           ;mcc_generated_files/adcc.c: 86:     ADPRE = 0x00;
  8025     0CCD  019C               	clrf	28	;volatile
  8026                           
  8027                           ;mcc_generated_files/adcc.c: 88:     ADCON1 = 0x00;
  8028     0CCE  0194               	clrf	20	;volatile
  8029                           
  8030                           ;mcc_generated_files/adcc.c: 90:     ADCON2 = 0x00;
  8031     0CCF  0195               	clrf	21	;volatile
  8032                           
  8033                           ;mcc_generated_files/adcc.c: 92:     ADCON3 = 0x00;
  8034     0CD0  0196               	clrf	22	;volatile
  8035                           
  8036                           ;mcc_generated_files/adcc.c: 94:     ADSTAT = 0x00;
  8037     0CD1  0197               	clrf	23	;volatile
  8038                           
  8039                           ;mcc_generated_files/adcc.c: 96:     ADREF = 0x00;
  8040     0CD2  019A               	clrf	26	;volatile
  8041                           
  8042                           ;mcc_generated_files/adcc.c: 98:     ADACT = 0x00;
  8043     0CD3  0199               	clrf	25	;volatile
  8044     0CD4                     l4185:
  8045                           
  8046                           ;mcc_generated_files/adcc.c: 100:     ADCLK = 0x03;
  8047     0CD4  3003               	movlw	3
  8048     0CD5  0098               	movwf	24	;volatile
  8049     0CD6                     l4187:
  8050                           
  8051                           ;mcc_generated_files/adcc.c: 102:     ADCON0 = 0x84;
  8052     0CD6  3084               	movlw	132
  8053     0CD7  0093               	movwf	19	;volatile
  8054                           
  8055                           ;mcc_generated_files/adcc.c: 104:     ADACQ = 0x00;
  8056     0CD8  019D               	clrf	29	;volatile
  8057     0CD9                     l4189:
  8058                           
  8059                           ;mcc_generated_files/adcc.c: 108:     PIR1bits.ADTIF = 0;
  8060     0CD9  002E               	movlb	14	; select bank14
  8061     0CDA  108D               	bcf	13,1	;volatile
  8062     0CDB                     l4191:
  8063                           
  8064                           ;mcc_generated_files/adcc.c: 110:     PIE1bits.ADTIE = 1;
  8065     0CDB  1497               	bsf	23,1	;volatile
  8066     0CDC                     l4193:
  8067                           
  8068                           ;mcc_generated_files/adcc.c: 112:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
  8069     0CDC  3089               	movlw	low _ADCC_DefaultInterruptHandler
  8070     0CDD  0020               	movlb	0	; select bank0
  8071     0CDE  00CC               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
  8072     0CDF  3008               	movlw	high _ADCC_DefaultInterruptHandler
  8073     0CE0  00CD               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
  8074     0CE1  3188  20AC  318C   	fcall	_ADCC_SetADTIInterruptHandler
  8075     0CE4                     l473:
  8076     0CE4  0008               	return
  8077     0CE5                     __end_of_ADCC_Initialize:
  8078                           
  8079                           	psect	text12
  8080     0DAE                     __ptext12:	
  8081 ;; *************** function _MTOUCH_Service_Mainloop *****************
  8082 ;; Defined at:
  8083 ;;		line 102 in file "mcc_generated_files/mtouch/mtouch.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;		None
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;  mask            1    0        unsigned char 
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  1    wreg      _Bool 
  8090 ;; Registers used:
  8091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8101 ;;Total ram usage:        0 bytes
  8102 ;; Hardware stack levels used: 1
  8103 ;; Hardware stack levels required when called: 13
  8104 ;; This function calls:
  8105 ;;		_MTOUCH_Button_ServiceAll
  8106 ;;		_MTOUCH_DataStreamer_Service
  8107 ;;		_MTOUCH_Initialize
  8108 ;;		_MTOUCH_Sensor_SampleAll
  8109 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  8110 ;;		_MTOUCH_Tick
  8111 ;;		_MTOUCH_needReburst
  8112 ;; This function is called by:
  8113 ;;		_main
  8114 ;;		_touch_example
  8115 ;; This function uses a non-reentrant model
  8116 ;;
  8117                           
  8118     0DAE                     _MTOUCH_Service_Mainloop:	
  8119                           ;psect for function _MTOUCH_Service_Mainloop
  8120                           
  8121     0DAE                     l4333:	
  8122                           ;incstack = 0
  8123                           ; Regs used in _MTOUCH_Service_Mainloop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8124                           
  8125     0DAE                     l4335:
  8126                           
  8127                           ;mcc_generated_files/mtouch/mtouch.c: 105:     if(mtouch_request_init)
  8128     0DAE  0020               	movlb	0	; select bank0
  8129     0DAF  0841               	movf	_mtouch_request_init,w
  8130     0DB0  1903               	btfsc	3,2
  8131     0DB1  2DB3               	goto	u3101
  8132     0DB2  2DB4               	goto	u3100
  8133     0DB3                     u3101:
  8134     0DB3  2DB9               	goto	l4341
  8135     0DB4                     u3100:
  8136     0DB4                     l4337:
  8137                           
  8138                           ;mcc_generated_files/mtouch/mtouch.c: 106:     {;mcc_generated_files/mtouch/mtouch.c: 10
      +                          7:         MTOUCH_Initialize();
  8139     0DB4  3189  2164  318D   	fcall	_MTOUCH_Initialize
  8140     0DB7                     l4339:
  8141                           
  8142                           ;mcc_generated_files/mtouch/mtouch.c: 108:         mtouch_request_init = 0;
  8143     0DB7  0020               	movlb	0	; select bank0
  8144     0DB8  01C1               	clrf	_mtouch_request_init
  8145     0DB9                     l4341:
  8146                           
  8147                           ;mcc_generated_files/mtouch/mtouch.c: 111:     mtouch_time_toScan = 1;
  8148     0DB9  01C2               	clrf	_mtouch_time_toScan
  8149     0DBA  0AC2               	incf	_mtouch_time_toScan,f
  8150     0DBB                     l4343:
  8151     0DBB                     l4345:	
  8152                           ;mcc_generated_files/mtouch/mtouch.c: 113:     if(mtouch_time_toScan)
  8153                           
  8154                           
  8155                           ;mcc_generated_files/mtouch/mtouch.c: 114:     {;mcc_generated_files/mtouch/mtouch.c: 11
      +                          5:             if(MTOUCH_Sensor_SampleAll() == 0)
  8156     0DBB  3189  21DE  318D   	fcall	_MTOUCH_Sensor_SampleAll
  8157     0DBE  3A00               	xorlw	0
  8158     0DBF  1D03               	skipz
  8159     0DC0  2DC2               	goto	u3111
  8160     0DC1  2DC3               	goto	u3110
  8161     0DC2                     u3111:
  8162     0DC2  2DC5               	goto	l4351
  8163     0DC3                     u3110:
  8164     0DC3                     l4347:
  8165                           
  8166                           ;mcc_generated_files/mtouch/mtouch.c: 116:             {;mcc_generated_files/mtouch/mtou
      +                          ch.c: 117:                 return 0;
  8167     0DC3  3000               	movlw	0
  8168     0DC4  2DD7               	goto	l375
  8169     0DC5                     l4351:
  8170                           
  8171                           ;mcc_generated_files/mtouch/mtouch.c: 120:             MTOUCH_Button_ServiceAll();
  8172     0DC5  3189  2185  318D   	fcall	_MTOUCH_Button_ServiceAll
  8173     0DC8                     l4353:
  8174                           
  8175                           ;mcc_generated_files/mtouch/mtouch.c: 123:             MTOUCH_DataStreamer_Service();
  8176     0DC8  3181  21B1  318D   	fcall	_MTOUCH_DataStreamer_Service
  8177     0DCB                     l4355:
  8178                           
  8179                           ;mcc_generated_files/mtouch/mtouch.c: 125:             mtouch_time_toScan = MTOUCH_needR
      +                          eburst();
  8180     0DCB  3180  2002  318D   	fcall	_MTOUCH_needReburst
  8181     0DCE  0020               	movlb	0	; select bank0
  8182     0DCF  00C2               	movwf	_mtouch_time_toScan
  8183     0DD0                     l4357:
  8184                           
  8185                           ;mcc_generated_files/mtouch/mtouch.c: 126:             MTOUCH_Sensor_Sampled_ResetAll();
  8186     0DD0  318C  2440  318D   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  8187     0DD3                     l4359:
  8188                           
  8189                           ;mcc_generated_files/mtouch/mtouch.c: 127:             MTOUCH_Tick();
  8190     0DD3  3188  209D  318D   	fcall	_MTOUCH_Tick
  8191     0DD6                     l4361:
  8192                           
  8193                           ;mcc_generated_files/mtouch/mtouch.c: 128:             return 1;
  8194     0DD6  3001               	movlw	1
  8195     0DD7                     l375:
  8196     0DD7  0008               	return
  8197     0DD8                     __end_of_MTOUCH_Service_Mainloop:
  8198                           
  8199                           	psect	text13
  8200     0002                     __ptext13:	
  8201 ;; *************** function _MTOUCH_needReburst *****************
  8202 ;; Defined at:
  8203 ;;		line 153 in file "mcc_generated_files/mtouch/mtouch.c"
  8204 ;; Parameters:    Size  Location     Type
  8205 ;;		None
  8206 ;; Auto vars:     Size  Location     Type
  8207 ;;  needReburst     1    0        _Bool 
  8208 ;; Return value:  Size  Location     Type
  8209 ;;                  1    wreg      _Bool 
  8210 ;; Registers used:
  8211 ;;		wreg, status,2
  8212 ;; Tracked objects:
  8213 ;;		On entry : 0/0
  8214 ;;		On exit  : 0/0
  8215 ;;		Unchanged: 0/0
  8216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8221 ;;Total ram usage:        0 bytes
  8222 ;; Hardware stack levels used: 1
  8223 ;; Hardware stack levels required when called: 7
  8224 ;; This function calls:
  8225 ;;		Nothing
  8226 ;; This function is called by:
  8227 ;;		_MTOUCH_Service_Mainloop
  8228 ;; This function uses a non-reentrant model
  8229 ;;
  8230                           
  8231     0002                     _MTOUCH_needReburst:	
  8232                           ;psect for function _MTOUCH_needReburst
  8233                           
  8234     0002                     l4305:	
  8235                           ;incstack = 0
  8236                           ; Regs used in _MTOUCH_needReburst: [wreg+status,2]
  8237                           
  8238     0002                     l4307:
  8239                           
  8240                           ;mcc_generated_files/mtouch/mtouch.c: 157:     return needReburst;
  8241     0002  3000               	movlw	0
  8242     0003                     l382:
  8243     0003  0008               	return
  8244     0004                     __end_of_MTOUCH_needReburst:
  8245                           
  8246                           	psect	text14
  8247     089D                     __ptext14:	
  8248 ;; *************** function _MTOUCH_Tick *****************
  8249 ;; Defined at:
  8250 ;;		line 141 in file "mcc_generated_files/mtouch/mtouch.c"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;		None
  8253 ;; Auto vars:     Size  Location     Type
  8254 ;;		None
  8255 ;; Return value:  Size  Location     Type
  8256 ;;                  1    wreg      void 
  8257 ;; Registers used:
  8258 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8259 ;; Tracked objects:
  8260 ;;		On entry : 0/0
  8261 ;;		On exit  : 0/0
  8262 ;;		Unchanged: 0/0
  8263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8268 ;;Total ram usage:        0 bytes
  8269 ;; Hardware stack levels used: 1
  8270 ;; Hardware stack levels required when called: 9
  8271 ;; This function calls:
  8272 ;;		_MTOUCH_Button_Tick
  8273 ;; This function is called by:
  8274 ;;		_MTOUCH_Service_Mainloop
  8275 ;; This function uses a non-reentrant model
  8276 ;;
  8277                           
  8278     089D                     _MTOUCH_Tick:	
  8279                           ;psect for function _MTOUCH_Tick
  8280                           
  8281     089D                     l4311:	
  8282                           ;incstack = 0
  8283                           ; Regs used in _MTOUCH_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8284                           
  8285                           
  8286                           ;mcc_generated_files/mtouch/mtouch.c: 144:     MTOUCH_Button_Tick();
  8287     089D  3188  20A1  3188   	fcall	_MTOUCH_Button_Tick
  8288     08A0                     l379:
  8289     08A0  0008               	return
  8290     08A1                     __end_of_MTOUCH_Tick:
  8291                           
  8292                           	psect	text15
  8293     08A1                     __ptext15:	
  8294 ;; *************** function _MTOUCH_Button_Tick *****************
  8295 ;; Defined at:
  8296 ;;		line 281 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8297 ;; Parameters:    Size  Location     Type
  8298 ;;		None
  8299 ;; Auto vars:     Size  Location     Type
  8300 ;;		None
  8301 ;; Return value:  Size  Location     Type
  8302 ;;                  1    wreg      void 
  8303 ;; Registers used:
  8304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8305 ;; Tracked objects:
  8306 ;;		On entry : 0/0
  8307 ;;		On exit  : 0/0
  8308 ;;		Unchanged: 0/0
  8309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8314 ;;Total ram usage:        0 bytes
  8315 ;; Hardware stack levels used: 1
  8316 ;; Hardware stack levels required when called: 8
  8317 ;; This function calls:
  8318 ;;		_Button_Tick_helper
  8319 ;; This function is called by:
  8320 ;;		_MTOUCH_Tick
  8321 ;; This function uses a non-reentrant model
  8322 ;;
  8323                           
  8324     08A1                     _MTOUCH_Button_Tick:	
  8325                           ;psect for function _MTOUCH_Button_Tick
  8326                           
  8327     08A1                     l3887:	
  8328                           ;incstack = 0
  8329                           ; Regs used in _MTOUCH_Button_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8330                           
  8331                           
  8332                           ;mcc_generated_files/mtouch/mtouch_button.c: 283:     Button_Tick_helper(&mtouch_button[
      +                          0]);
  8333     08A1  30B0               	movlw	(low (_mtouch_button| 0))& (0+255)
  8334     08A2  318D  250B  3188   	fcall	_Button_Tick_helper
  8335     08A5                     l232:
  8336     08A5  0008               	return
  8337     08A6                     __end_of_MTOUCH_Button_Tick:
  8338                           
  8339                           	psect	text16
  8340     0D0B                     __ptext16:	
  8341 ;; *************** function _Button_Tick_helper *****************
  8342 ;; Defined at:
  8343 ;;		line 285 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8344 ;; Parameters:    Size  Location     Type
  8345 ;;  button          1    wreg     PTR struct .
  8346 ;;		 -> mtouch_button(16), 
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;  button          1    2[BANK0 ] PTR struct .
  8349 ;;		 -> mtouch_button(16), 
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  1    wreg      void 
  8352 ;; Registers used:
  8353 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8360 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8361 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8362 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8363 ;;Total ram usage:        3 bytes
  8364 ;; Hardware stack levels used: 1
  8365 ;; Hardware stack levels required when called: 7
  8366 ;; This function calls:
  8367 ;;		Nothing
  8368 ;; This function is called by:
  8369 ;;		_MTOUCH_Button_Tick
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373     0D0B                     _Button_Tick_helper:	
  8374                           ;psect for function _Button_Tick_helper
  8375                           
  8376                           
  8377                           ;incstack = 0
  8378                           ; Regs used in _Button_Tick_helper: [wreg+fsr1l+fsr1h+status,2+status,0]
  8379                           ;Button_Tick_helper@button stored from wreg
  8380     0D0B  0020               	movlb	0	; select bank0
  8381     0D0C  00CE               	movwf	Button_Tick_helper@button
  8382     0D0D                     l3579:
  8383                           
  8384                           ;mcc_generated_files/mtouch/mtouch_button.c: 285: static void Button_Tick_helper(mtouch_
      +                          button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 286: {;mcc_generated_files
      +                          /mtouch/mtouch_button.c: 288:     if ((button->state) == MTOUCH_BUTTON_STATE_pressed)
  8385     0D0D  084E               	movf	Button_Tick_helper@button,w
  8386     0D0E  3E02               	addlw	2
  8387     0D0F  0086               	movwf	6
  8388     0D10  0187               	clrf	7
  8389     0D11  3002               	movlw	2
  8390     0D12  0601               	xorwf	1,w
  8391     0D13  1D03               	btfss	3,2
  8392     0D14  2D16               	goto	u2181
  8393     0D15  2D17               	goto	u2180
  8394     0D16                     u2181:
  8395     0D16  2D32               	goto	l237
  8396     0D17                     u2180:
  8397     0D17                     l3581:
  8398                           
  8399                           ;mcc_generated_files/mtouch/mtouch_button.c: 289:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 290:         (button->counter)++;
  8400     0D17  084E               	movf	Button_Tick_helper@button,w
  8401     0D18  3E0A               	addlw	10
  8402     0D19  0086               	movwf	6
  8403     0D1A  0187               	clrf	7
  8404     0D1B  3001               	movlw	1
  8405     0D1C  0781               	addwf	1,f
  8406     0D1D  3141               	addfsr 1,1
  8407     0D1E  1803               	skipnc
  8408     0D1F  0A81               	incf	1,f
  8409                           
  8410                           ;mcc_generated_files/mtouch/mtouch_button.c: 291:         if (button->counter == (mtouch
      +                          _button_statecounter_t)0)
  8411     0D20  084E               	movf	Button_Tick_helper@button,w
  8412     0D21  3E0A               	addlw	10
  8413     0D22  0086               	movwf	6
  8414     0D23  0187               	clrf	7
  8415     0D24  0016               	moviw fsr1++
  8416     0D25  0401               	iorwf	1,w
  8417     0D26  1D03               	btfss	3,2
  8418     0D27  2D29               	goto	u2191
  8419     0D28  2D2A               	goto	u2190
  8420     0D29                     u2191:
  8421     0D29  2D32               	goto	l237
  8422     0D2A                     u2190:
  8423     0D2A                     l3583:
  8424                           
  8425                           ;mcc_generated_files/mtouch/mtouch_button.c: 292:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 293:             button->counter = (mtouch_button_statecounter_t)0xFFFF;
  8426     0D2A  084E               	movf	Button_Tick_helper@button,w
  8427     0D2B  3E0A               	addlw	10
  8428     0D2C  0086               	movwf	6
  8429     0D2D  0187               	clrf	7
  8430     0D2E  30FF               	movlw	255
  8431     0D2F  3FC0               	movwi [0]fsr1
  8432     0D30  30FF               	movlw	255
  8433     0D31  3FC1               	movwi [1]fsr1
  8434     0D32                     l237:
  8435     0D32  0008               	return
  8436     0D33                     __end_of_Button_Tick_helper:
  8437                           
  8438                           	psect	text17
  8439     09DE                     __ptext17:	
  8440 ;; *************** function _MTOUCH_Sensor_SampleAll *****************
  8441 ;; Defined at:
  8442 ;;		line 301 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;		None
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;		None
  8447 ;; Return value:  Size  Location     Type
  8448 ;;                  1    wreg      _Bool 
  8449 ;; Registers used:
  8450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8451 ;; Tracked objects:
  8452 ;;		On entry : 0/0
  8453 ;;		On exit  : 0/0
  8454 ;;		Unchanged: 0/0
  8455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8460 ;;Total ram usage:        0 bytes
  8461 ;; Hardware stack levels used: 1
  8462 ;; Hardware stack levels required when called: 11
  8463 ;; This function calls:
  8464 ;;		_MTOUCH_Sensor_isSamplingComplete
  8465 ;;		_MTOUCH_Sensor_postAcquisitionProcess
  8466 ;;		_Sensor_FrequencyHopping
  8467 ;; This function is called by:
  8468 ;;		_MTOUCH_Service_Mainloop
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472     09DE                     _MTOUCH_Sensor_SampleAll:	
  8473                           ;psect for function _MTOUCH_Sensor_SampleAll
  8474                           
  8475     09DE                     l4247:	
  8476                           ;incstack = 0
  8477                           ; Regs used in _MTOUCH_Sensor_SampleAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8478                           
  8479                           
  8480                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 303:     if(MTOUCH_Sensor_isSamplingComplet
      +                          e() == 0)
  8481     09DE  318E  262F  3189   	fcall	_MTOUCH_Sensor_isSamplingComplete
  8482     09E1  3A00               	xorlw	0
  8483     09E2  1D03               	skipz
  8484     09E3  29E5               	goto	u3051
  8485     09E4  29E6               	goto	u3050
  8486     09E5                     u3051:
  8487     09E5  29E8               	goto	l4253
  8488     09E6                     u3050:
  8489     09E6                     l4249:
  8490                           
  8491                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 304:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 305:         return 0;
  8492     09E6  3000               	movlw	0
  8493     09E7  29EF               	goto	l711
  8494     09E8                     l4253:
  8495                           
  8496                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 309:     Sensor_FrequencyHopping();
  8497     09E8  3188  20D2  3189   	fcall	_Sensor_FrequencyHopping
  8498                           
  8499                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 310:     MTOUCH_Sensor_postAcquisitionProce
      +                          ss();
  8500     09EB  318D  25D8  3189   	fcall	_MTOUCH_Sensor_postAcquisitionProcess
  8501     09EE                     l4255:
  8502                           
  8503                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 312:     return 1;
  8504     09EE  3001               	movlw	1
  8505     09EF                     l711:
  8506     09EF  0008               	return
  8507     09F0                     __end_of_MTOUCH_Sensor_SampleAll:
  8508                           
  8509                           	psect	text18
  8510     08D2                     __ptext18:	
  8511 ;; *************** function _Sensor_FrequencyHopping *****************
  8512 ;; Defined at:
  8513 ;;		line 649 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;		None
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;		None
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  1    wreg      void 
  8520 ;; Registers used:
  8521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8531 ;;Total ram usage:        0 bytes
  8532 ;; Hardware stack levels used: 1
  8533 ;; Hardware stack levels required when called: 9
  8534 ;; This function calls:
  8535 ;;		_Sensor_FrequencyHopping_Autotune_Process
  8536 ;;		_Sensor_setSamplePeriod
  8537 ;; This function is called by:
  8538 ;;		_MTOUCH_Sensor_SampleAll
  8539 ;; This function uses a non-reentrant model
  8540 ;;
  8541                           
  8542     08D2                     _Sensor_FrequencyHopping:	
  8543                           ;psect for function _Sensor_FrequencyHopping
  8544                           
  8545     08D2                     l4011:	
  8546                           ;incstack = 0
  8547                           ; Regs used in _Sensor_FrequencyHopping: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8548                           
  8549                           
  8550                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 652:     Sensor_FrequencyHopping_Autotune_P
      +                          rocess();
  8551     08D2  3182  2279  3188   	fcall	_Sensor_FrequencyHopping_Autotune_Process
  8552     08D5                     l4013:
  8553                           
  8554                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 654:     Sensor_setSamplePeriod();
  8555     08D5  318A  2203  3188   	fcall	_Sensor_setSamplePeriod
  8556     08D8                     l812:
  8557     08D8  0008               	return
  8558     08D9                     __end_of_Sensor_FrequencyHopping:
  8559                           
  8560                           	psect	text19
  8561     0A03                     __ptext19:	
  8562 ;; *************** function _Sensor_setSamplePeriod *****************
  8563 ;; Defined at:
  8564 ;;		line 560 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;		None
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;		None
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  1    wreg      void 
  8571 ;; Registers used:
  8572 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8580 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8581 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8582 ;;Total ram usage:        1 bytes
  8583 ;; Hardware stack levels used: 1
  8584 ;; Hardware stack levels required when called: 7
  8585 ;; This function calls:
  8586 ;;		Nothing
  8587 ;; This function is called by:
  8588 ;;		_Sensor_FrequencyHopping
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592     0A03                     _Sensor_setSamplePeriod:	
  8593                           ;psect for function _Sensor_setSamplePeriod
  8594                           
  8595     0A03                     l3713:	
  8596                           ;incstack = 0
  8597                           ; Regs used in _Sensor_setSamplePeriod: [wreg+fsr1l+fsr1h+status,2+status,0]
  8598                           
  8599                           
  8600                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 562:     if(++freq_index >= sizeof(freq_hop
      +                          ) )
  8601     0A03  3001               	movlw	1
  8602     0A04  0020               	movlb	0	; select bank0
  8603     0A05  00CC               	movwf	??_Sensor_setSamplePeriod
  8604     0A06  084C               	movf	??_Sensor_setSamplePeriod,w
  8605     0A07  07BC               	addwf	_freq_index,f
  8606     0A08  3003               	movlw	3
  8607     0A09  023C               	subwf	_freq_index,w
  8608     0A0A  1C03               	skipc
  8609     0A0B  2A0D               	goto	u2361
  8610     0A0C  2A0E               	goto	u2360
  8611     0A0D                     u2361:
  8612     0A0D  2A0F               	goto	l3717
  8613     0A0E                     u2360:
  8614     0A0E                     l3715:
  8615                           
  8616                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 563:         freq_index = 0;
  8617     0A0E  01BC               	clrf	_freq_index
  8618     0A0F                     l3717:
  8619                           
  8620                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 565:     sample_delay = freq_hop[freq_index
      +                          ];
  8621     0A0F  083C               	movf	_freq_index,w
  8622     0A10  3E62               	addlw	(low (_freq_hop| 0))& (0+255)
  8623     0A11  0086               	movwf	6
  8624     0A12  0187               	clrf	7
  8625     0A13  0801               	movf	1,w
  8626     0A14  00BB               	movwf	_sample_delay
  8627     0A15                     l778:
  8628     0A15  0008               	return
  8629     0A16                     __end_of_Sensor_setSamplePeriod:
  8630                           
  8631                           	psect	text20
  8632     0279                     __ptext20:	
  8633 ;; *************** function _Sensor_FrequencyHopping_Autotune_Process *****************
  8634 ;; Defined at:
  8635 ;;		line 663 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;		None
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;  maxVariance     2   14[BANK0 ] unsigned short 
  8640 ;;  variance        2   12[BANK0 ] unsigned short 
  8641 ;;  frequencyInd    1   18[BANK0 ] unsigned char 
  8642 ;;  selectedFreq    1   17[BANK0 ] unsigned char 
  8643 ;;  sensor          1   16[BANK0 ] enum E11929
  8644 ;;  newfrequency    1   11[BANK0 ] unsigned char 
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  1    wreg      void 
  8647 ;; Registers used:
  8648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8655 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8656 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8657 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8658 ;;Total ram usage:       11 bytes
  8659 ;; Hardware stack levels used: 1
  8660 ;; Hardware stack levels required when called: 8
  8661 ;; This function calls:
  8662 ;;		___bmul
  8663 ;;		_abs
  8664 ;; This function is called by:
  8665 ;;		_Sensor_FrequencyHopping
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669     0279                     _Sensor_FrequencyHopping_Autotune_Process:	
  8670                           ;psect for function _Sensor_FrequencyHopping_Autotune_Process
  8671                           
  8672     0279                     l3719:	
  8673                           ;incstack = 0
  8674                           ; Regs used in _Sensor_FrequencyHopping_Autotune_Process: [wreg-fsr1h+status,2+status,0+
      +                          pclath+cstack]
  8675                           
  8676                           
  8677                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 665:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 666:     uint8_t frequencyIndex;;mcc_generate
      +                          d_files/mtouch/mtouch_sensor.c: 667:     uint8_t newfrequencyFound,selectedFrequency;;mc
      +                          c_generated_files/mtouch/mtouch_sensor.c: 668:     uint16_t variance,maxVariance;;mcc_ge
      +                          nerated_files/mtouch/mtouch_sensor.c: 671:     static uint8_t varianceOverLimitCounter[3
      +                          ] = {0,0,0};;mcc_generated_files/mtouch/mtouch_sensor.c: 673:     maxVariance = 0;
  8678     0279  0020               	movlb	0	; select bank0
  8679     027A  01DA               	clrf	Sensor_FrequencyHopping_Autotune_Process@maxVariance
  8680     027B  01DB               	clrf	Sensor_FrequencyHopping_Autotune_Process@maxVariance+1
  8681                           
  8682                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 675:     for(sensor = 0; sensor < (1u); sen
      +                          sor++)
  8683     027C  01DC               	clrf	Sensor_FrequencyHopping_Autotune_Process@sensor
  8684     027D                     l3725:
  8685                           
  8686                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 676:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 677:         variance = (mtouch_sensor_packetsample_t)abs(packet_sample[sens
      +                          or] - sensor_medianBuffer[sensor][freq_index]);
  8687     027D  083C               	movf	_freq_index,w
  8688     027E  00D4               	movwf	??_Sensor_FrequencyHopping_Autotune_Process
  8689     027F  3001               	movlw	1
  8690     0280                     u2375:
  8691     0280  35D4               	lslf	??_Sensor_FrequencyHopping_Autotune_Process,f
  8692     0281  0B89               	decfsz	9,f
  8693     0282  2A80               	goto	u2375
  8694     0283  3028               	movlw	(low (_sensor_medianBuffer| 0))& (0+255)
  8695     0284  0754               	addwf	??_Sensor_FrequencyHopping_Autotune_Process,w
  8696     0285  00D5               	movwf	??_Sensor_FrequencyHopping_Autotune_Process+1
  8697     0286  3006               	movlw	6
  8698     0287  00CC               	movwf	___bmul@multiplicand
  8699     0288  085C               	movf	Sensor_FrequencyHopping_Autotune_Process@sensor,w
  8700     0289  318A  22CC  3182   	fcall	___bmul
  8701     028C  0020               	movlb	0	; select bank0
  8702     028D  0755               	addwf	??_Sensor_FrequencyHopping_Autotune_Process+1,w
  8703     028E  00D6               	movwf	??_Sensor_FrequencyHopping_Autotune_Process+2
  8704     028F  0856               	movf	??_Sensor_FrequencyHopping_Autotune_Process+2,w
  8705     0290  0086               	movwf	6
  8706     0291  0187               	clrf	7
  8707     0292  355C               	lslf	Sensor_FrequencyHopping_Autotune_Process@sensor,w
  8708     0293  3E31               	addlw	(low (_packet_sample| 0))& (0+255)
  8709     0294  0084               	movwf	4
  8710     0295  0185               	clrf	5
  8711     0296  3F40               	moviw [0]fsr1
  8712     0297  0200               	subwf	0,w
  8713     0298  00D0               	movwf	abs@a
  8714     0299  3101               	addfsr 0,1
  8715     029A  3F41               	moviw [1]fsr1
  8716     029B  3B00               	subwfb	0,w
  8717     029C  00D1               	movwf	abs@a+1
  8718     029D  3189  21CC  3182   	fcall	_abs
  8719     02A0  0020               	movlb	0	; select bank0
  8720     02A1  0851               	movf	?_abs+1,w
  8721     02A2  00D9               	movwf	Sensor_FrequencyHopping_Autotune_Process@variance+1
  8722     02A3  0850               	movf	?_abs,w
  8723     02A4  00D8               	movwf	Sensor_FrequencyHopping_Autotune_Process@variance
  8724     02A5                     l3727:
  8725                           
  8726                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 678:         if(variance > maxVariance)
  8727     02A5  0859               	movf	Sensor_FrequencyHopping_Autotune_Process@variance+1,w
  8728     02A6  025B               	subwf	Sensor_FrequencyHopping_Autotune_Process@maxVariance+1,w
  8729     02A7  1D03               	skipz
  8730     02A8  2AAB               	goto	u2385
  8731     02A9  0858               	movf	Sensor_FrequencyHopping_Autotune_Process@variance,w
  8732     02AA  025A               	subwf	Sensor_FrequencyHopping_Autotune_Process@maxVariance,w
  8733     02AB                     u2385:
  8734     02AB  1803               	skipnc
  8735     02AC  2AAE               	goto	u2381
  8736     02AD  2AAF               	goto	u2380
  8737     02AE                     u2381:
  8738     02AE  2AB3               	goto	l3731
  8739     02AF                     u2380:
  8740     02AF                     l3729:
  8741                           
  8742                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 679:             maxVariance = variance;
  8743     02AF  0859               	movf	Sensor_FrequencyHopping_Autotune_Process@variance+1,w
  8744     02B0  00DB               	movwf	Sensor_FrequencyHopping_Autotune_Process@maxVariance+1
  8745     02B1  0858               	movf	Sensor_FrequencyHopping_Autotune_Process@variance,w
  8746     02B2  00DA               	movwf	Sensor_FrequencyHopping_Autotune_Process@maxVariance
  8747     02B3                     l3731:
  8748                           
  8749                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 680:     }
  8750     02B3  3001               	movlw	1
  8751     02B4  00D4               	movwf	??_Sensor_FrequencyHopping_Autotune_Process
  8752     02B5  0854               	movf	??_Sensor_FrequencyHopping_Autotune_Process,w
  8753     02B6  07DC               	addwf	Sensor_FrequencyHopping_Autotune_Process@sensor,f
  8754     02B7                     l3733:
  8755     02B7  085C               	movf	Sensor_FrequencyHopping_Autotune_Process@sensor,w
  8756     02B8  1903               	btfsc	3,2
  8757     02B9  2ABB               	goto	u2391
  8758     02BA  2ABC               	goto	u2390
  8759     02BB                     u2391:
  8760     02BB  2A7D               	goto	l3725
  8761     02BC                     u2390:
  8762     02BC                     l3735:
  8763                           
  8764                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 682:     if(maxVariance > (mtouch_sensor_pa
      +                          cketsample_t)100)
  8765     02BC  3000               	movlw	0
  8766     02BD  025B               	subwf	Sensor_FrequencyHopping_Autotune_Process@maxVariance+1,w
  8767     02BE  3065               	movlw	101
  8768     02BF  1903               	skipnz
  8769     02C0  025A               	subwf	Sensor_FrequencyHopping_Autotune_Process@maxVariance,w
  8770     02C1  1C03               	skipc
  8771     02C2  2AC4               	goto	u2401
  8772     02C3  2AC5               	goto	u2400
  8773     02C4                     u2401:
  8774     02C4  2B20               	goto	l3785
  8775     02C5                     u2400:
  8776     02C5                     l3737:
  8777                           
  8778                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 683:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 684:         if(++varianceOverLimitCounter[freq_index] >= (uint8_t)6)
  8779     02C5  3001               	movlw	1
  8780     02C6  00D4               	movwf	??_Sensor_FrequencyHopping_Autotune_Process
  8781     02C7  083C               	movf	_freq_index,w
  8782     02C8  3E2E               	addlw	(low (Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter| 0))& (0+
      +                          255)
  8783     02C9  0086               	movwf	6
  8784     02CA  0187               	clrf	7
  8785     02CB  0854               	movf	??_Sensor_FrequencyHopping_Autotune_Process,w
  8786     02CC  0781               	addwf	1,f
  8787     02CD  3006               	movlw	6
  8788     02CE  0201               	subwf	1,w
  8789     02CF  1C03               	skipc
  8790     02D0  2AD2               	goto	u2411
  8791     02D1  2AD3               	goto	u2410
  8792     02D2                     u2411:
  8793     02D2  2B38               	goto	l838
  8794     02D3                     u2410:
  8795     02D3                     l3739:
  8796     02D3                     l3741:
  8797                           
  8798                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 687:             selectedFrequency = freq_h
      +                          op[freq_index];
  8799     02D3  083C               	movf	_freq_index,w
  8800     02D4  3E62               	addlw	(low (_freq_hop| 0))& (0+255)
  8801     02D5  0086               	movwf	6
  8802     02D6  0187               	clrf	7
  8803     02D7  0801               	movf	1,w
  8804     02D8  00DD               	movwf	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency
  8805     02D9                     l3743:
  8806                           
  8807                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 689:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 690:                 if(selectedFrequency > ((uint8_t)((mtouch_senso
      +                          r_time_t)0 << (uint8_t)0) + ((mtouch_sensor_time_t)1 << (uint8_t)0)))
  8808     02D9  3002               	movlw	2
  8809     02DA  025D               	subwf	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency,w
  8810     02DB  1C03               	skipc
  8811     02DC  2ADE               	goto	u2421
  8812     02DD  2ADF               	goto	u2420
  8813     02DE                     u2421:
  8814     02DE  2AE3               	goto	l3747
  8815     02DF                     u2420:
  8816     02DF                     l3745:
  8817                           
  8818                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 691:                     selectedFrequency 
      +                          = selectedFrequency - ((mtouch_sensor_time_t)1 << (uint8_t)0);
  8819     02DF  085D               	movf	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency,w
  8820     02E0  3EFF               	addlw	255
  8821     02E1  00DD               	movwf	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency
  8822     02E2  2AE5               	goto	l3749
  8823     02E3                     l3747:
  8824                           
  8825                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 693:                     selectedFrequency 
      +                          = (uint8_t)((mtouch_sensor_time_t)15 << (uint8_t)0);
  8826     02E3  300F               	movlw	15
  8827     02E4  00DD               	movwf	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency
  8828     02E5                     l3749:
  8829                           
  8830                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 695:                 newfrequencyFound = 1;
  8831     02E5  01D7               	clrf	Sensor_FrequencyHopping_Autotune_Process@newfrequencyFound
  8832     02E6  0AD7               	incf	Sensor_FrequencyHopping_Autotune_Process@newfrequencyFound,f
  8833     02E7                     l3751:
  8834                           
  8835                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 697:                 for(frequencyIndex = 0
      +                          ;frequencyIndex < sizeof(freq_hop);frequencyIndex++)
  8836     02E7  01DE               	clrf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex
  8837     02E8                     l3757:
  8838                           
  8839                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 698:                 {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 699:                     if(frequencyIndex == freq_index)
  8840     02E8  085E               	movf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex,w
  8841     02E9  063C               	xorwf	_freq_index,w
  8842     02EA  1D03               	skipz
  8843     02EB  2AED               	goto	u2431
  8844     02EC  2AEE               	goto	u2430
  8845     02ED                     u2431:
  8846     02ED  2AEF               	goto	l3761
  8847     02EE                     u2430:
  8848     02EE  2AFA               	goto	l3765
  8849     02EF                     l3761:
  8850     02EF  085E               	movf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex,w
  8851     02F0  3E62               	addlw	(low (_freq_hop| 0))& (0+255)
  8852     02F1  0086               	movwf	6
  8853     02F2  0187               	clrf	7
  8854     02F3  0801               	movf	1,w
  8855     02F4  065D               	xorwf	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency,w
  8856     02F5  1D03               	skipz
  8857     02F6  2AF8               	goto	u2441
  8858     02F7  2AF9               	goto	u2440
  8859     02F8                     u2441:
  8860     02F8  2AFA               	goto	l3765
  8861     02F9                     u2440:
  8862     02F9                     l3763:
  8863                           
  8864                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 704:                     {;mcc_generated_fi
      +                          les/mtouch/mtouch_sensor.c: 705:                         newfrequencyFound = 0;
  8865     02F9  01D7               	clrf	Sensor_FrequencyHopping_Autotune_Process@newfrequencyFound
  8866     02FA                     l3765:	
  8867                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 706:                     }
  8868                           
  8869                           
  8870                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 711:                 }
  8871     02FA  3001               	movlw	1
  8872     02FB  00D4               	movwf	??_Sensor_FrequencyHopping_Autotune_Process
  8873     02FC  0854               	movf	??_Sensor_FrequencyHopping_Autotune_Process,w
  8874     02FD  07DE               	addwf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex,f
  8875     02FE                     l3767:
  8876     02FE  3003               	movlw	3
  8877     02FF  025E               	subwf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex,w
  8878     0300  1C03               	skipc
  8879     0301  2B03               	goto	u2451
  8880     0302  2B04               	goto	u2450
  8881     0303                     u2451:
  8882     0303  2AE8               	goto	l3757
  8883     0304                     u2450:
  8884     0304                     l3769:
  8885                           
  8886                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 713:             }while(!newfrequencyFound)
      +                          ;
  8887     0304  0857               	movf	Sensor_FrequencyHopping_Autotune_Process@newfrequencyFound,w
  8888     0305  1903               	btfsc	3,2
  8889     0306  2B08               	goto	u2461
  8890     0307  2B09               	goto	u2460
  8891     0308                     u2461:
  8892     0308  2AD9               	goto	l3743
  8893     0309                     u2460:
  8894     0309                     l3771:
  8895                           
  8896                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 715:             freq_hop[freq_index] = sel
      +                          ectedFrequency;
  8897     0309  083C               	movf	_freq_index,w
  8898     030A  3E62               	addlw	(low (_freq_hop| 0))& (0+255)
  8899     030B  0086               	movwf	6
  8900     030C  0187               	clrf	7
  8901     030D  085D               	movf	Sensor_FrequencyHopping_Autotune_Process@selectedFrequency,w
  8902     030E  0081               	movwf	1
  8903     030F                     l3773:
  8904                           
  8905                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 717:             for(frequencyIndex = 0;fre
      +                          quencyIndex < sizeof(freq_hop);frequencyIndex++)
  8906     030F  01DE               	clrf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex
  8907     0310                     l3779:
  8908                           
  8909                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 718:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 719:                 varianceOverLimitCounter[frequencyIndex] = 0;
  8910     0310  085E               	movf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex,w
  8911     0311  3E2E               	addlw	(low (Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter| 0))& (0+
      +                          255)
  8912     0312  0086               	movwf	6
  8913     0313  0187               	clrf	7
  8914     0314  0181               	clrf	1
  8915     0315                     l3781:
  8916                           
  8917                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 720:             }
  8918     0315  3001               	movlw	1
  8919     0316  00D4               	movwf	??_Sensor_FrequencyHopping_Autotune_Process
  8920     0317  0854               	movf	??_Sensor_FrequencyHopping_Autotune_Process,w
  8921     0318  07DE               	addwf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex,f
  8922     0319                     l3783:
  8923     0319  3003               	movlw	3
  8924     031A  025E               	subwf	Sensor_FrequencyHopping_Autotune_Process@frequencyIndex,w
  8925     031B  1C03               	skipc
  8926     031C  2B1E               	goto	u2471
  8927     031D  2B1F               	goto	u2470
  8928     031E                     u2471:
  8929     031E  2B10               	goto	l3779
  8930     031F                     u2470:
  8931     031F  2B38               	goto	l838
  8932     0320                     l3785:
  8933     0320  3000               	movlw	0
  8934     0321  025B               	subwf	Sensor_FrequencyHopping_Autotune_Process@maxVariance+1,w
  8935     0322  3032               	movlw	50
  8936     0323  1903               	skipnz
  8937     0324  025A               	subwf	Sensor_FrequencyHopping_Autotune_Process@maxVariance,w
  8938     0325  1803               	skipnc
  8939     0326  2B28               	goto	u2481
  8940     0327  2B29               	goto	u2480
  8941     0328                     u2481:
  8942     0328  2B38               	goto	l838
  8943     0329                     u2480:
  8944     0329                     l3787:
  8945                           
  8946                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 724:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 726:         if(varianceOverLimitCounter[freq_index] > 0)
  8947     0329  083C               	movf	_freq_index,w
  8948     032A  3E2E               	addlw	(low (Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter| 0))& (0+
      +                          255)
  8949     032B  0086               	movwf	6
  8950     032C  0187               	clrf	7
  8951     032D  0801               	movf	1,w
  8952     032E  1903               	btfsc	3,2
  8953     032F  2B31               	goto	u2491
  8954     0330  2B32               	goto	u2490
  8955     0331                     u2491:
  8956     0331  2B38               	goto	l838
  8957     0332                     u2490:
  8958     0332                     l3789:
  8959                           
  8960                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 727:             varianceOverLimitCounter[f
      +                          req_index]--;
  8961     0332  083C               	movf	_freq_index,w
  8962     0333  3E2E               	addlw	(low (Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter| 0))& (0+
      +                          255)
  8963     0334  0086               	movwf	6
  8964     0335  0187               	clrf	7
  8965     0336  3001               	movlw	1
  8966     0337  0281               	subwf	1,f
  8967     0338                     l838:
  8968     0338  0008               	return
  8969     0339                     __end_of_Sensor_FrequencyHopping_Autotune_Process:
  8970                           
  8971                           	psect	text21
  8972     09CC                     __ptext21:	
  8973 ;; *************** function _abs *****************
  8974 ;; Defined at:
  8975 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;  a               2    4[BANK0 ] int 
  8978 ;; Auto vars:     Size  Location     Type
  8979 ;;		None
  8980 ;; Return value:  Size  Location     Type
  8981 ;;                  2    4[BANK0 ] int 
  8982 ;; Registers used:
  8983 ;;		wreg, status,2, status,0
  8984 ;; Tracked objects:
  8985 ;;		On entry : 0/0
  8986 ;;		On exit  : 0/0
  8987 ;;		Unchanged: 0/0
  8988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8989 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8991 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8992 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8993 ;;Total ram usage:        4 bytes
  8994 ;; Hardware stack levels used: 1
  8995 ;; Hardware stack levels required when called: 7
  8996 ;; This function calls:
  8997 ;;		Nothing
  8998 ;; This function is called by:
  8999 ;;		_Sensor_FrequencyHopping_Autotune_Process
  9000 ;; This function uses a non-reentrant model
  9001 ;;
  9002                           
  9003     09CC                     _abs:	
  9004                           ;psect for function _abs
  9005                           
  9006     09CC                     l3381:	
  9007                           ;incstack = 0
  9008                           ; Regs used in _abs: [wreg+status,2+status,0]
  9009                           
  9010     09CC  0020               	movlb	0	; select bank0
  9011     09CD  1BD1               	btfsc	abs@a+1,7
  9012     09CE  29D0               	goto	u1911
  9013     09CF  29D1               	goto	u1910
  9014     09D0                     u1911:
  9015     09D0  29D2               	goto	l3385
  9016     09D1                     u1910:
  9017     09D1                     l3383:
  9018     09D1  29DD               	goto	l1745
  9019     09D2                     l3385:
  9020     09D2  0950               	comf	abs@a,w
  9021     09D3  00D2               	movwf	??_abs
  9022     09D4  0951               	comf	abs@a+1,w
  9023     09D5  00D3               	movwf	??_abs+1
  9024     09D6  0AD2               	incf	??_abs,f
  9025     09D7  1903               	skipnz
  9026     09D8  0AD3               	incf	??_abs+1,f
  9027     09D9  0852               	movf	??_abs,w
  9028     09DA  00D0               	movwf	?_abs
  9029     09DB  0853               	movf	??_abs+1,w
  9030     09DC  00D1               	movwf	?_abs+1
  9031     09DD                     l1745:
  9032     09DD  0008               	return
  9033     09DE                     __end_of_abs:
  9034                           
  9035                           	psect	text22
  9036     0DD8                     __ptext22:	
  9037 ;; *************** function _MTOUCH_Sensor_postAcquisitionProcess *****************
  9038 ;; Defined at:
  9039 ;;		line 469 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;		None
  9042 ;; Auto vars:     Size  Location     Type
  9043 ;;  name            1   15[BANK0 ] enum E11929
  9044 ;; Return value:  Size  Location     Type
  9045 ;;                  1    wreg      void 
  9046 ;; Registers used:
  9047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9048 ;; Tracked objects:
  9049 ;;		On entry : 0/0
  9050 ;;		On exit  : 0/0
  9051 ;;		Unchanged: 0/0
  9052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9054 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9055 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9056 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9057 ;;Total ram usage:        2 bytes
  9058 ;; Hardware stack levels used: 1
  9059 ;; Hardware stack levels required when called: 10
  9060 ;; This function calls:
  9061 ;;		_Sensor_DefaultCallback
  9062 ;;		_Sensor_RawSample_Update
  9063 ;;		___bmul
  9064 ;; This function is called by:
  9065 ;;		_MTOUCH_Sensor_SampleAll
  9066 ;; This function uses a non-reentrant model
  9067 ;;
  9068                           
  9069     0DD8                     _MTOUCH_Sensor_postAcquisitionProcess:	
  9070                           ;psect for function _MTOUCH_Sensor_postAcquisitionProcess
  9071                           
  9072     0DD8                     l4015:	
  9073                           ;incstack = 0
  9074                           ; Regs used in _MTOUCH_Sensor_postAcquisitionProcess: [wreg-fsr1h+status,2+status,0+pcla
      +                          th+cstack]
  9075                           
  9076                           
  9077                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 471:     enum mtouch_sensor_names name;;mcc
      +                          _generated_files/mtouch/mtouch_sensor.c: 473:     for (name = 0; name < (1u); name++)
  9078     0DD8  0020               	movlb	0	; select bank0
  9079     0DD9  01DB               	clrf	MTOUCH_Sensor_postAcquisitionProcess@name
  9080     0DDA                     l4021:
  9081                           
  9082                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 474:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 475:         if(mtouch_sensor[name].sampled)
  9083     0DDA  3009               	movlw	9
  9084     0DDB  00CC               	movwf	___bmul@multiplicand
  9085     0DDC  085B               	movf	MTOUCH_Sensor_postAcquisitionProcess@name,w
  9086     0DDD  318A  22CC  318D   	fcall	___bmul
  9087     0DE0  3E4B               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
  9088     0DE1  0086               	movwf	6
  9089     0DE2  0187               	clrf	7
  9090     0DE3  1C81               	btfss	1,1
  9091     0DE4  2DE6               	goto	u2851
  9092     0DE5  2DE7               	goto	u2850
  9093     0DE6                     u2851:
  9094     0DE6  2DF8               	goto	l4027
  9095     0DE7                     u2850:
  9096     0DE7                     l4023:
  9097                           
  9098                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 476:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 477:             Sensor_RawSample_Update(&mtouch_sensor[name]);
  9099     0DE7  3009               	movlw	9
  9100     0DE8  0020               	movlb	0	; select bank0
  9101     0DE9  00CC               	movwf	___bmul@multiplicand
  9102     0DEA  085B               	movf	MTOUCH_Sensor_postAcquisitionProcess@name,w
  9103     0DEB  318A  22CC  318D   	fcall	___bmul
  9104     0DEE  3E43               	addlw	(low (_mtouch_sensor| 0))& (0+255)
  9105     0DEF  318C  24E5  318D   	fcall	_Sensor_RawSample_Update
  9106     0DF2                     l4025:
  9107                           
  9108                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 478:             callback_sampled(name);
  9109     0DF2  0020               	movlb	0	; select bank0
  9110     0DF3  085B               	movf	MTOUCH_Sensor_postAcquisitionProcess@name,w
  9111     0DF4  00CC               	movwf	Sensor_DefaultCallback@sensor
  9112     0DF5  3188  208D  318D   	fcall	_Sensor_DefaultCallback
  9113     0DF8                     l4027:
  9114                           
  9115                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 480:     }
  9116     0DF8  3001               	movlw	1
  9117     0DF9  0020               	movlb	0	; select bank0
  9118     0DFA  00DA               	movwf	??_MTOUCH_Sensor_postAcquisitionProcess
  9119     0DFB  085A               	movf	??_MTOUCH_Sensor_postAcquisitionProcess,w
  9120     0DFC  07DB               	addwf	MTOUCH_Sensor_postAcquisitionProcess@name,f
  9121     0DFD                     l4029:
  9122     0DFD  085B               	movf	MTOUCH_Sensor_postAcquisitionProcess@name,w
  9123     0DFE  1903               	btfsc	3,2
  9124     0DFF  2E01               	goto	u2861
  9125     0E00  2E02               	goto	u2860
  9126     0E01                     u2861:
  9127     0E01  2DDA               	goto	l4021
  9128     0E02                     u2860:
  9129     0E02                     l756:
  9130     0E02  0008               	return
  9131     0E03                     __end_of_MTOUCH_Sensor_postAcquisitionProcess:
  9132                           
  9133                           	psect	text23
  9134     0CE5                     __ptext23:	
  9135 ;; *************** function _Sensor_RawSample_Update *****************
  9136 ;; Defined at:
  9137 ;;		line 591 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9138 ;; Parameters:    Size  Location     Type
  9139 ;;  sensor          1    wreg     PTR struct .
  9140 ;;		 -> mtouch_sensor(9), 
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;  sensor          1   13[BANK0 ] PTR struct .
  9143 ;;		 -> mtouch_sensor(9), 
  9144 ;;  result          2   11[BANK0 ] unsigned short 
  9145 ;; Return value:  Size  Location     Type
  9146 ;;                  1    wreg      void 
  9147 ;; Registers used:
  9148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9149 ;; Tracked objects:
  9150 ;;		On entry : 0/0
  9151 ;;		On exit  : 0/0
  9152 ;;		Unchanged: 0/0
  9153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9155 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9157 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9158 ;;Total ram usage:        3 bytes
  9159 ;; Hardware stack levels used: 1
  9160 ;; Hardware stack levels required when called: 9
  9161 ;; This function calls:
  9162 ;;		_medianFilter
  9163 ;; This function is called by:
  9164 ;;		_MTOUCH_Sensor_postAcquisitionProcess
  9165 ;; This function uses a non-reentrant model
  9166 ;;
  9167                           
  9168     0CE5                     _Sensor_RawSample_Update:	
  9169                           ;psect for function _Sensor_RawSample_Update
  9170                           
  9171                           
  9172                           ;incstack = 0
  9173                           ; Regs used in _Sensor_RawSample_Update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9174                           ;Sensor_RawSample_Update@sensor stored from wreg
  9175     0CE5  0020               	movlb	0	; select bank0
  9176     0CE6  00D9               	movwf	Sensor_RawSample_Update@sensor
  9177     0CE7                     l3699:
  9178                           
  9179                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 591: static void Sensor_RawSample_Update(mt
      +                          ouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 592: {;mcc_generated_
      +                          files/mtouch/mtouch_sensor.c: 593:     mtouch_sensor_sample_t result = medianFilter(sens
      +                          or->sensor_name);
  9180     0CE7  0859               	movf	Sensor_RawSample_Update@sensor,w
  9181     0CE8  0086               	movwf	6
  9182     0CE9  0187               	clrf	7
  9183     0CEA  0801               	movf	1,w
  9184     0CEB  3180  2066  318C   	fcall	_medianFilter
  9185     0CEE  0020               	movlb	0	; select bank0
  9186     0CEF  0851               	movf	?_medianFilter+1,w
  9187     0CF0  00D8               	movwf	Sensor_RawSample_Update@result+1
  9188     0CF1  0850               	movf	?_medianFilter,w
  9189     0CF2  00D7               	movwf	Sensor_RawSample_Update@result
  9190     0CF3                     l3701:
  9191                           
  9192                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 595:     if (GIE == (uint8_t)1)
  9193     0CF3  1F8B               	btfss	11,7	;volatile
  9194     0CF4  2CF6               	goto	u2351
  9195     0CF5  2CF7               	goto	u2350
  9196     0CF6                     u2351:
  9197     0CF6  2D02               	goto	l3709
  9198     0CF7                     u2350:
  9199     0CF7                     l3703:
  9200                           
  9201                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 596:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 597:         GIE = (uint8_t)0;
  9202     0CF7  138B               	bcf	11,7	;volatile
  9203     0CF8                     l3705:
  9204                           
  9205                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 598:         sensor->rawSample = result;
  9206     0CF8  0859               	movf	Sensor_RawSample_Update@sensor,w
  9207     0CF9  3E06               	addlw	6
  9208     0CFA  0086               	movwf	6
  9209     0CFB  0187               	clrf	7
  9210     0CFC  0857               	movf	Sensor_RawSample_Update@result,w
  9211     0CFD  3FC0               	movwi [0]fsr1
  9212     0CFE  0858               	movf	Sensor_RawSample_Update@result+1,w
  9213     0CFF  3FC1               	movwi [1]fsr1
  9214     0D00                     l3707:
  9215                           
  9216                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 599:         GIE = (uint8_t)1;
  9217     0D00  178B               	bsf	11,7	;volatile
  9218                           
  9219                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 600:     }
  9220     0D01  2D0A               	goto	l793
  9221     0D02                     l3709:
  9222                           
  9223                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 602:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 603:         sensor->rawSample = result;
  9224     0D02  0859               	movf	Sensor_RawSample_Update@sensor,w
  9225     0D03  3E06               	addlw	6
  9226     0D04  0086               	movwf	6
  9227     0D05  0187               	clrf	7
  9228     0D06  0857               	movf	Sensor_RawSample_Update@result,w
  9229     0D07  3FC0               	movwi [0]fsr1
  9230     0D08  0858               	movf	Sensor_RawSample_Update@result+1,w
  9231     0D09  3FC1               	movwi [1]fsr1
  9232     0D0A                     l793:
  9233     0D0A  0008               	return
  9234     0D0B                     __end_of_Sensor_RawSample_Update:
  9235                           
  9236                           	psect	text24
  9237     0066                     __ptext24:	
  9238 ;; *************** function _medianFilter *****************
  9239 ;; Defined at:
  9240 ;;		line 608 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9241 ;; Parameters:    Size  Location     Type
  9242 ;;  sensor          1    wreg     enum E11929
  9243 ;; Auto vars:     Size  Location     Type
  9244 ;;  sensor          1   10[BANK0 ] enum E11929
  9245 ;; Return value:  Size  Location     Type
  9246 ;;                  2    4[BANK0 ] unsigned short 
  9247 ;; Registers used:
  9248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9249 ;; Tracked objects:
  9250 ;;		On entry : 0/0
  9251 ;;		On exit  : 0/0
  9252 ;;		Unchanged: 0/0
  9253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9254 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9256 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9257 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9258 ;;Total ram usage:        7 bytes
  9259 ;; Hardware stack levels used: 1
  9260 ;; Hardware stack levels required when called: 8
  9261 ;; This function calls:
  9262 ;;		___bmul
  9263 ;; This function is called by:
  9264 ;;		_Sensor_RawSample_Update
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268     0066                     _medianFilter:	
  9269                           ;psect for function _medianFilter
  9270                           
  9271                           
  9272                           ;incstack = 0
  9273                           ; Regs used in _medianFilter: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9274                           ;medianFilter@sensor stored from wreg
  9275     0066  0020               	movlb	0	; select bank0
  9276     0067  00D6               	movwf	medianFilter@sensor
  9277     0068                     l3391:
  9278                           
  9279                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 608: static mtouch_sensor_packetsample_t me
      +                          dianFilter(enum mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          609: {;mcc_generated_files/mtouch/mtouch_sensor.c: 610:     static uint8_t bufferIndex[(
      +                          1u)];;mcc_generated_files/mtouch/mtouch_sensor.c: 612:     sensor_medianBuffer[sensor][b
      +                          ufferIndex[sensor]++] = packet_sample[sensor];
  9280     0068  3556               	lslf	medianFilter@sensor,w
  9281     0069  3E31               	addlw	(low (_packet_sample| 0))& (0+255)
  9282     006A  0086               	movwf	6
  9283     006B  0187               	clrf	7
  9284     006C  0856               	movf	medianFilter@sensor,w
  9285     006D  3E3A               	addlw	(low (medianFilter@bufferIndex| 0))& (0+255)
  9286     006E  0084               	movwf	4
  9287     006F  0185               	clrf	5
  9288     0070  0800               	movf	0,w
  9289     0071  0A80               	incf	0,f
  9290     0072  00D2               	movwf	??_medianFilter
  9291     0073  3001               	movlw	1
  9292     0074                     u1925:
  9293     0074  35D2               	lslf	??_medianFilter,f
  9294     0075  0B89               	decfsz	9,f
  9295     0076  2874               	goto	u1925
  9296     0077  3028               	movlw	(low (_sensor_medianBuffer| 0))& (0+255)
  9297     0078  0752               	addwf	??_medianFilter,w
  9298     0079  00D3               	movwf	??_medianFilter+1
  9299     007A  3006               	movlw	6
  9300     007B  00CC               	movwf	___bmul@multiplicand
  9301     007C  0856               	movf	medianFilter@sensor,w
  9302     007D  318A  22CC  3180   	fcall	___bmul
  9303     0080  0020               	movlb	0	; select bank0
  9304     0081  0753               	addwf	??_medianFilter+1,w
  9305     0082  00D4               	movwf	??_medianFilter+2
  9306     0083  0854               	movf	??_medianFilter+2,w
  9307     0084  0084               	movwf	4
  9308     0085  0185               	clrf	5
  9309     0086  3F40               	moviw [0]fsr1
  9310     0087  3F80               	movwi [0]fsr0
  9311     0088  3F41               	moviw [1]fsr1
  9312     0089  3F81               	movwi [1]fsr0
  9313     008A                     l3393:
  9314                           
  9315                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 614:     if(bufferIndex[sensor]>=3)
  9316     008A  0856               	movf	medianFilter@sensor,w
  9317     008B  3E3A               	addlw	(low (medianFilter@bufferIndex| 0))& (0+255)
  9318     008C  0086               	movwf	6
  9319     008D  0187               	clrf	7
  9320     008E  3003               	movlw	3
  9321     008F  0201               	subwf	1,w
  9322     0090  1C03               	skipc
  9323     0091  2893               	goto	u1931
  9324     0092  2894               	goto	u1930
  9325     0093                     u1931:
  9326     0093  2899               	goto	l3397
  9327     0094                     u1930:
  9328     0094                     l3395:
  9329                           
  9330                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 615:         bufferIndex[sensor] = 0;
  9331     0094  0856               	movf	medianFilter@sensor,w
  9332     0095  3E3A               	addlw	(low (medianFilter@bufferIndex| 0))& (0+255)
  9333     0096  0086               	movwf	6
  9334     0097  0187               	clrf	7
  9335     0098  0181               	clrf	1
  9336     0099                     l3397:
  9337                           
  9338                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 617:     if(sensor_medianBuffer[sensor][0]>
      +                          =sensor_medianBuffer[sensor][1])
  9339     0099  3006               	movlw	6
  9340     009A  00CC               	movwf	___bmul@multiplicand
  9341     009B  0856               	movf	medianFilter@sensor,w
  9342     009C  318A  22CC  3180   	fcall	___bmul
  9343     009F  3E2A               	addlw	(low ((_sensor_medianBuffer| 0+2)))& (0+255)
  9344     00A0  0086               	movwf	6
  9345     00A1  0187               	clrf	7
  9346     00A2  3F40               	moviw [0]fsr1
  9347     00A3  0020               	movlb	0	; select bank0
  9348     00A4  00D2               	movwf	??_medianFilter
  9349     00A5  3F41               	moviw [1]fsr1
  9350     00A6  00D3               	movwf	??_medianFilter+1
  9351     00A7  3006               	movlw	6
  9352     00A8  00CC               	movwf	___bmul@multiplicand
  9353     00A9  0856               	movf	medianFilter@sensor,w
  9354     00AA  318A  22CC  3180   	fcall	___bmul
  9355     00AD  3E28               	addlw	(low (_sensor_medianBuffer| 0))& (0+255)
  9356     00AE  0086               	movwf	6
  9357     00AF  0187               	clrf	7
  9358     00B0  3F40               	moviw [0]fsr1
  9359     00B1  0020               	movlb	0	; select bank0
  9360     00B2  00D4               	movwf	??_medianFilter+2
  9361     00B3  3F41               	moviw [1]fsr1
  9362     00B4  00D5               	movwf	??_medianFilter+3
  9363     00B5  0853               	movf	??_medianFilter+1,w
  9364     00B6  0255               	subwf	??_medianFilter+3,w
  9365     00B7  1D03               	skipz
  9366     00B8  28BB               	goto	u1945
  9367     00B9  0852               	movf	??_medianFilter,w
  9368     00BA  0254               	subwf	??_medianFilter+2,w
  9369     00BB                     u1945:
  9370     00BB  1C03               	skipc
  9371     00BC  28BE               	goto	u1941
  9372     00BD  28BF               	goto	u1940
  9373     00BE                     u1941:
  9374     00BE  2938               	goto	l3419
  9375     00BF                     u1940:
  9376     00BF                     l3399:
  9377                           
  9378                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 618:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 619:         if(sensor_medianBuffer[sensor][1]>=sensor_medianBuffer[sensor][
      +                          2])
  9379     00BF  3006               	movlw	6
  9380     00C0  00CC               	movwf	___bmul@multiplicand
  9381     00C1  0856               	movf	medianFilter@sensor,w
  9382     00C2  318A  22CC  3180   	fcall	___bmul
  9383     00C5  3E2C               	addlw	(low ((_sensor_medianBuffer| 0+4)))& (0+255)
  9384     00C6  0086               	movwf	6
  9385     00C7  0187               	clrf	7
  9386     00C8  3F40               	moviw [0]fsr1
  9387     00C9  0020               	movlb	0	; select bank0
  9388     00CA  00D2               	movwf	??_medianFilter
  9389     00CB  3F41               	moviw [1]fsr1
  9390     00CC  00D3               	movwf	??_medianFilter+1
  9391     00CD  3006               	movlw	6
  9392     00CE  00CC               	movwf	___bmul@multiplicand
  9393     00CF  0856               	movf	medianFilter@sensor,w
  9394     00D0  318A  22CC  3180   	fcall	___bmul
  9395     00D3  3E2A               	addlw	(low ((_sensor_medianBuffer| 0+2)))& (0+255)
  9396     00D4  0086               	movwf	6
  9397     00D5  0187               	clrf	7
  9398     00D6  3F40               	moviw [0]fsr1
  9399     00D7  0020               	movlb	0	; select bank0
  9400     00D8  00D4               	movwf	??_medianFilter+2
  9401     00D9  3F41               	moviw [1]fsr1
  9402     00DA  00D5               	movwf	??_medianFilter+3
  9403     00DB  0853               	movf	??_medianFilter+1,w
  9404     00DC  0255               	subwf	??_medianFilter+3,w
  9405     00DD  1D03               	skipz
  9406     00DE  28E1               	goto	u1955
  9407     00DF  0852               	movf	??_medianFilter,w
  9408     00E0  0254               	subwf	??_medianFilter+2,w
  9409     00E1                     u1955:
  9410     00E1  1C03               	skipc
  9411     00E2  28E4               	goto	u1951
  9412     00E3  28E5               	goto	u1950
  9413     00E4                     u1951:
  9414     00E4  28F4               	goto	l3407
  9415     00E5                     u1950:
  9416     00E5                     l3401:
  9417                           
  9418                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 620:             return sensor_medianBuffer
      +                          [sensor][1];
  9419     00E5  3006               	movlw	6
  9420     00E6  00CC               	movwf	___bmul@multiplicand
  9421     00E7  0856               	movf	medianFilter@sensor,w
  9422     00E8  318A  22CC  3180   	fcall	___bmul
  9423     00EB  3E2A               	addlw	(low ((_sensor_medianBuffer| 0+2)))& (0+255)
  9424     00EC  0086               	movwf	6
  9425     00ED  0187               	clrf	7
  9426     00EE  3F40               	moviw [0]fsr1
  9427     00EF  0020               	movlb	0	; select bank0
  9428     00F0  00D0               	movwf	?_medianFilter
  9429     00F1  3F41               	moviw [1]fsr1
  9430     00F2  00D1               	movwf	?_medianFilter+1
  9431     00F3  29B0               	goto	l801
  9432     00F4                     l3407:
  9433                           
  9434                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 622:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 623:             if(sensor_medianBuffer[sensor][0]>=sensor_medianBuffer[
      +                          sensor][2])
  9435     00F4  3006               	movlw	6
  9436     00F5  00CC               	movwf	___bmul@multiplicand
  9437     00F6  0856               	movf	medianFilter@sensor,w
  9438     00F7  318A  22CC  3180   	fcall	___bmul
  9439     00FA  3E2C               	addlw	(low ((_sensor_medianBuffer| 0+4)))& (0+255)
  9440     00FB  0086               	movwf	6
  9441     00FC  0187               	clrf	7
  9442     00FD  3F40               	moviw [0]fsr1
  9443     00FE  0020               	movlb	0	; select bank0
  9444     00FF  00D2               	movwf	??_medianFilter
  9445     0100  3F41               	moviw [1]fsr1
  9446     0101  00D3               	movwf	??_medianFilter+1
  9447     0102  3006               	movlw	6
  9448     0103  00CC               	movwf	___bmul@multiplicand
  9449     0104  0856               	movf	medianFilter@sensor,w
  9450     0105  318A  22CC  3180   	fcall	___bmul
  9451     0108  3E28               	addlw	(low (_sensor_medianBuffer| 0))& (0+255)
  9452     0109  0086               	movwf	6
  9453     010A  0187               	clrf	7
  9454     010B  3F40               	moviw [0]fsr1
  9455     010C  0020               	movlb	0	; select bank0
  9456     010D  00D4               	movwf	??_medianFilter+2
  9457     010E  3F41               	moviw [1]fsr1
  9458     010F  00D5               	movwf	??_medianFilter+3
  9459     0110  0853               	movf	??_medianFilter+1,w
  9460     0111  0255               	subwf	??_medianFilter+3,w
  9461     0112  1D03               	skipz
  9462     0113  2916               	goto	u1965
  9463     0114  0852               	movf	??_medianFilter,w
  9464     0115  0254               	subwf	??_medianFilter+2,w
  9465     0116                     u1965:
  9466     0116  1C03               	skipc
  9467     0117  2919               	goto	u1961
  9468     0118  291A               	goto	u1960
  9469     0119                     u1961:
  9470     0119  2929               	goto	l3415
  9471     011A                     u1960:
  9472     011A                     l3409:
  9473                           
  9474                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 624:                 return sensor_medianBu
      +                          ffer[sensor][2];
  9475     011A  3006               	movlw	6
  9476     011B  00CC               	movwf	___bmul@multiplicand
  9477     011C  0856               	movf	medianFilter@sensor,w
  9478     011D  318A  22CC  3180   	fcall	___bmul
  9479     0120  3E2C               	addlw	(low ((_sensor_medianBuffer| 0+4)))& (0+255)
  9480     0121  0086               	movwf	6
  9481     0122  0187               	clrf	7
  9482     0123  3F40               	moviw [0]fsr1
  9483     0124  0020               	movlb	0	; select bank0
  9484     0125  00D0               	movwf	?_medianFilter
  9485     0126  3F41               	moviw [1]fsr1
  9486     0127  00D1               	movwf	?_medianFilter+1
  9487     0128  29B0               	goto	l801
  9488     0129                     l3415:
  9489                           
  9490                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 626:                 return sensor_medianBu
      +                          ffer[sensor][0];
  9491     0129  3006               	movlw	6
  9492     012A  00CC               	movwf	___bmul@multiplicand
  9493     012B  0856               	movf	medianFilter@sensor,w
  9494     012C  318A  22CC  3180   	fcall	___bmul
  9495     012F  3E28               	addlw	(low (_sensor_medianBuffer| 0))& (0+255)
  9496     0130  0086               	movwf	6
  9497     0131  0187               	clrf	7
  9498     0132  3F40               	moviw [0]fsr1
  9499     0133  0020               	movlb	0	; select bank0
  9500     0134  00D0               	movwf	?_medianFilter
  9501     0135  3F41               	moviw [1]fsr1
  9502     0136  00D1               	movwf	?_medianFilter+1
  9503     0137  29B0               	goto	l801
  9504     0138                     l3419:
  9505                           
  9506                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 631:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 632:         if(sensor_medianBuffer[sensor][0]>=sensor_medianBuffer[sensor][
      +                          2])
  9507     0138  3006               	movlw	6
  9508     0139  00CC               	movwf	___bmul@multiplicand
  9509     013A  0856               	movf	medianFilter@sensor,w
  9510     013B  318A  22CC  3180   	fcall	___bmul
  9511     013E  3E2C               	addlw	(low ((_sensor_medianBuffer| 0+4)))& (0+255)
  9512     013F  0086               	movwf	6
  9513     0140  0187               	clrf	7
  9514     0141  3F40               	moviw [0]fsr1
  9515     0142  0020               	movlb	0	; select bank0
  9516     0143  00D2               	movwf	??_medianFilter
  9517     0144  3F41               	moviw [1]fsr1
  9518     0145  00D3               	movwf	??_medianFilter+1
  9519     0146  3006               	movlw	6
  9520     0147  00CC               	movwf	___bmul@multiplicand
  9521     0148  0856               	movf	medianFilter@sensor,w
  9522     0149  318A  22CC  3180   	fcall	___bmul
  9523     014C  3E28               	addlw	(low (_sensor_medianBuffer| 0))& (0+255)
  9524     014D  0086               	movwf	6
  9525     014E  0187               	clrf	7
  9526     014F  3F40               	moviw [0]fsr1
  9527     0150  0020               	movlb	0	; select bank0
  9528     0151  00D4               	movwf	??_medianFilter+2
  9529     0152  3F41               	moviw [1]fsr1
  9530     0153  00D5               	movwf	??_medianFilter+3
  9531     0154  0853               	movf	??_medianFilter+1,w
  9532     0155  0255               	subwf	??_medianFilter+3,w
  9533     0156  1D03               	skipz
  9534     0157  295A               	goto	u1975
  9535     0158  0852               	movf	??_medianFilter,w
  9536     0159  0254               	subwf	??_medianFilter+2,w
  9537     015A                     u1975:
  9538     015A  1C03               	skipc
  9539     015B  295D               	goto	u1971
  9540     015C  295E               	goto	u1970
  9541     015D                     u1971:
  9542     015D  296D               	goto	l3427
  9543     015E                     u1970:
  9544     015E                     l3421:
  9545                           
  9546                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 633:             return sensor_medianBuffer
      +                          [sensor][0];
  9547     015E  3006               	movlw	6
  9548     015F  00CC               	movwf	___bmul@multiplicand
  9549     0160  0856               	movf	medianFilter@sensor,w
  9550     0161  318A  22CC  3180   	fcall	___bmul
  9551     0164  3E28               	addlw	(low (_sensor_medianBuffer| 0))& (0+255)
  9552     0165  0086               	movwf	6
  9553     0166  0187               	clrf	7
  9554     0167  3F40               	moviw [0]fsr1
  9555     0168  0020               	movlb	0	; select bank0
  9556     0169  00D0               	movwf	?_medianFilter
  9557     016A  3F41               	moviw [1]fsr1
  9558     016B  00D1               	movwf	?_medianFilter+1
  9559     016C  29B0               	goto	l801
  9560     016D                     l3427:
  9561                           
  9562                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 635:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 636:             if(sensor_medianBuffer[sensor][1]>=sensor_medianBuffer[
      +                          sensor][2])
  9563     016D  3006               	movlw	6
  9564     016E  00CC               	movwf	___bmul@multiplicand
  9565     016F  0856               	movf	medianFilter@sensor,w
  9566     0170  318A  22CC  3180   	fcall	___bmul
  9567     0173  3E2C               	addlw	(low ((_sensor_medianBuffer| 0+4)))& (0+255)
  9568     0174  0086               	movwf	6
  9569     0175  0187               	clrf	7
  9570     0176  3F40               	moviw [0]fsr1
  9571     0177  0020               	movlb	0	; select bank0
  9572     0178  00D2               	movwf	??_medianFilter
  9573     0179  3F41               	moviw [1]fsr1
  9574     017A  00D3               	movwf	??_medianFilter+1
  9575     017B  3006               	movlw	6
  9576     017C  00CC               	movwf	___bmul@multiplicand
  9577     017D  0856               	movf	medianFilter@sensor,w
  9578     017E  318A  22CC  3180   	fcall	___bmul
  9579     0181  3E2A               	addlw	(low ((_sensor_medianBuffer| 0+2)))& (0+255)
  9580     0182  0086               	movwf	6
  9581     0183  0187               	clrf	7
  9582     0184  3F40               	moviw [0]fsr1
  9583     0185  0020               	movlb	0	; select bank0
  9584     0186  00D4               	movwf	??_medianFilter+2
  9585     0187  3F41               	moviw [1]fsr1
  9586     0188  00D5               	movwf	??_medianFilter+3
  9587     0189  0853               	movf	??_medianFilter+1,w
  9588     018A  0255               	subwf	??_medianFilter+3,w
  9589     018B  1D03               	skipz
  9590     018C  298F               	goto	u1985
  9591     018D  0852               	movf	??_medianFilter,w
  9592     018E  0254               	subwf	??_medianFilter+2,w
  9593     018F                     u1985:
  9594     018F  1C03               	skipc
  9595     0190  2992               	goto	u1981
  9596     0191  2993               	goto	u1980
  9597     0192                     u1981:
  9598     0192  29A2               	goto	l3435
  9599     0193                     u1980:
  9600     0193                     l3429:
  9601                           
  9602                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 637:                 return sensor_medianBu
      +                          ffer[sensor][2];
  9603     0193  3006               	movlw	6
  9604     0194  00CC               	movwf	___bmul@multiplicand
  9605     0195  0856               	movf	medianFilter@sensor,w
  9606     0196  318A  22CC  3180   	fcall	___bmul
  9607     0199  3E2C               	addlw	(low ((_sensor_medianBuffer| 0+4)))& (0+255)
  9608     019A  0086               	movwf	6
  9609     019B  0187               	clrf	7
  9610     019C  3F40               	moviw [0]fsr1
  9611     019D  0020               	movlb	0	; select bank0
  9612     019E  00D0               	movwf	?_medianFilter
  9613     019F  3F41               	moviw [1]fsr1
  9614     01A0  00D1               	movwf	?_medianFilter+1
  9615     01A1  29B0               	goto	l801
  9616     01A2                     l3435:
  9617                           
  9618                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 639:                 return sensor_medianBu
      +                          ffer[sensor][1];
  9619     01A2  3006               	movlw	6
  9620     01A3  00CC               	movwf	___bmul@multiplicand
  9621     01A4  0856               	movf	medianFilter@sensor,w
  9622     01A5  318A  22CC  3180   	fcall	___bmul
  9623     01A8  3E2A               	addlw	(low ((_sensor_medianBuffer| 0+2)))& (0+255)
  9624     01A9  0086               	movwf	6
  9625     01AA  0187               	clrf	7
  9626     01AB  3F40               	moviw [0]fsr1
  9627     01AC  0020               	movlb	0	; select bank0
  9628     01AD  00D0               	movwf	?_medianFilter
  9629     01AE  3F41               	moviw [1]fsr1
  9630     01AF  00D1               	movwf	?_medianFilter+1
  9631     01B0                     l801:
  9632     01B0  0008               	return
  9633     01B1                     __end_of_medianFilter:
  9634                           
  9635                           	psect	text25
  9636     088D                     __ptext25:	
  9637 ;; *************** function _Sensor_DefaultCallback *****************
  9638 ;; Defined at:
  9639 ;;		line 740 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9640 ;; Parameters:    Size  Location     Type
  9641 ;;  sensor          1    0[BANK0 ] enum E11929
  9642 ;; Auto vars:     Size  Location     Type
  9643 ;;		None
  9644 ;; Return value:  Size  Location     Type
  9645 ;;                  1    wreg      void 
  9646 ;; Registers used:
  9647 ;;		None
  9648 ;; Tracked objects:
  9649 ;;		On entry : 0/0
  9650 ;;		On exit  : 0/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9653 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9656 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9657 ;;Total ram usage:        1 bytes
  9658 ;; Hardware stack levels used: 1
  9659 ;; Hardware stack levels required when called: 7
  9660 ;; This function calls:
  9661 ;;		Nothing
  9662 ;; This function is called by:
  9663 ;;		_MTOUCH_Sensor_postAcquisitionProcess
  9664 ;; This function uses a non-reentrant model
  9665 ;;
  9666                           
  9667     088D                     _Sensor_DefaultCallback:	
  9668                           ;psect for function _Sensor_DefaultCallback
  9669                           
  9670     088D                     l841:	
  9671                           ;incstack = 0
  9672                           ; Regs used in _Sensor_DefaultCallback: []
  9673                           
  9674     088D  0008               	return
  9675     088E                     __end_of_Sensor_DefaultCallback:
  9676                           
  9677                           	psect	text26
  9678     0E2F                     __ptext26:	
  9679 ;; *************** function _MTOUCH_Sensor_isSamplingComplete *****************
  9680 ;; Defined at:
  9681 ;;		line 281 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9682 ;; Parameters:    Size  Location     Type
  9683 ;;		None
  9684 ;; Auto vars:     Size  Location     Type
  9685 ;;  sensor          1   11[BANK0 ] enum E11929
  9686 ;; Return value:  Size  Location     Type
  9687 ;;                  1    wreg      _Bool 
  9688 ;; Registers used:
  9689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9690 ;; Tracked objects:
  9691 ;;		On entry : 0/0
  9692 ;;		On exit  : 0/0
  9693 ;;		Unchanged: 0/0
  9694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9696 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9697 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9698 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9699 ;;Total ram usage:        2 bytes
  9700 ;; Hardware stack levels used: 1
  9701 ;; Hardware stack levels required when called: 10
  9702 ;; This function calls:
  9703 ;;		_MTOUCH_Sensor_isEnabled
  9704 ;;		_MTOUCH_Sensor_isSampling
  9705 ;;		_MTOUCH_Sensor_wasSampled
  9706 ;;		_Sensor_scheduleNextScan
  9707 ;; This function is called by:
  9708 ;;		_MTOUCH_Sensor_SampleAll
  9709 ;; This function uses a non-reentrant model
  9710 ;;
  9711                           
  9712     0E2F                     _MTOUCH_Sensor_isSamplingComplete:	
  9713                           ;psect for function _MTOUCH_Sensor_isSamplingComplete
  9714                           
  9715     0E2F                     l3987:	
  9716                           ;incstack = 0
  9717                           ; Regs used in _MTOUCH_Sensor_isSamplingComplete: [wreg-fsr1h+status,2+status,0+pclath+c
      +                          stack]
  9718                           
  9719                           
  9720                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 283:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 285:     for (sensor = 0; sensor < (1u); sens
      +                          or++)
  9721     0E2F  0020               	movlb	0	; select bank0
  9722     0E30  01D7               	clrf	MTOUCH_Sensor_isSamplingComplete@sensor
  9723     0E31                     l3993:
  9724                           
  9725                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 286:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 287:         if(MTOUCH_Sensor_wasSampled(sensor)==0 && MTOUCH_Sensor_isEnabl
      +                          ed(sensor))
  9726     0E31  0857               	movf	MTOUCH_Sensor_isSamplingComplete@sensor,w
  9727     0E32  318A  22A2  318E   	fcall	_MTOUCH_Sensor_wasSampled
  9728     0E35  3A00               	xorlw	0
  9729     0E36  1D03               	skipz
  9730     0E37  2E39               	goto	u2811
  9731     0E38  2E3A               	goto	u2810
  9732     0E39                     u2811:
  9733     0E39  2E51               	goto	l4005
  9734     0E3A                     u2810:
  9735     0E3A                     l3995:
  9736     0E3A  0020               	movlb	0	; select bank0
  9737     0E3B  0857               	movf	MTOUCH_Sensor_isSamplingComplete@sensor,w
  9738     0E3C  318A  22B7  318E   	fcall	_MTOUCH_Sensor_isEnabled
  9739     0E3F  3A00               	xorlw	0
  9740     0E40  1903               	skipnz
  9741     0E41  2E43               	goto	u2821
  9742     0E42  2E44               	goto	u2820
  9743     0E43                     u2821:
  9744     0E43  2E51               	goto	l4005
  9745     0E44                     u2820:
  9746     0E44                     l3997:
  9747                           
  9748                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 288:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 289:             if(MTOUCH_Sensor_isSampling() == 0)
  9749     0E44  3188  208E  318E   	fcall	_MTOUCH_Sensor_isSampling
  9750     0E47  3A00               	xorlw	0
  9751     0E48  1D03               	skipz
  9752     0E49  2E4B               	goto	u2831
  9753     0E4A  2E4C               	goto	u2830
  9754     0E4B                     u2831:
  9755     0E4B  2E4F               	goto	l4001
  9756     0E4C                     u2830:
  9757     0E4C                     l3999:
  9758                           
  9759                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 290:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 291:                 Sensor_scheduleNextScan();
  9760     0E4C  3183  2339  318E   	fcall	_Sensor_scheduleNextScan
  9761     0E4F                     l4001:
  9762                           
  9763                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 293:             return 0;
  9764     0E4F  3000               	movlw	0
  9765     0E50  2E5C               	goto	l707
  9766     0E51                     l4005:
  9767                           
  9768                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 295:     }
  9769     0E51  3001               	movlw	1
  9770     0E52  0020               	movlb	0	; select bank0
  9771     0E53  00D6               	movwf	??_MTOUCH_Sensor_isSamplingComplete
  9772     0E54  0856               	movf	??_MTOUCH_Sensor_isSamplingComplete,w
  9773     0E55  07D7               	addwf	MTOUCH_Sensor_isSamplingComplete@sensor,f
  9774     0E56  0857               	movf	MTOUCH_Sensor_isSamplingComplete@sensor,w
  9775     0E57  1903               	btfsc	3,2
  9776     0E58  2E5A               	goto	u2841
  9777     0E59  2E5B               	goto	u2840
  9778     0E5A                     u2841:
  9779     0E5A  2E31               	goto	l3993
  9780     0E5B                     u2840:
  9781     0E5B                     l4007:
  9782                           
  9783                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 297:     return 1;
  9784     0E5B  3001               	movlw	1
  9785     0E5C                     l707:
  9786     0E5C  0008               	return
  9787     0E5D                     __end_of_MTOUCH_Sensor_isSamplingComplete:
  9788                           
  9789                           	psect	text27
  9790     0339                     __ptext27:	
  9791 ;; *************** function _Sensor_scheduleNextScan *****************
  9792 ;; Defined at:
  9793 ;;		line 357 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9794 ;; Parameters:    Size  Location     Type
  9795 ;;		None
  9796 ;; Auto vars:     Size  Location     Type
  9797 ;;  sensor          1    9[BANK0 ] PTR struct .
  9798 ;;		 -> mtouch_sensor(9), 
  9799 ;;  skipScan        1    8[BANK0 ] _Bool 
  9800 ;;  state           1    7[BANK0 ] _Bool 
  9801 ;; Return value:  Size  Location     Type
  9802 ;;                  1    wreg      void 
  9803 ;; Registers used:
  9804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9805 ;; Tracked objects:
  9806 ;;		On entry : 0/0
  9807 ;;		On exit  : 0/0
  9808 ;;		Unchanged: 0/0
  9809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9811 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9812 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9813 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9814 ;;Total ram usage:        5 bytes
  9815 ;; Hardware stack levels used: 1
  9816 ;; Hardware stack levels required when called: 9
  9817 ;; This function calls:
  9818 ;;		_MTOUCH_Sensor_isEnabled
  9819 ;;		_MTOUCH_Sensor_wasSampled
  9820 ;;		_Sensor_SetTrisBit
  9821 ;;		_Sensor_isCalibrated
  9822 ;;		_Sensor_isCalibratingAcqTime
  9823 ;;		___bmul
  9824 ;; This function is called by:
  9825 ;;		_MTOUCH_Sensor_isSamplingComplete
  9826 ;; This function uses a non-reentrant model
  9827 ;;
  9828                           
  9829     0339                     _Sensor_scheduleNextScan:	
  9830                           ;psect for function _Sensor_scheduleNextScan
  9831                           
  9832     0339                     l3621:	
  9833                           ;incstack = 0
  9834                           ; Regs used in _Sensor_scheduleNextScan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9835                           
  9836                           
  9837                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 359:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 360:     _Bool skipScan = (_Bool)0;
  9838     0339  0020               	movlb	0	; select bank0
  9839     033A  01D4               	clrf	Sensor_scheduleNextScan@skipScan
  9840     033B                     l3623:
  9841                           
  9842                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 361:     _Bool state = (_Bool)GIE;
  9843     033B  3000               	movlw	0
  9844     033C  1B8B               	btfsc	11,7	;volatile
  9845     033D  3001               	movlw	1
  9846     033E  00D3               	movwf	Sensor_scheduleNextScan@state
  9847                           
  9848                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 364:     while(MTOUCH_Sensor_wasSampled(cur
      +                          rentScanSensor) || !MTOUCH_Sensor_isEnabled(currentScanSensor))
  9849     033F  2B4F               	goto	l3631
  9850     0340                     l3625:
  9851                           
  9852                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 365:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 366:         if(++currentScanSensor == (1u))
  9853     0340  3001               	movlw	1
  9854     0341  0020               	movlb	0	; select bank0
  9855     0342  00D1               	movwf	??_Sensor_scheduleNextScan
  9856     0343  0851               	movf	??_Sensor_scheduleNextScan,w
  9857     0344  07C0               	addwf	_currentScanSensor,f
  9858     0345  0340               	decf	_currentScanSensor,w
  9859     0346  1D03               	btfss	3,2
  9860     0347  2B49               	goto	u2221
  9861     0348  2B4A               	goto	u2220
  9862     0349                     u2221:
  9863     0349  2B4F               	goto	l3631
  9864     034A                     u2220:
  9865     034A                     l3627:
  9866                           
  9867                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 367:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 368:             currentScanSensor = 0;
  9868     034A  01C0               	clrf	_currentScanSensor
  9869                           
  9870                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 369:             sampling_flag = 0;
  9871     034B  01BF               	clrf	_sampling_flag
  9872     034C                     l3629:
  9873                           
  9874                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 370:             skipScan = 1;
  9875     034C  01D4               	clrf	Sensor_scheduleNextScan@skipScan
  9876     034D  0AD4               	incf	Sensor_scheduleNextScan@skipScan,f
  9877                           
  9878                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 371:             break;
  9879     034E  2B62               	goto	l3635
  9880     034F                     l3631:
  9881                           
  9882                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 364:     while(MTOUCH_Sensor_wasSampled(cur
      +                          rentScanSensor) || !MTOUCH_Sensor_isEnabled(currentScanSensor))
  9883     034F  0840               	movf	_currentScanSensor,w
  9884     0350  318A  22A2  3183   	fcall	_MTOUCH_Sensor_wasSampled
  9885     0353  3A00               	xorlw	0
  9886     0354  1D03               	skipz
  9887     0355  2B57               	goto	u2231
  9888     0356  2B58               	goto	u2230
  9889     0357                     u2231:
  9890     0357  2B40               	goto	l3625
  9891     0358                     u2230:
  9892     0358                     l3633:
  9893     0358  0020               	movlb	0	; select bank0
  9894     0359  0840               	movf	_currentScanSensor,w
  9895     035A  318A  22B7  3183   	fcall	_MTOUCH_Sensor_isEnabled
  9896     035D  3A00               	xorlw	0
  9897     035E  1903               	skipnz
  9898     035F  2B61               	goto	u2241
  9899     0360  2B62               	goto	u2240
  9900     0361                     u2241:
  9901     0361  2B40               	goto	l3625
  9902     0362                     u2240:
  9903     0362                     l3635:
  9904                           
  9905                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 375:     if(skipScan==0)
  9906     0362  0020               	movlb	0	; select bank0
  9907     0363  0854               	movf	Sensor_scheduleNextScan@skipScan,w
  9908     0364  1D03               	btfss	3,2
  9909     0365  2B67               	goto	u2251
  9910     0366  2B68               	goto	u2250
  9911     0367                     u2251:
  9912     0367  2BEB               	goto	l738
  9913     0368                     u2250:
  9914     0368                     l3637:
  9915                           
  9916                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 376:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 377:         sensor = &mtouch_sensor[currentScanSensor];
  9917     0368  3009               	movlw	9
  9918     0369  00CC               	movwf	___bmul@multiplicand
  9919     036A  0840               	movf	_currentScanSensor,w
  9920     036B  318A  22CC  3183   	fcall	___bmul
  9921     036E  3E43               	addlw	(low (_mtouch_sensor| 0))& (0+255)
  9922     036F  0020               	movlb	0	; select bank0
  9923     0370  00D5               	movwf	Sensor_scheduleNextScan@sensor
  9924     0371                     l3639:
  9925                           
  9926                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 378:         if(Sensor_isCalibrated(sensor)
      +                          )
  9927     0371  0855               	movf	Sensor_scheduleNextScan@sensor,w
  9928     0372  3189  2149  3183   	fcall	_Sensor_isCalibrated
  9929     0375  3A00               	xorlw	0
  9930     0376  1903               	skipnz
  9931     0377  2B79               	goto	u2261
  9932     0378  2B7A               	goto	u2260
  9933     0379                     u2261:
  9934     0379  2B89               	goto	l3643
  9935     037A                     u2260:
  9936     037A                     l3641:
  9937                           
  9938                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 379:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 380:             ADACQ = (mtouch_sensor_time_t)sensor->acquisition_time;
  9939     037A  0020               	movlb	0	; select bank0
  9940     037B  0855               	movf	Sensor_scheduleNextScan@sensor,w
  9941     037C  0086               	movwf	6
  9942     037D  0187               	clrf	7
  9943     037E  3F43               	moviw [3]fsr1
  9944     037F  0021               	movlb	1	; select bank1
  9945     0380  009D               	movwf	29	;volatile
  9946                           
  9947                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 381:             ADPRE = (mtouch_sensor_tim
      +                          e_t)sensor->precharge_time;
  9948     0381  0020               	movlb	0	; select bank0
  9949     0382  0855               	movf	Sensor_scheduleNextScan@sensor,w
  9950     0383  0086               	movwf	6
  9951     0384  0187               	clrf	7
  9952     0385  3F42               	moviw [2]fsr1
  9953     0386  0021               	movlb	1	; select bank1
  9954     0387  009C               	movwf	28	;volatile
  9955                           
  9956                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 382:         }
  9957     0388  2BA7               	goto	l3649
  9958     0389                     l3643:
  9959                           
  9960                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 384:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 385:             if(Sensor_isCalibratingAcqTime(sensor))
  9961     0389  0020               	movlb	0	; select bank0
  9962     038A  0855               	movf	Sensor_scheduleNextScan@sensor,w
  9963     038B  3188  20F1  3183   	fcall	_Sensor_isCalibratingAcqTime
  9964     038E  3A00               	xorlw	0
  9965     038F  1903               	skipnz
  9966     0390  2B92               	goto	u2271
  9967     0391  2B93               	goto	u2270
  9968     0392                     u2271:
  9969     0392  2BA2               	goto	l3647
  9970     0393                     u2270:
  9971     0393                     l3645:
  9972                           
  9973                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 386:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 387:                 ADPRE = (mtouch_sensor_time_t)sensor->precharge
      +                          _time;
  9974     0393  0020               	movlb	0	; select bank0
  9975     0394  0855               	movf	Sensor_scheduleNextScan@sensor,w
  9976     0395  0086               	movwf	6
  9977     0396  0187               	clrf	7
  9978     0397  3F42               	moviw [2]fsr1
  9979     0398  0021               	movlb	1	; select bank1
  9980     0399  009C               	movwf	28	;volatile
  9981                           
  9982                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 388:                 ADACQ = (mtouch_sensor
      +                          _time_t)sensor->acquisition_time;
  9983     039A  0020               	movlb	0	; select bank0
  9984     039B  0855               	movf	Sensor_scheduleNextScan@sensor,w
  9985     039C  0086               	movwf	6
  9986     039D  0187               	clrf	7
  9987     039E  3F43               	moviw [3]fsr1
  9988     039F  0021               	movlb	1	; select bank1
  9989     03A0  009D               	movwf	29	;volatile
  9990                           
  9991                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 389:             }
  9992     03A1  2BA7               	goto	l3649
  9993     03A2                     l3647:
  9994                           
  9995                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 391:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 392:                 ADPRE = ((mtouch_sensor_time_t)((mtouch_sensor_
      +                          time_t)48 << (uint8_t)0));
  9996     03A2  3030               	movlw	48
  9997     03A3  0021               	movlb	1	; select bank1
  9998     03A4  009C               	movwf	28	;volatile
  9999                           
 10000                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 393:                 ADACQ = ((mtouch_senso
      +                          r_time_t)((mtouch_sensor_time_t)48 << (uint8_t)0));
 10001     03A5  3030               	movlw	48
 10002     03A6  009D               	movwf	29	;volatile
 10003     03A7                     l3649:
 10004                           
 10005                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 397:         ADPRE +=(uint8_t)sample_delay;
 10006     03A7  0020               	movlb	0	; select bank0
 10007     03A8  083B               	movf	_sample_delay,w	;volatile
 10008     03A9  00D1               	movwf	??_Sensor_scheduleNextScan
 10009     03AA  0851               	movf	??_Sensor_scheduleNextScan,w
 10010     03AB  0021               	movlb	1	; select bank1
 10011     03AC  079C               	addwf	28,f	;volatile
 10012     03AD                     l3651:
 10013                           
 10014                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 398:         ADPCH = (uint8_t)sensor->adpch
      +                          ;
 10015     03AD  0020               	movlb	0	; select bank0
 10016     03AE  0855               	movf	Sensor_scheduleNextScan@sensor,w
 10017     03AF  0086               	movwf	6
 10018     03B0  0187               	clrf	7
 10019     03B1  3F41               	moviw [1]fsr1
 10020     03B2  0021               	movlb	1	; select bank1
 10021     03B3  009E               	movwf	30	;volatile
 10022                           
 10023                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 399:         ADRPT = (uint8_t)(sensor->over
      +                          sampling>>1);
 10024     03B4  0020               	movlb	0	; select bank0
 10025     03B5  0855               	movf	Sensor_scheduleNextScan@sensor,w
 10026     03B6  3E04               	addlw	4
 10027     03B7  0086               	movwf	6
 10028     03B8  0187               	clrf	7
 10029     03B9  3601               	lsrf	1,w
 10030     03BA  0022               	movlb	2	; select bank2
 10031     03BB  008D               	movwf	13	;volatile
 10032     03BC                     l3653:
 10033                           
 10034                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 400:         ADCAP = (uint8_t)sensor->addca
      +                          p;
 10035     03BC  0020               	movlb	0	; select bank0
 10036     03BD  0855               	movf	Sensor_scheduleNextScan@sensor,w
 10037     03BE  0086               	movwf	6
 10038     03BF  0187               	clrf	7
 10039     03C0  3F45               	moviw [5]fsr1
 10040     03C1  0021               	movlb	1	; select bank1
 10041     03C2  009B               	movwf	27	;volatile
 10042     03C3                     l3655:
 10043                           
 10044                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 401:         ADCON0bits.ADON = 1;
 10045     03C3  1793               	bsf	19,7	;volatile
 10046     03C4                     l3657:
 10047                           
 10048                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 402:         sampling_flag= 1;
 10049     03C4  0020               	movlb	0	; select bank0
 10050     03C5  01BF               	clrf	_sampling_flag
 10051     03C6  0ABF               	incf	_sampling_flag,f
 10052     03C7                     l3659:
 10053                           
 10054                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 403:         Sensor_SetTrisBit(currentScanS
      +                          ensor,1);
 10055     03C7  01CC               	clrf	Sensor_SetTrisBit@TrisBit
 10056     03C8  0ACC               	incf	Sensor_SetTrisBit@TrisBit,f
 10057     03C9  0840               	movf	_currentScanSensor,w
 10058     03CA  318B  2352  3183   	fcall	_Sensor_SetTrisBit
 10059     03CD                     l3661:
 10060                           
 10061                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 404:         GIE = 0;
 10062     03CD  138B               	bcf	11,7	;volatile
 10063     03CE                     l3663:
 10064                           
 10065                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 405:         ADCON0bits.GO = 1;
 10066     03CE  0021               	movlb	1	; select bank1
 10067     03CF  1413               	bsf	19,0	;volatile
 10068     03D0                     l3665:
 10069                           
 10070                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 406:         ADACC = ((mtouch_sensor_packet
      +                          sample_t)(sensor->oversampling)<<9);
 10071     03D0  0020               	movlb	0	; select bank0
 10072     03D1  0855               	movf	Sensor_scheduleNextScan@sensor,w
 10073     03D2  3E04               	addlw	4
 10074     03D3  0086               	movwf	6
 10075     03D4  0187               	clrf	7
 10076     03D5  0801               	movf	1,w
 10077     03D6  00D1               	movwf	??_Sensor_scheduleNextScan
 10078     03D7  01D2               	clrf	??_Sensor_scheduleNextScan+1
 10079     03D8  3009               	movlw	9
 10080     03D9                     u2285:
 10081     03D9  35D1               	lslf	??_Sensor_scheduleNextScan,f
 10082     03DA  0DD2               	rlf	??_Sensor_scheduleNextScan+1,f
 10083     03DB  0B89               	decfsz	9,f
 10084     03DC  2BD9               	goto	u2285
 10085     03DD  0851               	movf	??_Sensor_scheduleNextScan,w
 10086     03DE  0021               	movlb	1	; select bank1
 10087     03DF  0090               	movwf	16	;volatile
 10088     03E0  0020               	movlb	0	; select bank0
 10089     03E1  0852               	movf	??_Sensor_scheduleNextScan+1,w
 10090     03E2  0021               	movlb	1	; select bank1
 10091     03E3  0091               	movwf	17	;volatile
 10092     03E4                     l3667:
 10093                           
 10094                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 407:         GIE = state;
 10095     03E4  0020               	movlb	0	; select bank0
 10096     03E5  0C53               	rrf	Sensor_scheduleNextScan@state,w
 10097     03E6  1C03               	skipc
 10098     03E7  138B               	bcf	11,7	;volatile
 10099     03E8  1803               	skipnc
 10100     03E9  178B               	bsf	11,7	;volatile
 10101     03EA                     l3669:
 10102                           
 10103                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 408:         scanInterrupted = 0;
 10104     03EA  01BE               	clrf	_scanInterrupted	;volatile
 10105     03EB                     l738:
 10106     03EB  0008               	return
 10107     03EC                     __end_of_Sensor_scheduleNextScan:
 10108                           
 10109                           	psect	text28
 10110     08F1                     __ptext28:	
 10111 ;; *************** function _Sensor_isCalibratingAcqTime *****************
 10112 ;; Defined at:
 10113 ;;		line 857 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10114 ;; Parameters:    Size  Location     Type
 10115 ;;  sensor          1    wreg     PTR struct .
 10116 ;;		 -> mtouch_sensor(9), 
 10117 ;; Auto vars:     Size  Location     Type
 10118 ;;  sensor          1    0[BANK0 ] PTR struct .
 10119 ;;		 -> mtouch_sensor(9), 
 10120 ;; Return value:  Size  Location     Type
 10121 ;;                  1    wreg      _Bool 
 10122 ;; Registers used:
 10123 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10124 ;; Tracked objects:
 10125 ;;		On entry : 0/0
 10126 ;;		On exit  : 0/0
 10127 ;;		Unchanged: 0/0
 10128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10130 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10132 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10133 ;;Total ram usage:        1 bytes
 10134 ;; Hardware stack levels used: 1
 10135 ;; Hardware stack levels required when called: 7
 10136 ;; This function calls:
 10137 ;;		Nothing
 10138 ;; This function is called by:
 10139 ;;		_Sensor_scheduleNextScan
 10140 ;; This function uses a non-reentrant model
 10141 ;;
 10142                           
 10143     08F1                     _Sensor_isCalibratingAcqTime:	
 10144                           ;psect for function _Sensor_isCalibratingAcqTime
 10145                           
 10146                           
 10147                           ;incstack = 0
 10148                           ; Regs used in _Sensor_isCalibratingAcqTime: [wreg+fsr1l+fsr1h+status,2+status,0]
 10149                           ;Sensor_isCalibratingAcqTime@sensor stored from wreg
 10150     08F1  0020               	movlb	0	; select bank0
 10151     08F2  00CC               	movwf	Sensor_isCalibratingAcqTime@sensor
 10152     08F3                     l3375:
 10153                           
 10154                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 857: static __attribute__((inline)) _Bool S
      +                          ensor_isCalibratingAcqTime(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_se
      +                          nsor.c: 858: {;mcc_generated_files/mtouch/mtouch_sensor.c: 859:     return (_Bool)sensor
      +                          ->acqTime_cal;
 10155     08F3  084C               	movf	Sensor_isCalibratingAcqTime@sensor,w
 10156     08F4  3E08               	addlw	8
 10157     08F5  0086               	movwf	6
 10158     08F6  0187               	clrf	7
 10159     08F7  0E01               	swapf	1,w
 10160     08F8  3901               	andlw	1
 10161     08F9                     l895:
 10162     08F9  0008               	return
 10163     08FA                     __end_of_Sensor_isCalibratingAcqTime:
 10164                           
 10165                           	psect	text29
 10166     0949                     __ptext29:	
 10167 ;; *************** function _Sensor_isCalibrated *****************
 10168 ;; Defined at:
 10169 ;;		line 839 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10170 ;; Parameters:    Size  Location     Type
 10171 ;;  sensor          1    wreg     PTR struct .
 10172 ;;		 -> mtouch_sensor(9), 
 10173 ;; Auto vars:     Size  Location     Type
 10174 ;;  sensor          1    1[BANK0 ] PTR struct .
 10175 ;;		 -> mtouch_sensor(9), 
 10176 ;; Return value:  Size  Location     Type
 10177 ;;                  1    wreg      _Bool 
 10178 ;; Registers used:
 10179 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10180 ;; Tracked objects:
 10181 ;;		On entry : 0/0
 10182 ;;		On exit  : 0/0
 10183 ;;		Unchanged: 0/0
 10184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10187 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10188 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10189 ;;Total ram usage:        2 bytes
 10190 ;; Hardware stack levels used: 1
 10191 ;; Hardware stack levels required when called: 7
 10192 ;; This function calls:
 10193 ;;		Nothing
 10194 ;; This function is called by:
 10195 ;;		_Sensor_scheduleNextScan
 10196 ;; This function uses a non-reentrant model
 10197 ;;
 10198                           
 10199     0949                     _Sensor_isCalibrated:	
 10200                           ;psect for function _Sensor_isCalibrated
 10201                           
 10202                           
 10203                           ;incstack = 0
 10204                           ; Regs used in _Sensor_isCalibrated: [wreg+fsr1l+fsr1h+status,2+status,0]
 10205                           ;Sensor_isCalibrated@sensor stored from wreg
 10206     0949  0020               	movlb	0	; select bank0
 10207     094A  00CD               	movwf	Sensor_isCalibrated@sensor
 10208     094B                     l3371:
 10209                           
 10210                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 839: static __attribute__((inline)) _Bool S
      +                          ensor_isCalibrated(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          840: {;mcc_generated_files/mtouch/mtouch_sensor.c: 841:     return (_Bool)sensor->calibr
      +                          ated;
 10211     094B  084D               	movf	Sensor_isCalibrated@sensor,w
 10212     094C  3E08               	addlw	8
 10213     094D  0086               	movwf	6
 10214     094E  0187               	clrf	7
 10215     094F  0C01               	rrf	1,w
 10216     0950  00CC               	movwf	??_Sensor_isCalibrated
 10217     0951  0CCC               	rrf	??_Sensor_isCalibrated,f
 10218     0952  0C4C               	rrf	??_Sensor_isCalibrated,w
 10219     0953  3901               	andlw	1
 10220     0954                     l886:
 10221     0954  0008               	return
 10222     0955                     __end_of_Sensor_isCalibrated:
 10223                           
 10224                           	psect	text30
 10225     0B52                     __ptext30:	
 10226 ;; *************** function _Sensor_SetTrisBit *****************
 10227 ;; Defined at:
 10228 ;;		line 208 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10229 ;; Parameters:    Size  Location     Type
 10230 ;;  sensor          1    wreg     enum E11929
 10231 ;;  TrisBit         1    0[BANK0 ] unsigned char 
 10232 ;; Auto vars:     Size  Location     Type
 10233 ;;  sensor          1    3[BANK0 ] enum E11929
 10234 ;; Return value:  Size  Location     Type
 10235 ;;                  1    wreg      void 
 10236 ;; Registers used:
 10237 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10238 ;; Tracked objects:
 10239 ;;		On entry : 0/0
 10240 ;;		On exit  : 0/0
 10241 ;;		Unchanged: 0/0
 10242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10243 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10244 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10245 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10246 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10247 ;;Total ram usage:        4 bytes
 10248 ;; Hardware stack levels used: 1
 10249 ;; Hardware stack levels required when called: 7
 10250 ;; This function calls:
 10251 ;;		Nothing
 10252 ;; This function is called by:
 10253 ;;		_Sensor_scheduleNextScan
 10254 ;; This function uses a non-reentrant model
 10255 ;;
 10256                           
 10257     0B52                     _Sensor_SetTrisBit:	
 10258                           ;psect for function _Sensor_SetTrisBit
 10259                           
 10260                           
 10261                           ;incstack = 0
 10262                           ; Regs used in _Sensor_SetTrisBit: [wreg-fsr0h+status,2+status,0]
 10263                           ;Sensor_SetTrisBit@sensor stored from wreg
 10264     0B52  0020               	movlb	0	; select bank0
 10265     0B53  00CF               	movwf	Sensor_SetTrisBit@sensor
 10266     0B54                     l3345:
 10267                           
 10268                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 208: static void Sensor_SetTrisBit(enum mto
      +                          uch_sensor_names sensor,uint8_t TrisBit);mcc_generated_files/mtouch/mtouch_sensor.c: 209
      +                          : {;mcc_generated_files/mtouch/mtouch_sensor.c: 210:     switch(sensor)
 10269     0B54  2B5B               	goto	l3351
 10270     0B55                     l3347:
 10271                           
 10272                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 213:             TRISCbits.TRISC3 = TrisBit
      +                          ;
 10273     0B55  0C4C               	rrf	Sensor_SetTrisBit@TrisBit,w
 10274     0B56  1C03               	skipc
 10275     0B57  1193               	bcf	19,3	;volatile
 10276     0B58  1803               	skipnc
 10277     0B59  1593               	bsf	19,3	;volatile
 10278                           
 10279                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 214:             break;
 10280     0B5A  2B68               	goto	l692
 10281     0B5B                     l3351:
 10282     0B5B  084F               	movf	Sensor_SetTrisBit@sensor,w
 10283     0B5C  00CD               	movwf	??_Sensor_SetTrisBit
 10284     0B5D  01CE               	clrf	??_Sensor_SetTrisBit+1
 10285                           
 10286                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10287                           ; Switch size 1, requested type "simple"
 10288                           ; Number of cases is 1, Range of values is 0 to 0
 10289                           ; switch strategies available:
 10290                           ; Name         Instructions Cycles
 10291                           ; simple_byte            4     3 (average)
 10292                           ; direct_byte            8     6 (fixed)
 10293                           ; jumptable            260     6 (fixed)
 10294                           ;	Chosen strategy is simple_byte
 10295     0B5E  084E               	movf	??_Sensor_SetTrisBit+1,w
 10296     0B5F  3A00               	xorlw	0	; case 0
 10297     0B60  1903               	skipnz
 10298     0B61  2B63               	goto	l4607
 10299     0B62  2B68               	goto	l692
 10300     0B63                     l4607:
 10301                           
 10302                           ; Switch size 1, requested type "simple"
 10303                           ; Number of cases is 1, Range of values is 0 to 0
 10304                           ; switch strategies available:
 10305                           ; Name         Instructions Cycles
 10306                           ; simple_byte            4     3 (average)
 10307                           ; direct_byte            8     6 (fixed)
 10308                           ; jumptable            260     6 (fixed)
 10309                           ;	Chosen strategy is simple_byte
 10310     0B63  084D               	movf	??_Sensor_SetTrisBit,w
 10311     0B64  3A00               	xorlw	0	; case 0
 10312     0B65  1903               	skipnz
 10313     0B66  2B55               	goto	l3347
 10314     0B67  2B68               	goto	l692
 10315     0B68                     l692:
 10316     0B68  0008               	return
 10317     0B69                     __end_of_Sensor_SetTrisBit:
 10318                           
 10319                           	psect	text31
 10320     0AB7                     __ptext31:	
 10321 ;; *************** function _MTOUCH_Sensor_isEnabled *****************
 10322 ;; Defined at:
 10323 ;;		line 767 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10324 ;; Parameters:    Size  Location     Type
 10325 ;;  sensor          1    wreg     enum E11929
 10326 ;; Auto vars:     Size  Location     Type
 10327 ;;  sensor          1    4[BANK0 ] enum E11929
 10328 ;; Return value:  Size  Location     Type
 10329 ;;                  1    wreg      _Bool 
 10330 ;; Registers used:
 10331 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10332 ;; Tracked objects:
 10333 ;;		On entry : 0/0
 10334 ;;		On exit  : 0/0
 10335 ;;		Unchanged: 0/0
 10336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10340 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10341 ;;Total ram usage:        1 bytes
 10342 ;; Hardware stack levels used: 1
 10343 ;; Hardware stack levels required when called: 8
 10344 ;; This function calls:
 10345 ;;		___bmul
 10346 ;; This function is called by:
 10347 ;;		_MTOUCH_Sensor_isSamplingComplete
 10348 ;;		_Sensor_scheduleNextScan
 10349 ;; This function uses a non-reentrant model
 10350 ;;
 10351                           
 10352     0AB7                     _MTOUCH_Sensor_isEnabled:	
 10353                           ;psect for function _MTOUCH_Sensor_isEnabled
 10354                           
 10355                           
 10356                           ;incstack = 0
 10357                           ; Regs used in _MTOUCH_Sensor_isEnabled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10358                           ;MTOUCH_Sensor_isEnabled@sensor stored from wreg
 10359     0AB7  0020               	movlb	0	; select bank0
 10360     0AB8  00D0               	movwf	MTOUCH_Sensor_isEnabled@sensor
 10361     0AB9                     l3359:
 10362                           
 10363                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 767: _Bool MTOUCH_Sensor_isEnabled(enum mto
      +                          uch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 768: {;mcc_generate
      +                          d_files/mtouch/mtouch_sensor.c: 769:     if(sensor < (1u))
 10364     0AB9  0850               	movf	MTOUCH_Sensor_isEnabled@sensor,w
 10365     0ABA  1D03               	btfss	3,2
 10366     0ABB  2ABD               	goto	u1901
 10367     0ABC  2ABE               	goto	u1900
 10368     0ABD                     u1901:
 10369     0ABD  2ACA               	goto	l3367
 10370     0ABE                     u1900:
 10371     0ABE                     l3361:
 10372                           
 10373                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 770:         return (_Bool)mtouch_sensor[se
      +                          nsor].enabled;
 10374     0ABE  3009               	movlw	9
 10375     0ABF  00CC               	movwf	___bmul@multiplicand
 10376     0AC0  0850               	movf	MTOUCH_Sensor_isEnabled@sensor,w
 10377     0AC1  318A  22CC  318A   	fcall	___bmul
 10378     0AC4  3E4B               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
 10379     0AC5  0086               	movwf	6
 10380     0AC6  0187               	clrf	7
 10381     0AC7  0801               	movf	1,w
 10382     0AC8  3901               	andlw	1
 10383     0AC9  2ACB               	goto	l856
 10384     0ACA                     l3367:
 10385                           
 10386                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 772:         return 0;
 10387     0ACA  3000               	movlw	0
 10388     0ACB                     l856:
 10389     0ACB  0008               	return
 10390     0ACC                     __end_of_MTOUCH_Sensor_isEnabled:
 10391                           
 10392                           	psect	text32
 10393     088E                     __ptext32:	
 10394 ;; *************** function _MTOUCH_Sensor_isSampling *****************
 10395 ;; Defined at:
 10396 ;;		line 897 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10397 ;; Parameters:    Size  Location     Type
 10398 ;;		None
 10399 ;; Auto vars:     Size  Location     Type
 10400 ;;		None
 10401 ;; Return value:  Size  Location     Type
 10402 ;;                  1    wreg      _Bool 
 10403 ;; Registers used:
 10404 ;;		wreg
 10405 ;; Tracked objects:
 10406 ;;		On entry : 0/0
 10407 ;;		On exit  : 0/0
 10408 ;;		Unchanged: 0/0
 10409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10414 ;;Total ram usage:        0 bytes
 10415 ;; Hardware stack levels used: 1
 10416 ;; Hardware stack levels required when called: 7
 10417 ;; This function calls:
 10418 ;;		Nothing
 10419 ;; This function is called by:
 10420 ;;		_MTOUCH_Sensor_isSamplingComplete
 10421 ;; This function uses a non-reentrant model
 10422 ;;
 10423                           
 10424     088E                     _MTOUCH_Sensor_isSampling:	
 10425                           ;psect for function _MTOUCH_Sensor_isSampling
 10426                           
 10427     088E                     l3617:	
 10428                           ;incstack = 0
 10429                           ; Regs used in _MTOUCH_Sensor_isSampling: [wreg]
 10430                           
 10431                           
 10432                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 899:     return sampling_flag;
 10433     088E  0020               	movlb	0	; select bank0
 10434     088F  083F               	movf	_sampling_flag,w
 10435     0890                     l914:
 10436     0890  0008               	return
 10437     0891                     __end_of_MTOUCH_Sensor_isSampling:
 10438                           
 10439                           	psect	text33
 10440     0964                     __ptext33:	
 10441 ;; *************** function _MTOUCH_Initialize *****************
 10442 ;; Defined at:
 10443 ;;		line 82 in file "mcc_generated_files/mtouch/mtouch.c"
 10444 ;; Parameters:    Size  Location     Type
 10445 ;;		None
 10446 ;; Auto vars:     Size  Location     Type
 10447 ;;		None
 10448 ;; Return value:  Size  Location     Type
 10449 ;;                  1    wreg      void 
 10450 ;; Registers used:
 10451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10452 ;; Tracked objects:
 10453 ;;		On entry : 0/0
 10454 ;;		On exit  : 0/0
 10455 ;;		Unchanged: 0/0
 10456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10461 ;;Total ram usage:        0 bytes
 10462 ;; Hardware stack levels used: 1
 10463 ;; Hardware stack levels required when called: 11
 10464 ;; This function calls:
 10465 ;;		_MTOUCH_Button_InitializeAll
 10466 ;;		_MTOUCH_DataStreamer_Initialize
 10467 ;;		_MTOUCH_Sensor_InitializeAll
 10468 ;;		_MTOUCH_Sensor_Sampled_ResetAll
 10469 ;;		_MTOUCH_Sensor_Scan_Initialize
 10470 ;; This function is called by:
 10471 ;;		_SYSTEM_Initialize
 10472 ;;		_MTOUCH_Service_Mainloop
 10473 ;; This function uses a non-reentrant model
 10474 ;;
 10475                           
 10476     0964                     _MTOUCH_Initialize:	
 10477                           ;psect for function _MTOUCH_Initialize
 10478                           
 10479     0964                     l4227:	
 10480                           ;incstack = 0
 10481                           ; Regs used in _MTOUCH_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10482                           
 10483                           
 10484                           ;mcc_generated_files/mtouch/mtouch.c: 84:     MTOUCH_Sensor_InitializeAll();
 10485     0964  318C  2422  3189   	fcall	_MTOUCH_Sensor_InitializeAll
 10486                           
 10487                           ;mcc_generated_files/mtouch/mtouch.c: 86:     MTOUCH_Button_InitializeAll();
 10488     0967  318C  2404  3189   	fcall	_MTOUCH_Button_InitializeAll
 10489     096A                     l4229:
 10490                           
 10491                           ;mcc_generated_files/mtouch/mtouch.c: 89:     MTOUCH_DataStreamer_Initialize();
 10492     096A  3188  208C  3189   	fcall	_MTOUCH_DataStreamer_Initialize
 10493     096D                     l4231:
 10494                           
 10495                           ;mcc_generated_files/mtouch/mtouch.c: 91:     MTOUCH_Sensor_Sampled_ResetAll();
 10496     096D  318C  2440  3189   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
 10497     0970                     l4233:
 10498                           
 10499                           ;mcc_generated_files/mtouch/mtouch.c: 92:     MTOUCH_Sensor_Scan_Initialize();
 10500     0970  3188  2099  3189   	fcall	_MTOUCH_Sensor_Scan_Initialize
 10501     0973                     l369:
 10502     0973  0008               	return
 10503     0974                     __end_of_MTOUCH_Initialize:
 10504                           
 10505                           	psect	text34
 10506     0899                     __ptext34:	
 10507 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
 10508 ;; Defined at:
 10509 ;;		line 345 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10510 ;; Parameters:    Size  Location     Type
 10511 ;;		None
 10512 ;; Auto vars:     Size  Location     Type
 10513 ;;		None
 10514 ;; Return value:  Size  Location     Type
 10515 ;;                  1    wreg      void 
 10516 ;; Registers used:
 10517 ;;		wreg, status,2, status,0, pclath, cstack
 10518 ;; Tracked objects:
 10519 ;;		On entry : 0/0
 10520 ;;		On exit  : 0/0
 10521 ;;		Unchanged: 0/0
 10522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10527 ;;Total ram usage:        0 bytes
 10528 ;; Hardware stack levels used: 1
 10529 ;; Hardware stack levels required when called: 9
 10530 ;; This function calls:
 10531 ;;		_MTOUCH_Sensor_ADCC_Initialize
 10532 ;; This function is called by:
 10533 ;;		_MTOUCH_Initialize
 10534 ;; This function uses a non-reentrant model
 10535 ;;
 10536                           
 10537     0899                     _MTOUCH_Sensor_Scan_Initialize:	
 10538                           ;psect for function _MTOUCH_Sensor_Scan_Initialize
 10539                           
 10540     0899                     l3985:	
 10541                           ;incstack = 0
 10542                           ; Regs used in _MTOUCH_Sensor_Scan_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10543                           
 10544                           
 10545                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 347:     MTOUCH_Sensor_ADCC_Initialize();
 10546     0899  318C  247F  3188   	fcall	_MTOUCH_Sensor_ADCC_Initialize
 10547     089C                     l726:
 10548     089C  0008               	return
 10549     089D                     __end_of_MTOUCH_Sensor_Scan_Initialize:
 10550                           
 10551                           	psect	text35
 10552     0C7F                     __ptext35:	
 10553 ;; *************** function _MTOUCH_Sensor_ADCC_Initialize *****************
 10554 ;; Defined at:
 10555 ;;		line 225 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10556 ;; Parameters:    Size  Location     Type
 10557 ;;		None
 10558 ;; Auto vars:     Size  Location     Type
 10559 ;;		None
 10560 ;; Return value:  Size  Location     Type
 10561 ;;                  1    wreg      void 
 10562 ;; Registers used:
 10563 ;;		wreg, status,2, status,0, pclath, cstack
 10564 ;; Tracked objects:
 10565 ;;		On entry : 0/0
 10566 ;;		On exit  : 0/0
 10567 ;;		Unchanged: 0/0
 10568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10573 ;;Total ram usage:        0 bytes
 10574 ;; Hardware stack levels used: 1
 10575 ;; Hardware stack levels required when called: 8
 10576 ;; This function calls:
 10577 ;;		_ADCC_SetADTIInterruptHandler
 10578 ;; This function is called by:
 10579 ;;		_MTOUCH_Sensor_Scan_Initialize
 10580 ;; This function uses a non-reentrant model
 10581 ;;
 10582                           
 10583     0C7F                     _MTOUCH_Sensor_ADCC_Initialize:	
 10584                           ;psect for function _MTOUCH_Sensor_ADCC_Initialize
 10585                           
 10586     0C7F                     l3593:	
 10587                           ;incstack = 0
 10588                           ; Regs used in _MTOUCH_Sensor_ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10589                           
 10590                           
 10591                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 229:     ADCLK = 0x3;
 10592     0C7F  3003               	movlw	3
 10593     0C80  0021               	movlb	1	; select bank1
 10594     0C81  0098               	movwf	24	;volatile
 10595     0C82                     l3595:
 10596                           
 10597                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 231:     ADREF = 0x00;
 10598     0C82  019A               	clrf	26	;volatile
 10599     0C83                     l3597:
 10600                           
 10601                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 233:     ADCAP = 0x00;
 10602     0C83  019B               	clrf	27	;volatile
 10603     0C84                     l3599:
 10604                           
 10605                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 235:     ADLTHL = 0x00;
 10606     0C84  0022               	movlb	2	; select bank2
 10607     0C85  018E               	clrf	14	;volatile
 10608     0C86                     l3601:
 10609                           
 10610                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 237:     ADLTHH = 0x00;
 10611     0C86  018F               	clrf	15	;volatile
 10612     0C87                     l3603:
 10613                           
 10614                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 239:     ADUTHL = 0x00;
 10615     0C87  0190               	clrf	16	;volatile
 10616     0C88                     l3605:
 10617                           
 10618                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 241:     ADUTHH = 0x00;
 10619     0C88  0191               	clrf	17	;volatile
 10620     0C89                     l3607:
 10621                           
 10622                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 243:     ADSTPTL = 0x00;
 10623     0C89  0192               	clrf	18	;volatile
 10624     0C8A                     l3609:
 10625                           
 10626                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 245:     ADSTPTH = 0x00;
 10627     0C8A  0193               	clrf	19	;volatile
 10628                           
 10629                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 248:     ADCON1 = 0x41;
 10630     0C8B  3041               	movlw	65
 10631     0C8C  0021               	movlb	1	; select bank1
 10632     0C8D  0094               	movwf	20	;volatile
 10633                           
 10634                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 250:     ADCON2 = 0x8B;
 10635     0C8E  308B               	movlw	139
 10636     0C8F  0095               	movwf	21	;volatile
 10637                           
 10638                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 253:     ADCON3 = 0x0F;
 10639     0C90  300F               	movlw	15
 10640     0C91  0096               	movwf	22	;volatile
 10641                           
 10642                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 256:     ADCON0 = 0xC4;
 10643     0C92  30C4               	movlw	196
 10644     0C93  0093               	movwf	19	;volatile
 10645     0C94                     l3611:
 10646                           
 10647                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 259:     PIR1bits.ADTIF = 0;
 10648     0C94  002E               	movlb	14	; select bank14
 10649     0C95  108D               	bcf	13,1	;volatile
 10650     0C96                     l3613:
 10651                           
 10652                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 261:     PIE1bits.ADTIE = 1;
 10653     0C96  1497               	bsf	23,1	;volatile
 10654     0C97                     l3615:
 10655                           
 10656                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 263:     ADCC_SetADTIInterruptHandler(ADCC_
      +                          ThresholdISR_mTouch);
 10657     0C97  30A6               	movlw	low _ADCC_ThresholdISR_mTouch
 10658     0C98  0020               	movlb	0	; select bank0
 10659     0C99  00CC               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 10660     0C9A  3008               	movlw	high _ADCC_ThresholdISR_mTouch
 10661     0C9B  00CD               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 10662     0C9C  3188  20AC  318C   	fcall	_ADCC_SetADTIInterruptHandler
 10663     0C9F                     l695:
 10664     0C9F  0008               	return
 10665     0CA0                     __end_of_MTOUCH_Sensor_ADCC_Initialize:
 10666                           
 10667                           	psect	text36
 10668     08AC                     __ptext36:	
 10669 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 10670 ;; Defined at:
 10671 ;;		line 316 in file "mcc_generated_files/adcc.c"
 10672 ;; Parameters:    Size  Location     Type
 10673 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 10674 ;;		 -> ADCC_ThresholdISR_mTouch(1), ADCC_DefaultInterruptHandler(1), 
 10675 ;; Auto vars:     Size  Location     Type
 10676 ;;		None
 10677 ;; Return value:  Size  Location     Type
 10678 ;;                  1    wreg      void 
 10679 ;; Registers used:
 10680 ;;		wreg
 10681 ;; Tracked objects:
 10682 ;;		On entry : 0/0
 10683 ;;		On exit  : 0/0
 10684 ;;		Unchanged: 0/0
 10685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10686 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10689 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10690 ;;Total ram usage:        2 bytes
 10691 ;; Hardware stack levels used: 1
 10692 ;; Hardware stack levels required when called: 7
 10693 ;; This function calls:
 10694 ;;		Nothing
 10695 ;; This function is called by:
 10696 ;;		_ADCC_Initialize
 10697 ;;		_MTOUCH_Sensor_ADCC_Initialize
 10698 ;; This function uses a non-reentrant model
 10699 ;;
 10700                           
 10701     08AC                     _ADCC_SetADTIInterruptHandler:	
 10702                           ;psect for function _ADCC_SetADTIInterruptHandler
 10703                           
 10704     08AC                     l3337:	
 10705                           ;incstack = 0
 10706                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 10707                           
 10708                           
 10709                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 10710     08AC  0020               	movlb	0	; select bank0
 10711     08AD  084D               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 10712     08AE  00EC               	movwf	_ADCC_ADTI_InterruptHandler+1
 10713     08AF  084C               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 10714     08B0  00EB               	movwf	_ADCC_ADTI_InterruptHandler
 10715     08B1                     l561:
 10716     08B1  0008               	return
 10717     08B2                     __end_of_ADCC_SetADTIInterruptHandler:
 10718                           
 10719                           	psect	text37
 10720     0C40                     __ptext37:	
 10721 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
 10722 ;; Defined at:
 10723 ;;		line 870 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;		None
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;  sensor          1    2[BANK0 ] PTR struct .
 10728 ;;		 -> mtouch_sensor(9), 
 10729 ;; Return value:  Size  Location     Type
 10730 ;;                  1    wreg      void 
 10731 ;; Registers used:
 10732 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10733 ;; Tracked objects:
 10734 ;;		On entry : 0/0
 10735 ;;		On exit  : 0/0
 10736 ;;		Unchanged: 0/0
 10737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10739 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10740 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10741 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10742 ;;Total ram usage:        2 bytes
 10743 ;; Hardware stack levels used: 1
 10744 ;; Hardware stack levels required when called: 8
 10745 ;; This function calls:
 10746 ;;		_Sensor_Sampled_Reset
 10747 ;; This function is called by:
 10748 ;;		_MTOUCH_Initialize
 10749 ;;		_MTOUCH_Service_Mainloop
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753     0C40                     _MTOUCH_Sensor_Sampled_ResetAll:	
 10754                           ;psect for function _MTOUCH_Sensor_Sampled_ResetAll
 10755                           
 10756     0C40                     l3975:	
 10757                           ;incstack = 0
 10758                           ; Regs used in _MTOUCH_Sensor_Sampled_ResetAll: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 10759                           
 10760                           
 10761                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 872:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 873:     for(sensor = &mtouch_sensor[0];sensor<= &mto
      +                          uch_sensor[(1u)-1];sensor++)
 10762     0C40  3043               	movlw	(low (_mtouch_sensor| 0))& (0+255)
 10763     0C41  0020               	movlb	0	; select bank0
 10764     0C42  00CE               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor
 10765     0C43  3043               	movlw	(low (_mtouch_sensor| 0))& (0+255)
 10766     0C44  00CD               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
 10767     0C45  084E               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
 10768     0C46  024D               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll,w
 10769     0C47  1803               	skipnc
 10770     0C48  2C4A               	goto	u2791
 10771     0C49  2C4B               	goto	u2790
 10772     0C4A                     u2791:
 10773     0C4A  2C4C               	goto	l3979
 10774     0C4B                     u2790:
 10775     0C4B  2C5D               	goto	l900
 10776     0C4C                     l3979:
 10777                           
 10778                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 874:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 875:         Sensor_Sampled_Reset(sensor);
 10779     0C4C  084E               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
 10780     0C4D  3188  20E1  318C   	fcall	_Sensor_Sampled_Reset
 10781     0C50                     l3981:
 10782                           
 10783                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 876:     }
 10784     0C50  3009               	movlw	9
 10785     0C51  0020               	movlb	0	; select bank0
 10786     0C52  00CD               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
 10787     0C53  084D               	movf	??_MTOUCH_Sensor_Sampled_ResetAll,w
 10788     0C54  07CE               	addwf	MTOUCH_Sensor_Sampled_ResetAll@sensor,f
 10789     0C55                     l3983:
 10790     0C55  3043               	movlw	(low (_mtouch_sensor| 0))& (0+255)
 10791     0C56  00CD               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
 10792     0C57  084E               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
 10793     0C58  024D               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll,w
 10794     0C59  1803               	skipnc
 10795     0C5A  2C5C               	goto	u2801
 10796     0C5B  2C5D               	goto	u2800
 10797     0C5C                     u2801:
 10798     0C5C  2C4C               	goto	l3979
 10799     0C5D                     u2800:
 10800     0C5D                     l900:
 10801     0C5D  0008               	return
 10802     0C5E                     __end_of_MTOUCH_Sensor_Sampled_ResetAll:
 10803                           
 10804                           	psect	text38
 10805     0C22                     __ptext38:	
 10806 ;; *************** function _MTOUCH_Sensor_InitializeAll *****************
 10807 ;; Defined at:
 10808 ;;		line 268 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10809 ;; Parameters:    Size  Location     Type
 10810 ;;		None
 10811 ;; Auto vars:     Size  Location     Type
 10812 ;;  sensor          1   11[BANK0 ] enum E11929
 10813 ;; Return value:  Size  Location     Type
 10814 ;;                  1    wreg      void 
 10815 ;; Registers used:
 10816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10817 ;; Tracked objects:
 10818 ;;		On entry : 0/0
 10819 ;;		On exit  : 0/0
 10820 ;;		Unchanged: 0/0
 10821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10823 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10824 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10825 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10826 ;;Total ram usage:        2 bytes
 10827 ;; Hardware stack levels used: 1
 10828 ;; Hardware stack levels required when called: 10
 10829 ;; This function calls:
 10830 ;;		_MTOUCH_Sensor_Initialize
 10831 ;;		_memcpy
 10832 ;; This function is called by:
 10833 ;;		_MTOUCH_Initialize
 10834 ;; This function uses a non-reentrant model
 10835 ;;
 10836                           
 10837     0C22                     _MTOUCH_Sensor_InitializeAll:	
 10838                           ;psect for function _MTOUCH_Sensor_InitializeAll
 10839                           
 10840     0C22                     l3961:	
 10841                           ;incstack = 0
 10842                           ; Regs used in _MTOUCH_Sensor_InitializeAll: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10843                           
 10844                           
 10845                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 270:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 272:     memcpy(mtouch_sensor,mtouch_sensor_i
      +                          nit,sizeof(mtouch_sensor_init));
 10846     0C22  3010               	movlw	low (_mtouch_sensor_init| (0+32768))
 10847     0C23  0020               	movlb	0	; select bank0
 10848     0C24  00CC               	movwf	memcpy@s1
 10849     0C25  3090               	movlw	high (_mtouch_sensor_init| (0+32768))
 10850     0C26  00CD               	movwf	memcpy@s1+1
 10851     0C27  3009               	movlw	9
 10852     0C28  00CE               	movwf	memcpy@n
 10853     0C29  3000               	movlw	0
 10854     0C2A  00CF               	movwf	memcpy@n+1
 10855     0C2B  3043               	movlw	(low (_mtouch_sensor| 0))& (0+255)
 10856     0C2C  318D  255C  318C   	fcall	_memcpy
 10857     0C2F                     l3963:
 10858                           
 10859                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 274:     for (sensor = 0; sensor < (1u); se
      +                          nsor++)
 10860     0C2F  0020               	movlb	0	; select bank0
 10861     0C30  01D7               	clrf	MTOUCH_Sensor_InitializeAll@sensor
 10862     0C31                     l3969:
 10863                           
 10864                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 275:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 276:         MTOUCH_Sensor_Initialize(sensor);
 10865     0C31  0857               	movf	MTOUCH_Sensor_InitializeAll@sensor,w
 10866     0C32  318B  233B  318C   	fcall	_MTOUCH_Sensor_Initialize
 10867     0C35                     l3971:
 10868                           
 10869                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 277:     }
 10870     0C35  3001               	movlw	1
 10871     0C36  0020               	movlb	0	; select bank0
 10872     0C37  00D6               	movwf	??_MTOUCH_Sensor_InitializeAll
 10873     0C38  0856               	movf	??_MTOUCH_Sensor_InitializeAll,w
 10874     0C39  07D7               	addwf	MTOUCH_Sensor_InitializeAll@sensor,f
 10875     0C3A                     l3973:
 10876     0C3A  0857               	movf	MTOUCH_Sensor_InitializeAll@sensor,w
 10877     0C3B  1903               	btfsc	3,2
 10878     0C3C  2C3E               	goto	u2781
 10879     0C3D  2C3F               	goto	u2780
 10880     0C3E                     u2781:
 10881     0C3E  2C31               	goto	l3969
 10882     0C3F                     u2780:
 10883     0C3F                     l700:
 10884     0C3F  0008               	return
 10885     0C40                     __end_of_MTOUCH_Sensor_InitializeAll:
 10886                           
 10887                           	psect	text39
 10888     0B3B                     __ptext39:	
 10889 ;; *************** function _MTOUCH_Sensor_Initialize *****************
 10890 ;; Defined at:
 10891 ;;		line 199 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;  sensor          1    wreg     enum E11929
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;  sensor          1    5[BANK0 ] enum E11929
 10896 ;; Return value:  Size  Location     Type
 10897 ;;                  1    wreg      enum E11931
 10898 ;; Registers used:
 10899 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10900 ;; Tracked objects:
 10901 ;;		On entry : 0/0
 10902 ;;		On exit  : 0/0
 10903 ;;		Unchanged: 0/0
 10904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10906 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10908 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10909 ;;Total ram usage:        1 bytes
 10910 ;; Hardware stack levels used: 1
 10911 ;; Hardware stack levels required when called: 9
 10912 ;; This function calls:
 10913 ;;		_MTOUCH_Sensor_Calibrate
 10914 ;;		_MTOUCH_Sensor_Enable
 10915 ;;		_Sensor_Sampled_Reset
 10916 ;;		___bmul
 10917 ;; This function is called by:
 10918 ;;		_MTOUCH_Sensor_InitializeAll
 10919 ;; This function uses a non-reentrant model
 10920 ;;
 10921                           
 10922     0B3B                     _MTOUCH_Sensor_Initialize:	
 10923                           ;psect for function _MTOUCH_Sensor_Initialize
 10924                           
 10925                           
 10926                           ;incstack = 0
 10927                           ; Regs used in _MTOUCH_Sensor_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 10928                           ;MTOUCH_Sensor_Initialize@sensor stored from wreg
 10929     0B3B  0020               	movlb	0	; select bank0
 10930     0B3C  00D1               	movwf	MTOUCH_Sensor_Initialize@sensor
 10931     0B3D                     l3589:
 10932                           
 10933                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 199: enum mtouch_sensor_error MTOUCH_Sensor
      +                          _Initialize(enum mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           200: {;mcc_generated_files/mtouch/mtouch_sensor.c: 201:     MTOUCH_Sensor_Enable(sensor
      +                          );
 10934     0B3D  0851               	movf	MTOUCH_Sensor_Initialize@sensor,w
 10935     0B3E  3189  21BA  318B   	fcall	_MTOUCH_Sensor_Enable
 10936                           
 10937                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 202:     MTOUCH_Sensor_Calibrate(sensor);
 10938     0B41  0020               	movlb	0	; select bank0
 10939     0B42  0851               	movf	MTOUCH_Sensor_Initialize@sensor,w
 10940     0B43  3189  21A8  318B   	fcall	_MTOUCH_Sensor_Calibrate
 10941                           
 10942                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 203:     Sensor_Sampled_Reset(&mtouch_senso
      +                          r[sensor]);
 10943     0B46  3009               	movlw	9
 10944     0B47  0020               	movlb	0	; select bank0
 10945     0B48  00CC               	movwf	___bmul@multiplicand
 10946     0B49  0851               	movf	MTOUCH_Sensor_Initialize@sensor,w
 10947     0B4A  318A  22CC  318B   	fcall	___bmul
 10948     0B4D  3E43               	addlw	(low (_mtouch_sensor| 0))& (0+255)
 10949     0B4E  3188  20E1  318B   	fcall	_Sensor_Sampled_Reset
 10950     0B51                     l685:
 10951     0B51  0008               	return
 10952     0B52                     __end_of_MTOUCH_Sensor_Initialize:
 10953                           
 10954                           	psect	text40
 10955     08E1                     __ptext40:	
 10956 ;; *************** function _Sensor_Sampled_Reset *****************
 10957 ;; Defined at:
 10958 ;;		line 887 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10959 ;; Parameters:    Size  Location     Type
 10960 ;;  sensor          1    wreg     PTR struct .
 10961 ;;		 -> mtouch_sensor(9), 
 10962 ;; Auto vars:     Size  Location     Type
 10963 ;;  sensor          1    0[BANK0 ] PTR struct .
 10964 ;;		 -> mtouch_sensor(9), 
 10965 ;; Return value:  Size  Location     Type
 10966 ;;                  1    wreg      void 
 10967 ;; Registers used:
 10968 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10969 ;; Tracked objects:
 10970 ;;		On entry : 0/0
 10971 ;;		On exit  : 0/0
 10972 ;;		Unchanged: 0/0
 10973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10975 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10977 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10978 ;;Total ram usage:        1 bytes
 10979 ;; Hardware stack levels used: 1
 10980 ;; Hardware stack levels required when called: 7
 10981 ;; This function calls:
 10982 ;;		Nothing
 10983 ;; This function is called by:
 10984 ;;		_MTOUCH_Sensor_Initialize
 10985 ;;		_MTOUCH_Sensor_Sampled_ResetAll
 10986 ;; This function uses a non-reentrant model
 10987 ;;
 10988                           
 10989     08E1                     _Sensor_Sampled_Reset:	
 10990                           ;psect for function _Sensor_Sampled_Reset
 10991                           
 10992                           
 10993                           ;incstack = 0
 10994                           ; Regs used in _Sensor_Sampled_Reset: [wreg+fsr1l+fsr1h+status,2+status,0]
 10995                           ;Sensor_Sampled_Reset@sensor stored from wreg
 10996     08E1  0020               	movlb	0	; select bank0
 10997     08E2  00CC               	movwf	Sensor_Sampled_Reset@sensor
 10998     08E3                     l3343:
 10999                           
 11000                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 887: static __attribute__((inline)) void Se
      +                          nsor_Sampled_Reset(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          888: {;mcc_generated_files/mtouch/mtouch_sensor.c: 889:     sensor->sampled = 0;
 11001     08E3  084C               	movf	Sensor_Sampled_Reset@sensor,w
 11002     08E4  3E08               	addlw	8
 11003     08E5  0086               	movwf	6
 11004     08E6  0187               	clrf	7
 11005     08E7  1081               	bcf	1,1
 11006     08E8                     l908:
 11007     08E8  0008               	return
 11008     08E9                     __end_of_Sensor_Sampled_Reset:
 11009                           
 11010                           	psect	text41
 11011     09BA                     __ptext41:	
 11012 ;; *************** function _MTOUCH_Sensor_Enable *****************
 11013 ;; Defined at:
 11014 ;;		line 761 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11015 ;; Parameters:    Size  Location     Type
 11016 ;;  sensor          1    wreg     enum E11929
 11017 ;; Auto vars:     Size  Location     Type
 11018 ;;  sensor          1    4[BANK0 ] enum E11929
 11019 ;; Return value:  Size  Location     Type
 11020 ;;                  1    wreg      void 
 11021 ;; Registers used:
 11022 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11023 ;; Tracked objects:
 11024 ;;		On entry : 0/0
 11025 ;;		On exit  : 0/0
 11026 ;;		Unchanged: 0/0
 11027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11029 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11031 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11032 ;;Total ram usage:        1 bytes
 11033 ;; Hardware stack levels used: 1
 11034 ;; Hardware stack levels required when called: 8
 11035 ;; This function calls:
 11036 ;;		___bmul
 11037 ;; This function is called by:
 11038 ;;		_MTOUCH_Sensor_Initialize
 11039 ;; This function uses a non-reentrant model
 11040 ;;
 11041                           
 11042     09BA                     _MTOUCH_Sensor_Enable:	
 11043                           ;psect for function _MTOUCH_Sensor_Enable
 11044                           
 11045                           
 11046                           ;incstack = 0
 11047                           ; Regs used in _MTOUCH_Sensor_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11048                           ;MTOUCH_Sensor_Enable@sensor stored from wreg
 11049     09BA  0020               	movlb	0	; select bank0
 11050     09BB  00D0               	movwf	MTOUCH_Sensor_Enable@sensor
 11051     09BC                     l3339:
 11052                           
 11053                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 761: void MTOUCH_Sensor_Enable(enum mtouch_
      +                          sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 762: {;mcc_generated_fi
      +                          les/mtouch/mtouch_sensor.c: 763:     if(sensor < (1u))
 11054     09BC  0850               	movf	MTOUCH_Sensor_Enable@sensor,w
 11055     09BD  1D03               	btfss	3,2
 11056     09BE  29C0               	goto	u1891
 11057     09BF  29C1               	goto	u1890
 11058     09C0                     u1891:
 11059     09C0  29CB               	goto	l852
 11060     09C1                     u1890:
 11061     09C1                     l3341:
 11062                           
 11063                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 764:         mtouch_sensor[sensor].enabled 
      +                          = 1;
 11064     09C1  3009               	movlw	9
 11065     09C2  00CC               	movwf	___bmul@multiplicand
 11066     09C3  0850               	movf	MTOUCH_Sensor_Enable@sensor,w
 11067     09C4  318A  22CC  3189   	fcall	___bmul
 11068     09C7  3E4B               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
 11069     09C8  0086               	movwf	6
 11070     09C9  0187               	clrf	7
 11071     09CA  1401               	bsf	1,0
 11072     09CB                     l852:
 11073     09CB  0008               	return
 11074     09CC                     __end_of_MTOUCH_Sensor_Enable:
 11075                           
 11076                           	psect	text42
 11077     088C                     __ptext42:	
 11078 ;; *************** function _MTOUCH_DataStreamer_Initialize *****************
 11079 ;; Defined at:
 11080 ;;		line 60 in file "mcc_generated_files/mtouch/mtouch_datastreamer.c"
 11081 ;; Parameters:    Size  Location     Type
 11082 ;;		None
 11083 ;; Auto vars:     Size  Location     Type
 11084 ;;		None
 11085 ;; Return value:  Size  Location     Type
 11086 ;;                  1    wreg      void 
 11087 ;; Registers used:
 11088 ;;		None
 11089 ;; Tracked objects:
 11090 ;;		On entry : 0/0
 11091 ;;		On exit  : 0/0
 11092 ;;		Unchanged: 0/0
 11093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11098 ;;Total ram usage:        0 bytes
 11099 ;; Hardware stack levels used: 1
 11100 ;; Hardware stack levels required when called: 7
 11101 ;; This function calls:
 11102 ;;		Nothing
 11103 ;; This function is called by:
 11104 ;;		_MTOUCH_Initialize
 11105 ;; This function uses a non-reentrant model
 11106 ;;
 11107                           
 11108     088C                     _MTOUCH_DataStreamer_Initialize:	
 11109                           ;psect for function _MTOUCH_DataStreamer_Initialize
 11110                           
 11111     088C                     l971:	
 11112                           ;incstack = 0
 11113                           ; Regs used in _MTOUCH_DataStreamer_Initialize: []
 11114                           
 11115     088C  0008               	return
 11116     088D                     __end_of_MTOUCH_DataStreamer_Initialize:
 11117                           
 11118                           	psect	text43
 11119     0C04                     __ptext43:	
 11120 ;; *************** function _MTOUCH_Button_InitializeAll *****************
 11121 ;; Defined at:
 11122 ;;		line 155 in file "mcc_generated_files/mtouch/mtouch_button.c"
 11123 ;; Parameters:    Size  Location     Type
 11124 ;;		None
 11125 ;; Auto vars:     Size  Location     Type
 11126 ;;  button          1   11[BANK0 ] enum E11928
 11127 ;; Return value:  Size  Location     Type
 11128 ;;                  1    wreg      void 
 11129 ;; Registers used:
 11130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11131 ;; Tracked objects:
 11132 ;;		On entry : 0/0
 11133 ;;		On exit  : 0/0
 11134 ;;		Unchanged: 0/0
 11135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11137 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11138 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11139 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11140 ;;Total ram usage:        2 bytes
 11141 ;; Hardware stack levels used: 1
 11142 ;; Hardware stack levels required when called: 10
 11143 ;; This function calls:
 11144 ;;		_MTOUCH_Button_Initialize
 11145 ;;		_memcpy
 11146 ;; This function is called by:
 11147 ;;		_MTOUCH_Initialize
 11148 ;; This function uses a non-reentrant model
 11149 ;;
 11150                           
 11151     0C04                     _MTOUCH_Button_InitializeAll:	
 11152                           ;psect for function _MTOUCH_Button_InitializeAll
 11153                           
 11154     0C04                     l3859:	
 11155                           ;incstack = 0
 11156                           ; Regs used in _MTOUCH_Button_InitializeAll: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 11157                           
 11158                           
 11159                           ;mcc_generated_files/mtouch/mtouch_button.c: 157:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 159:     memcpy(mtouch_button,mtouch_button_i
      +                          nit,sizeof(mtouch_button_init));
 11160     0C04  3000               	movlw	low (_mtouch_button_init| (0+32768))
 11161     0C05  0020               	movlb	0	; select bank0
 11162     0C06  00CC               	movwf	memcpy@s1
 11163     0C07  3090               	movlw	high (_mtouch_button_init| (0+32768))
 11164     0C08  00CD               	movwf	memcpy@s1+1
 11165     0C09  3010               	movlw	16
 11166     0C0A  00CE               	movwf	memcpy@n
 11167     0C0B  3000               	movlw	0
 11168     0C0C  00CF               	movwf	memcpy@n+1
 11169     0C0D  30B0               	movlw	(low (_mtouch_button| 0))& (0+255)
 11170     0C0E  318D  255C  318C   	fcall	_memcpy
 11171     0C11                     l3861:
 11172                           
 11173                           ;mcc_generated_files/mtouch/mtouch_button.c: 161:     for (button = 0; button < 1u; butt
      +                          on++)
 11174     0C11  0020               	movlb	0	; select bank0
 11175     0C12  01D7               	clrf	MTOUCH_Button_InitializeAll@button
 11176     0C13                     l3867:
 11177                           
 11178                           ;mcc_generated_files/mtouch/mtouch_button.c: 162:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 163:         MTOUCH_Button_Initialize(button);
 11179     0C13  0857               	movf	MTOUCH_Button_InitializeAll@button,w
 11180     0C14  318E  265D  318C   	fcall	_MTOUCH_Button_Initialize
 11181     0C17                     l3869:
 11182                           
 11183                           ;mcc_generated_files/mtouch/mtouch_button.c: 164:     }
 11184     0C17  3001               	movlw	1
 11185     0C18  0020               	movlb	0	; select bank0
 11186     0C19  00D6               	movwf	??_MTOUCH_Button_InitializeAll
 11187     0C1A  0856               	movf	??_MTOUCH_Button_InitializeAll,w
 11188     0C1B  07D7               	addwf	MTOUCH_Button_InitializeAll@button,f
 11189     0C1C                     l3871:
 11190     0C1C  0857               	movf	MTOUCH_Button_InitializeAll@button,w
 11191     0C1D  1903               	btfsc	3,2
 11192     0C1E  2C20               	goto	u2601
 11193     0C1F  2C21               	goto	u2600
 11194     0C20                     u2601:
 11195     0C20  2C13               	goto	l3867
 11196     0C21                     u2600:
 11197     0C21                     l198:
 11198     0C21  0008               	return
 11199     0C22                     __end_of_MTOUCH_Button_InitializeAll:
 11200                           
 11201                           	psect	text44
 11202     0D5C                     __ptext44:	
 11203 ;; *************** function _memcpy *****************
 11204 ;; Defined at:
 11205 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 11206 ;; Parameters:    Size  Location     Type
 11207 ;;  d1              1    wreg     PTR void 
 11208 ;;		 -> mtouch_sensor(9), mtouch_button(16), 
 11209 ;;  s1              2    0[BANK0 ] PTR const void 
 11210 ;;		 -> mtouch_sensor_init(9), mtouch_button_init(16), 
 11211 ;;  n               2    2[BANK0 ] unsigned int 
 11212 ;; Auto vars:     Size  Location     Type
 11213 ;;  d1              1    9[BANK0 ] PTR void 
 11214 ;;		 -> mtouch_sensor(9), mtouch_button(16), 
 11215 ;;  s               2    5[BANK0 ] PTR const unsigned char 
 11216 ;;		 -> mtouch_sensor_init(9), mtouch_button_init(16), 
 11217 ;;  d               1    8[BANK0 ] PTR unsigned char 
 11218 ;;		 -> mtouch_sensor(9), mtouch_button(16), 
 11219 ;;  tmp             1    7[BANK0 ] unsigned char 
 11220 ;; Return value:  Size  Location     Type
 11221 ;;                  1    wreg      PTR void 
 11222 ;; Registers used:
 11223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11224 ;; Tracked objects:
 11225 ;;		On entry : 0/0
 11226 ;;		On exit  : 0/0
 11227 ;;		Unchanged: 0/0
 11228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11229 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11230 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11231 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11232 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11233 ;;Total ram usage:       10 bytes
 11234 ;; Hardware stack levels used: 1
 11235 ;; Hardware stack levels required when called: 7
 11236 ;; This function calls:
 11237 ;;		Nothing
 11238 ;; This function is called by:
 11239 ;;		_MTOUCH_Button_InitializeAll
 11240 ;;		_MTOUCH_Sensor_InitializeAll
 11241 ;; This function uses a non-reentrant model
 11242 ;;
 11243                           
 11244     0D5C                     _memcpy:	
 11245                           ;psect for function _memcpy
 11246                           
 11247                           
 11248                           ;incstack = 0
 11249                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
 11250                           ;memcpy@d1 stored from wreg
 11251     0D5C  0020               	movlb	0	; select bank0
 11252     0D5D  00D5               	movwf	memcpy@d1
 11253     0D5E                     l3491:
 11254     0D5E  084D               	movf	memcpy@s1+1,w
 11255     0D5F  00D2               	movwf	memcpy@s+1
 11256     0D60  084C               	movf	memcpy@s1,w
 11257     0D61  00D1               	movwf	memcpy@s
 11258     0D62  0855               	movf	memcpy@d1,w
 11259     0D63  00D4               	movwf	memcpy@d
 11260     0D64  2D78               	goto	l3501
 11261     0D65                     l3493:
 11262     0D65  0851               	movf	memcpy@s,w
 11263     0D66  0084               	movwf	4
 11264     0D67  0852               	movf	memcpy@s+1,w
 11265     0D68  0085               	movwf	5
 11266     0D69  0800               	movf	0,w	;code access
 11267     0D6A  00D3               	movwf	memcpy@tmp
 11268     0D6B                     l3495:
 11269     0D6B  3001               	movlw	1
 11270     0D6C  07D1               	addwf	memcpy@s,f
 11271     0D6D  3000               	movlw	0
 11272     0D6E  3DD2               	addwfc	memcpy@s+1,f
 11273     0D6F                     l3497:
 11274     0D6F  0854               	movf	memcpy@d,w
 11275     0D70  0086               	movwf	6
 11276     0D71  0187               	clrf	7
 11277     0D72  0853               	movf	memcpy@tmp,w
 11278     0D73  0081               	movwf	1
 11279     0D74                     l3499:
 11280     0D74  3001               	movlw	1
 11281     0D75  00D0               	movwf	??_memcpy
 11282     0D76  0850               	movf	??_memcpy,w
 11283     0D77  07D4               	addwf	memcpy@d,f
 11284     0D78                     l3501:
 11285     0D78  3001               	movlw	1
 11286     0D79  02CE               	subwf	memcpy@n,f
 11287     0D7A  3000               	movlw	0
 11288     0D7B  3BCF               	subwfb	memcpy@n+1,f
 11289     0D7C  0A4E               	incf	memcpy@n,w
 11290     0D7D  1D03               	skipz
 11291     0D7E  2D83               	goto	u2021
 11292     0D7F  0A4F               	incf	memcpy@n+1,w
 11293     0D80  1D03               	btfss	3,2
 11294     0D81  2D83               	goto	u2021
 11295     0D82  2D84               	goto	u2020
 11296     0D83                     u2021:
 11297     0D83  2D65               	goto	l3493
 11298     0D84                     u2020:
 11299     0D84                     l1751:
 11300     0D84  0008               	return
 11301     0D85                     __end_of_memcpy:
 11302                           
 11303                           	psect	text45
 11304     01B1                     __ptext45:	
 11305 ;; *************** function _MTOUCH_DataStreamer_Service *****************
 11306 ;; Defined at:
 11307 ;;		line 69 in file "mcc_generated_files/mtouch/mtouch_datastreamer.c"
 11308 ;; Parameters:    Size  Location     Type
 11309 ;;		None
 11310 ;; Auto vars:     Size  Location     Type
 11311 ;;  u16temp_outp    2   14[BANK0 ] unsigned short 
 11312 ;;  count_bytes_    1   16[BANK0 ] volatile unsigned char 
 11313 ;;  i               1   13[BANK0 ] unsigned char 
 11314 ;;  u8temp_outpu    1    0        unsigned char 
 11315 ;; Return value:  Size  Location     Type
 11316 ;;                  1    wreg      void 
 11317 ;; Registers used:
 11318 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11319 ;; Tracked objects:
 11320 ;;		On entry : 0/0
 11321 ;;		On exit  : 0/0
 11322 ;;		Unchanged: 0/0
 11323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11325 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11326 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11327 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11328 ;;Total ram usage:        6 bytes
 11329 ;; Hardware stack levels used: 1
 11330 ;; Hardware stack levels required when called: 9
 11331 ;; This function calls:
 11332 ;;		_MTOUCH_Button_Baseline_Get
 11333 ;;		_MTOUCH_Button_Deviation_Get
 11334 ;;		_MTOUCH_Button_Reading_Get
 11335 ;;		_MTOUCH_Button_Scaling_Get
 11336 ;;		_MTOUCH_Button_Threshold_Get
 11337 ;;		_MTOUCH_Button_isPressed
 11338 ;;		_MTOUCH_Sensor_AcquisitionTime_Get
 11339 ;;		_MTOUCH_Sensor_AdditionalCap_Get
 11340 ;;		___awmod
 11341 ;;		_datastreamer_output_byte
 11342 ;; This function is called by:
 11343 ;;		_MTOUCH_Service_Mainloop
 11344 ;; This function uses a non-reentrant model
 11345 ;;
 11346                           
 11347     01B1                     _MTOUCH_DataStreamer_Service:	
 11348                           ;psect for function _MTOUCH_DataStreamer_Service
 11349                           
 11350     01B1                     l4259:	
 11351                           ;incstack = 0
 11352                           ; Regs used in _MTOUCH_DataStreamer_Service: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 11353                           
 11354                           
 11355                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 71:     uint8_t i;;mcc_generated_file
      +                          s/mtouch/mtouch_datastreamer.c: 72:     static uint8_t sequence = 0u;;mcc_generated_file
      +                          s/mtouch/mtouch_datastreamer.c: 73:     uint16_t u16temp_output;;mcc_generated_files/mto
      +                          uch/mtouch_datastreamer.c: 74:     uint8_t u8temp_output;;mcc_generated_files/mtouch/mto
      +                          uch_datastreamer.c: 75:     volatile uint8_t count_bytes_out;;mcc_generated_files/mtouch
      +                          /mtouch_datastreamer.c: 77:     if ((sequence % 10) == 0)
 11356     01B1  300A               	movlw	10
 11357     01B2  0020               	movlb	0	; select bank0
 11358     01B3  00CC               	movwf	___awmod@divisor
 11359     01B4  3000               	movlw	0
 11360     01B5  00CD               	movwf	___awmod@divisor+1
 11361     01B6  0839               	movf	MTOUCH_DataStreamer_Service@sequence,w
 11362     01B7  00D7               	movwf	??_MTOUCH_DataStreamer_Service
 11363     01B8  01D8               	clrf	??_MTOUCH_DataStreamer_Service+1
 11364     01B9  0857               	movf	??_MTOUCH_DataStreamer_Service,w
 11365     01BA  00CE               	movwf	___awmod@dividend
 11366     01BB  0858               	movf	??_MTOUCH_DataStreamer_Service+1,w
 11367     01BC  00CF               	movwf	___awmod@dividend+1
 11368     01BD  318F  27AC  3181   	fcall	___awmod
 11369     01C0  0020               	movlb	0	; select bank0
 11370     01C1  084C               	movf	?___awmod,w
 11371     01C2  044D               	iorwf	?___awmod+1,w
 11372     01C3  1D03               	btfss	3,2
 11373     01C4  29C6               	goto	u3061
 11374     01C5  29C7               	goto	u3060
 11375     01C6                     u3061:
 11376     01C6  29DB               	goto	l4273
 11377     01C7                     u3060:
 11378     01C7                     l4261:
 11379                           
 11380                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 78:     {;mcc_generated_files/mtouch/
      +                          mtouch_datastreamer.c: 79:         for (i = 0; i < sizeof (data); i++)
 11381     01C7  01D9               	clrf	MTOUCH_DataStreamer_Service@i
 11382     01C8                     l4267:
 11383                           
 11384                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 80:             datastreamer_output_b
      +                          yte(data[i]);
 11385     01C8  0859               	movf	MTOUCH_DataStreamer_Service@i,w
 11386     01C9  3EC0               	addlw	(low (_data| 0))& (0+255)
 11387     01CA  0086               	movwf	6
 11388     01CB  0187               	clrf	7
 11389     01CC  0801               	movf	1,w
 11390     01CD  3188  20CB  3181   	fcall	_datastreamer_output_byte
 11391     01D0                     l4269:
 11392     01D0  3001               	movlw	1
 11393     01D1  0020               	movlb	0	; select bank0
 11394     01D2  00D7               	movwf	??_MTOUCH_DataStreamer_Service
 11395     01D3  0857               	movf	??_MTOUCH_DataStreamer_Service,w
 11396     01D4  07D9               	addwf	MTOUCH_DataStreamer_Service@i,f
 11397     01D5                     l4271:
 11398     01D5  3013               	movlw	19
 11399     01D6  0259               	subwf	MTOUCH_DataStreamer_Service@i,w
 11400     01D7  1C03               	skipc
 11401     01D8  29DA               	goto	u3071
 11402     01D9  29DB               	goto	u3070
 11403     01DA                     u3071:
 11404     01DA  29C8               	goto	l4267
 11405     01DB                     u3070:
 11406     01DB                     l4273:
 11407                           
 11408                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 84:     datastreamer_output_byte(0x55
      +                          );
 11409     01DB  3055               	movlw	85
 11410     01DC  3188  20CB  3181   	fcall	_datastreamer_output_byte
 11411                           
 11412                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 86:     datastreamer_output_byte(sequ
      +                          ence);
 11413     01DF  0020               	movlb	0	; select bank0
 11414     01E0  0839               	movf	MTOUCH_DataStreamer_Service@sequence,w
 11415     01E1  3188  20CB  3181   	fcall	_datastreamer_output_byte
 11416     01E4                     l4275:
 11417                           
 11418                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 89:     for (count_bytes_out = 0u; co
      +                          unt_bytes_out < 1u; count_bytes_out++)
 11419     01E4  0020               	movlb	0	; select bank0
 11420     01E5  01DC               	clrf	MTOUCH_DataStreamer_Service@count_bytes_out	;volatile
 11421     01E6                     l4277:
 11422     01E6  085C               	movf	MTOUCH_DataStreamer_Service@count_bytes_out,w	;volatile
 11423     01E7  1903               	btfsc	3,2
 11424     01E8  29EA               	goto	u3081
 11425     01E9  29EB               	goto	u3080
 11426     01EA                     u3081:
 11427     01EA  29EC               	goto	l4281
 11428     01EB                     u3080:
 11429     01EB  2A4F               	goto	l4287
 11430     01EC                     l4281:
 11431                           
 11432                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 90:     {;mcc_generated_files/mtouch/
      +                          mtouch_datastreamer.c: 91:         u16temp_output = MTOUCH_Button_Reading_Get(count_byte
      +                          s_out);
 11433     01EC  085C               	movf	MTOUCH_DataStreamer_Service@count_bytes_out,w	;volatile
 11434     01ED  318B  23CD  3181   	fcall	_MTOUCH_Button_Reading_Get
 11435     01F0  0020               	movlb	0	; select bank0
 11436     01F1  084D               	movf	?_MTOUCH_Button_Reading_Get+1,w
 11437     01F2  00DB               	movwf	MTOUCH_DataStreamer_Service@u16temp_output+1
 11438     01F3  084C               	movf	?_MTOUCH_Button_Reading_Get,w
 11439     01F4  00DA               	movwf	MTOUCH_DataStreamer_Service@u16temp_output
 11440                           
 11441                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 92:         datastreamer_output_byte(
      +                          (uint8_t) u16temp_output);
 11442     01F5  085A               	movf	MTOUCH_DataStreamer_Service@u16temp_output,w
 11443     01F6  3188  20CB  3181   	fcall	_datastreamer_output_byte
 11444                           
 11445                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 93:         datastreamer_output_byte(
      +                          (uint8_t) (u16temp_output >> 8u));
 11446     01F9  0020               	movlb	0	; select bank0
 11447     01FA  085B               	movf	MTOUCH_DataStreamer_Service@u16temp_output+1,w
 11448     01FB  3188  20CB  3181   	fcall	_datastreamer_output_byte
 11449                           
 11450                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 95:         u16temp_output = MTOUCH_B
      +                          utton_Baseline_Get(count_bytes_out);
 11451     01FE  0020               	movlb	0	; select bank0
 11452     01FF  085C               	movf	MTOUCH_DataStreamer_Service@count_bytes_out,w	;volatile
 11453     0200  318A  2251  3181   	fcall	_MTOUCH_Button_Baseline_Get
 11454     0203  0020               	movlb	0	; select bank0
 11455     0204  0855               	movf	?_MTOUCH_Button_Baseline_Get+1,w
 11456     0205  00DB               	movwf	MTOUCH_DataStreamer_Service@u16temp_output+1
 11457     0206  0854               	movf	?_MTOUCH_Button_Baseline_Get,w
 11458     0207  00DA               	movwf	MTOUCH_DataStreamer_Service@u16temp_output
 11459                           
 11460                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 96:         datastreamer_output_byte(
      +                          (uint8_t) u16temp_output);
 11461     0208  085A               	movf	MTOUCH_DataStreamer_Service@u16temp_output,w
 11462     0209  3188  20CB  3181   	fcall	_datastreamer_output_byte
 11463                           
 11464                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 97:         datastreamer_output_byte(
      +                          (uint8_t) (u16temp_output >> 8u));
 11465     020C  0020               	movlb	0	; select bank0
 11466     020D  085B               	movf	MTOUCH_DataStreamer_Service@u16temp_output+1,w
 11467     020E  3188  20CB  3181   	fcall	_datastreamer_output_byte
 11468                           
 11469                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 99:         u16temp_output = (uint16_
      +                          t)((int16_t)MTOUCH_Button_Deviation_Get(count_bytes_out));
 11470     0211  0020               	movlb	0	; select bank0
 11471     0212  085C               	movf	MTOUCH_DataStreamer_Service@count_bytes_out,w	;volatile
 11472     0213  318A  22E2  3181   	fcall	_MTOUCH_Button_Deviation_Get
 11473     0216  0020               	movlb	0	; select bank0
 11474     0217  00DA               	movwf	MTOUCH_DataStreamer_Service@u16temp_output
 11475     0218  01DB               	clrf	MTOUCH_DataStreamer_Service@u16temp_output+1
 11476     0219  1BDA               	btfsc	MTOUCH_DataStreamer_Service@u16temp_output,7
 11477     021A  03DB               	decf	MTOUCH_DataStreamer_Service@u16temp_output+1,f
 11478                           
 11479                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 100:         datastreamer_output_byte
      +                          ((uint8_t) u16temp_output);
 11480     021B  085A               	movf	MTOUCH_DataStreamer_Service@u16temp_output,w
 11481     021C  3188  20CB  3181   	fcall	_datastreamer_output_byte
 11482                           
 11483                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 101:         datastreamer_output_byte
      +                          ((uint8_t) (u16temp_output >> 8u));
 11484     021F  0020               	movlb	0	; select bank0
 11485     0220  085B               	movf	MTOUCH_DataStreamer_Service@u16temp_output+1,w
 11486     0221  3188  20CB  3181   	fcall	_datastreamer_output_byte
 11487                           
 11488                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 103:         u16temp_output = MTOUCH_
      +                          Button_Scaling_Get(count_bytes_out);
 11489     0224  0020               	movlb	0	; select bank0
 11490     0225  085C               	movf	MTOUCH_DataStreamer_Service@count_bytes_out,w	;volatile
 11491     0226  318A  22F8  3181   	fcall	_MTOUCH_Button_Scaling_Get
 11492     0229  0020               	movlb	0	; select bank0
 11493     022A  00D7               	movwf	??_MTOUCH_DataStreamer_Service
 11494     022B  01D8               	clrf	??_MTOUCH_DataStreamer_Service+1
 11495     022C  0857               	movf	??_MTOUCH_DataStreamer_Service,w
 11496     022D  00DA               	movwf	MTOUCH_DataStreamer_Service@u16temp_output
 11497     022E  0858               	movf	??_MTOUCH_DataStreamer_Service+1,w
 11498     022F  00DB               	movwf	MTOUCH_DataStreamer_Service@u16temp_output+1
 11499                           
 11500                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 104:         datastreamer_output_byte
      +                          ((uint8_t) u16temp_output);
 11501     0230  085A               	movf	MTOUCH_DataStreamer_Service@u16temp_output,w
 11502     0231  3188  20CB  3181   	fcall	_datastreamer_output_byte
 11503                           
 11504                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 105:         datastreamer_output_byte
      +                          ((uint8_t) (u16temp_output >> 8u));
 11505     0234  0020               	movlb	0	; select bank0
 11506     0235  085B               	movf	MTOUCH_DataStreamer_Service@u16temp_output+1,w
 11507     0236  3188  20CB  3181   	fcall	_datastreamer_output_byte
 11508                           
 11509                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 107:         datastreamer_output_byte
      +                          (MTOUCH_Button_Threshold_Get(count_bytes_out));
 11510     0239  0020               	movlb	0	; select bank0
 11511     023A  085C               	movf	MTOUCH_DataStreamer_Service@count_bytes_out,w	;volatile
 11512     023B  318B  230E  3181   	fcall	_MTOUCH_Button_Threshold_Get
 11513     023E  3188  20CB  3181   	fcall	_datastreamer_output_byte
 11514                           
 11515                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 109:         datastreamer_output_byte
      +                          (MTOUCH_Button_isPressed(count_bytes_out));
 11516     0241  0020               	movlb	0	; select bank0
 11517     0242  085C               	movf	MTOUCH_DataStreamer_Service@count_bytes_out,w	;volatile
 11518     0243  318B  23E7  3181   	fcall	_MTOUCH_Button_isPressed
 11519     0246  3188  20CB  3181   	fcall	_datastreamer_output_byte
 11520     0249                     l4283:
 11521                           
 11522                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 111:     }
 11523     0249  3001               	movlw	1
 11524     024A  0020               	movlb	0	; select bank0
 11525     024B  00D7               	movwf	??_MTOUCH_DataStreamer_Service
 11526     024C  0857               	movf	??_MTOUCH_DataStreamer_Service,w
 11527     024D  07DC               	addwf	MTOUCH_DataStreamer_Service@count_bytes_out,f	;volatile
 11528     024E  29E6               	goto	l4277
 11529     024F                     l4287:
 11530                           
 11531                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 114:     for (count_bytes_out = 0u; c
      +                          ount_bytes_out < (1u); count_bytes_out++)
 11532     024F  01DC               	clrf	MTOUCH_DataStreamer_Service@count_bytes_out	;volatile
 11533     0250                     l4289:
 11534     0250  085C               	movf	MTOUCH_DataStreamer_Service@count_bytes_out,w	;volatile
 11535     0251  1903               	btfsc	3,2
 11536     0252  2A54               	goto	u3091
 11537     0253  2A55               	goto	u3090
 11538     0254                     u3091:
 11539     0254  2A56               	goto	l4293
 11540     0255                     u3090:
 11541     0255  2A6B               	goto	l4299
 11542     0256                     l4293:
 11543                           
 11544                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 115:     {;mcc_generated_files/mtouch
      +                          /mtouch_datastreamer.c: 116:         datastreamer_output_byte((uint8_t) MTOUCH_Sensor_Ad
      +                          ditionalCap_Get(count_bytes_out));
 11545     0256  085C               	movf	MTOUCH_DataStreamer_Service@count_bytes_out,w	;volatile
 11546     0257  318A  2279  3181   	fcall	_MTOUCH_Sensor_AdditionalCap_Get
 11547     025A  3188  20CB  3181   	fcall	_datastreamer_output_byte
 11548                           
 11549                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 117:         datastreamer_output_byte
      +                          ((uint8_t) MTOUCH_Sensor_AcquisitionTime_Get(count_bytes_out));
 11550     025D  0020               	movlb	0	; select bank0
 11551     025E  085C               	movf	MTOUCH_DataStreamer_Service@count_bytes_out,w	;volatile
 11552     025F  318A  2265  3181   	fcall	_MTOUCH_Sensor_AcquisitionTime_Get
 11553     0262  3188  20CB  3181   	fcall	_datastreamer_output_byte
 11554     0265                     l4295:
 11555                           
 11556                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 118:     }
 11557     0265  3001               	movlw	1
 11558     0266  0020               	movlb	0	; select bank0
 11559     0267  00D7               	movwf	??_MTOUCH_DataStreamer_Service
 11560     0268  0857               	movf	??_MTOUCH_DataStreamer_Service,w
 11561     0269  07DC               	addwf	MTOUCH_DataStreamer_Service@count_bytes_out,f	;volatile
 11562     026A  2A50               	goto	l4289
 11563     026B                     l4299:
 11564                           
 11565                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 122:     datastreamer_output_byte(seq
      +                          uence++);
 11566     026B  0839               	movf	MTOUCH_DataStreamer_Service@sequence,w
 11567     026C  3188  20CB  3181   	fcall	_datastreamer_output_byte
 11568     026F                     l4301:
 11569     026F  3001               	movlw	1
 11570     0270  0020               	movlb	0	; select bank0
 11571     0271  00D7               	movwf	??_MTOUCH_DataStreamer_Service
 11572     0272  0857               	movf	??_MTOUCH_DataStreamer_Service,w
 11573     0273  07B9               	addwf	MTOUCH_DataStreamer_Service@sequence,f
 11574     0274                     l4303:
 11575                           
 11576                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 125:     datastreamer_output_byte(~0x
      +                          55);
 11577     0274  30AA               	movlw	170
 11578     0275  3188  20CB  3181   	fcall	_datastreamer_output_byte
 11579     0278                     l986:
 11580     0278  0008               	return
 11581     0279                     __end_of_MTOUCH_DataStreamer_Service:
 11582                           
 11583                           	psect	text46
 11584     08CB                     __ptext46:	
 11585 ;; *************** function _datastreamer_output_byte *****************
 11586 ;; Defined at:
 11587 ;;		line 64 in file "mcc_generated_files/mtouch/mtouch_datastreamer.c"
 11588 ;; Parameters:    Size  Location     Type
 11589 ;;  data            1    wreg     unsigned char 
 11590 ;; Auto vars:     Size  Location     Type
 11591 ;;  data            1    2[BANK0 ] unsigned char 
 11592 ;; Return value:  Size  Location     Type
 11593 ;;                  1    wreg      void 
 11594 ;; Registers used:
 11595 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11596 ;; Tracked objects:
 11597 ;;		On entry : 0/0
 11598 ;;		On exit  : 0/0
 11599 ;;		Unchanged: 0/0
 11600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11602 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11604 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11605 ;;Total ram usage:        1 bytes
 11606 ;; Hardware stack levels used: 1
 11607 ;; Hardware stack levels required when called: 8
 11608 ;; This function calls:
 11609 ;;		_EUSART_Write
 11610 ;; This function is called by:
 11611 ;;		_MTOUCH_DataStreamer_Service
 11612 ;; This function uses a non-reentrant model
 11613 ;;
 11614                           
 11615     08CB                     _datastreamer_output_byte:	
 11616                           ;psect for function _datastreamer_output_byte
 11617                           
 11618                           
 11619                           ;incstack = 0
 11620                           ; Regs used in _datastreamer_output_byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 11621                           ;datastreamer_output_byte@data stored from wreg
 11622     08CB  0020               	movlb	0	; select bank0
 11623     08CC  00CE               	movwf	datastreamer_output_byte@data
 11624     08CD                     l4083:
 11625                           
 11626                           ;mcc_generated_files/mtouch/mtouch_datastreamer.c: 64: void __attribute__((inline)) data
      +                          streamer_output_byte(uint8_t data);mcc_generated_files/mtouch/mtouch_datastreamer.c: 65:
      +                           {;mcc_generated_files/mtouch/mtouch_datastreamer.c: 66:     EUSART_Write(data);
 11627     08CD  084E               	movf	datastreamer_output_byte@data,w
 11628     08CE  318D  2533  3188   	fcall	_EUSART_Write
 11629     08D1                     l974:
 11630     08D1  0008               	return
 11631     08D2                     __end_of_datastreamer_output_byte:
 11632                           
 11633                           	psect	text47
 11634     0D33                     __ptext47:	
 11635 ;; *************** function _EUSART_Write *****************
 11636 ;; Defined at:
 11637 ;;		line 173 in file "mcc_generated_files/eusart.c"
 11638 ;; Parameters:    Size  Location     Type
 11639 ;;  txData          1    wreg     unsigned char 
 11640 ;; Auto vars:     Size  Location     Type
 11641 ;;  txData          1    1[BANK0 ] unsigned char 
 11642 ;; Return value:  Size  Location     Type
 11643 ;;                  1    wreg      void 
 11644 ;; Registers used:
 11645 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11646 ;; Tracked objects:
 11647 ;;		On entry : 0/0
 11648 ;;		On exit  : 0/0
 11649 ;;		Unchanged: 0/0
 11650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11652 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11653 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11654 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11655 ;;Total ram usage:        2 bytes
 11656 ;; Hardware stack levels used: 1
 11657 ;; Hardware stack levels required when called: 7
 11658 ;; This function calls:
 11659 ;;		Nothing
 11660 ;; This function is called by:
 11661 ;;		_datastreamer_output_byte
 11662 ;; This function uses a non-reentrant model
 11663 ;;
 11664                           
 11665     0D33                     _EUSART_Write:	
 11666                           ;psect for function _EUSART_Write
 11667                           
 11668                           
 11669                           ;incstack = 0
 11670                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 11671                           ;EUSART_Write@txData stored from wreg
 11672     0D33  0020               	movlb	0	; select bank0
 11673     0D34  00CD               	movwf	EUSART_Write@txData
 11674     0D35                     l3791:
 11675     0D35                     l3793:	
 11676                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
 11677                           
 11678                           
 11679                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
 11680     0D35  0836               	movf	_eusartTxBufferRemaining,w	;volatile
 11681     0D36  1903               	btfsc	3,2
 11682     0D37  2D39               	goto	u2501
 11683     0D38  2D3A               	goto	u2500
 11684     0D39                     u2501:
 11685     0D39  2D35               	goto	l3793
 11686     0D3A                     u2500:
 11687     0D3A                     l1085:
 11688                           
 11689                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE3bits.TXIE)
 11690     0D3A  002E               	movlb	14	; select bank14
 11691     0D3B  1A19               	btfsc	25,4	;volatile
 11692     0D3C  2D3E               	goto	u2511
 11693     0D3D  2D3F               	goto	u2510
 11694     0D3E                     u2511:
 11695     0D3E  2D44               	goto	l1086
 11696     0D3F                     u2510:
 11697     0D3F                     l3795:
 11698                           
 11699                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TX1
      +                          REG = txData;
 11700     0D3F  0020               	movlb	0	; select bank0
 11701     0D40  084D               	movf	EUSART_Write@txData,w
 11702     0D41  0022               	movlb	2	; select bank2
 11703     0D42  009A               	movwf	26	;volatile
 11704                           
 11705                           ;mcc_generated_files/eusart.c: 182:     }
 11706     0D43  2D59               	goto	l3807
 11707     0D44                     l1086:	
 11708                           ;mcc_generated_files/eusart.c: 183:     else
 11709                           
 11710                           
 11711                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          3bits.TXIE = 0;
 11712     0D44  1219               	bcf	25,4	;volatile
 11713     0D45                     l3797:
 11714                           
 11715                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
 11716     0D45  0020               	movlb	0	; select bank0
 11717     0D46  0838               	movf	_eusartTxHead,w
 11718     0D47  3EA8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
 11719     0D48  0086               	movwf	6
 11720     0D49  0187               	clrf	7
 11721     0D4A  084D               	movf	EUSART_Write@txData,w
 11722     0D4B  0081               	movwf	1
 11723     0D4C                     l3799:
 11724     0D4C  3001               	movlw	1
 11725     0D4D  00CC               	movwf	??_EUSART_Write
 11726     0D4E  084C               	movf	??_EUSART_Write,w
 11727     0D4F  07B8               	addwf	_eusartTxHead,f	;volatile
 11728     0D50                     l3801:
 11729                           
 11730                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
 11731     0D50  3008               	movlw	8
 11732     0D51  0238               	subwf	_eusartTxHead,w	;volatile
 11733     0D52  1C03               	skipc
 11734     0D53  2D55               	goto	u2521
 11735     0D54  2D56               	goto	u2520
 11736     0D55                     u2521:
 11737     0D55  2D57               	goto	l3805
 11738     0D56                     u2520:
 11739     0D56                     l3803:
 11740                           
 11741                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
 11742     0D56  01B8               	clrf	_eusartTxHead	;volatile
 11743     0D57                     l3805:
 11744                           
 11745                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
 11746     0D57  3001               	movlw	1
 11747     0D58  02B6               	subwf	_eusartTxBufferRemaining,f	;volatile
 11748     0D59                     l3807:
 11749                           
 11750                           ;mcc_generated_files/eusart.c: 193:     PIE3bits.TXIE = 1;
 11751     0D59  002E               	movlb	14	; select bank14
 11752     0D5A  1619               	bsf	25,4	;volatile
 11753     0D5B                     l1089:
 11754     0D5B  0008               	return
 11755     0D5C                     __end_of_EUSART_Write:
 11756                           
 11757                           	psect	text48
 11758     0FAC                     __ptext48:	
 11759 ;; *************** function ___awmod *****************
 11760 ;; Defined at:
 11761 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
 11762 ;; Parameters:    Size  Location     Type
 11763 ;;  divisor         2    0[BANK0 ] int 
 11764 ;;  dividend        2    2[BANK0 ] int 
 11765 ;; Auto vars:     Size  Location     Type
 11766 ;;  sign            1    6[BANK0 ] unsigned char 
 11767 ;;  counter         1    5[BANK0 ] unsigned char 
 11768 ;; Return value:  Size  Location     Type
 11769 ;;                  2    0[BANK0 ] int 
 11770 ;; Registers used:
 11771 ;;		wreg, status,2, status,0
 11772 ;; Tracked objects:
 11773 ;;		On entry : 0/0
 11774 ;;		On exit  : 0/0
 11775 ;;		Unchanged: 0/0
 11776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11777 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11778 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11779 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11780 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11781 ;;Total ram usage:        7 bytes
 11782 ;; Hardware stack levels used: 1
 11783 ;; Hardware stack levels required when called: 7
 11784 ;; This function calls:
 11785 ;;		Nothing
 11786 ;; This function is called by:
 11787 ;;		_MTOUCH_DataStreamer_Service
 11788 ;; This function uses a non-reentrant model
 11789 ;;
 11790                           
 11791     0FAC                     ___awmod:	
 11792                           ;psect for function ___awmod
 11793                           
 11794     0FAC                     l4105:	
 11795                           ;incstack = 0
 11796                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11797                           
 11798     0FAC  0020               	movlb	0	; select bank0
 11799     0FAD  01D2               	clrf	___awmod@sign
 11800     0FAE                     l4107:
 11801     0FAE  1FCF               	btfss	___awmod@dividend+1,7
 11802     0FAF  2FB1               	goto	u2951
 11803     0FB0  2FB2               	goto	u2950
 11804     0FB1                     u2951:
 11805     0FB1  2FB9               	goto	l4113
 11806     0FB2                     u2950:
 11807     0FB2                     l4109:
 11808     0FB2  09CE               	comf	___awmod@dividend,f
 11809     0FB3  09CF               	comf	___awmod@dividend+1,f
 11810     0FB4  0ACE               	incf	___awmod@dividend,f
 11811     0FB5  1903               	skipnz
 11812     0FB6  0ACF               	incf	___awmod@dividend+1,f
 11813     0FB7                     l4111:
 11814     0FB7  01D2               	clrf	___awmod@sign
 11815     0FB8  0AD2               	incf	___awmod@sign,f
 11816     0FB9                     l4113:
 11817     0FB9  1FCD               	btfss	___awmod@divisor+1,7
 11818     0FBA  2FBC               	goto	u2961
 11819     0FBB  2FBD               	goto	u2960
 11820     0FBC                     u2961:
 11821     0FBC  2FC2               	goto	l4117
 11822     0FBD                     u2960:
 11823     0FBD                     l4115:
 11824     0FBD  09CC               	comf	___awmod@divisor,f
 11825     0FBE  09CD               	comf	___awmod@divisor+1,f
 11826     0FBF  0ACC               	incf	___awmod@divisor,f
 11827     0FC0  1903               	skipnz
 11828     0FC1  0ACD               	incf	___awmod@divisor+1,f
 11829     0FC2                     l4117:
 11830     0FC2  084C               	movf	___awmod@divisor,w
 11831     0FC3  044D               	iorwf	___awmod@divisor+1,w
 11832     0FC4  1903               	btfsc	3,2
 11833     0FC5  2FC7               	goto	u2971
 11834     0FC6  2FC8               	goto	u2970
 11835     0FC7                     u2971:
 11836     0FC7  2FF1               	goto	l4135
 11837     0FC8                     u2970:
 11838     0FC8                     l4119:
 11839     0FC8  01D1               	clrf	___awmod@counter
 11840     0FC9  0AD1               	incf	___awmod@counter,f
 11841     0FCA  2FD4               	goto	l4125
 11842     0FCB                     l4121:
 11843     0FCB  3001               	movlw	1
 11844     0FCC                     u2985:
 11845     0FCC  35CC               	lslf	___awmod@divisor,f
 11846     0FCD  0DCD               	rlf	___awmod@divisor+1,f
 11847     0FCE  0B89               	decfsz	9,f
 11848     0FCF  2FCC               	goto	u2985
 11849     0FD0                     l4123:
 11850     0FD0  3001               	movlw	1
 11851     0FD1  00D0               	movwf	??___awmod
 11852     0FD2  0850               	movf	??___awmod,w
 11853     0FD3  07D1               	addwf	___awmod@counter,f
 11854     0FD4                     l4125:
 11855     0FD4  1FCD               	btfss	___awmod@divisor+1,7
 11856     0FD5  2FD7               	goto	u2991
 11857     0FD6  2FD8               	goto	u2990
 11858     0FD7                     u2991:
 11859     0FD7  2FCB               	goto	l4121
 11860     0FD8                     u2990:
 11861     0FD8                     l4127:
 11862     0FD8  084D               	movf	___awmod@divisor+1,w
 11863     0FD9  024F               	subwf	___awmod@dividend+1,w
 11864     0FDA  1D03               	skipz
 11865     0FDB  2FDE               	goto	u3005
 11866     0FDC  084C               	movf	___awmod@divisor,w
 11867     0FDD  024E               	subwf	___awmod@dividend,w
 11868     0FDE                     u3005:
 11869     0FDE  1C03               	skipc
 11870     0FDF  2FE1               	goto	u3001
 11871     0FE0  2FE2               	goto	u3000
 11872     0FE1                     u3001:
 11873     0FE1  2FE6               	goto	l4131
 11874     0FE2                     u3000:
 11875     0FE2                     l4129:
 11876     0FE2  084C               	movf	___awmod@divisor,w
 11877     0FE3  02CE               	subwf	___awmod@dividend,f
 11878     0FE4  084D               	movf	___awmod@divisor+1,w
 11879     0FE5  3BCF               	subwfb	___awmod@dividend+1,f
 11880     0FE6                     l4131:
 11881     0FE6  3001               	movlw	1
 11882     0FE7                     u3015:
 11883     0FE7  36CD               	lsrf	___awmod@divisor+1,f
 11884     0FE8  0CCC               	rrf	___awmod@divisor,f
 11885     0FE9  0B89               	decfsz	9,f
 11886     0FEA  2FE7               	goto	u3015
 11887     0FEB                     l4133:
 11888     0FEB  3001               	movlw	1
 11889     0FEC  02D1               	subwf	___awmod@counter,f
 11890     0FED  1D03               	btfss	3,2
 11891     0FEE  2FF0               	goto	u3021
 11892     0FEF  2FF1               	goto	u3020
 11893     0FF0                     u3021:
 11894     0FF0  2FD8               	goto	l4127
 11895     0FF1                     u3020:
 11896     0FF1                     l4135:
 11897     0FF1  0852               	movf	___awmod@sign,w
 11898     0FF2  1903               	btfsc	3,2
 11899     0FF3  2FF5               	goto	u3031
 11900     0FF4  2FF6               	goto	u3030
 11901     0FF5                     u3031:
 11902     0FF5  2FFB               	goto	l4139
 11903     0FF6                     u3030:
 11904     0FF6                     l4137:
 11905     0FF6  09CE               	comf	___awmod@dividend,f
 11906     0FF7  09CF               	comf	___awmod@dividend+1,f
 11907     0FF8  0ACE               	incf	___awmod@dividend,f
 11908     0FF9  1903               	skipnz
 11909     0FFA  0ACF               	incf	___awmod@dividend+1,f
 11910     0FFB                     l4139:
 11911     0FFB  084F               	movf	___awmod@dividend+1,w
 11912     0FFC  00CD               	movwf	?___awmod+1
 11913     0FFD  084E               	movf	___awmod@dividend,w
 11914     0FFE  00CC               	movwf	?___awmod
 11915     0FFF                     l1448:
 11916     0FFF  0008               	return
 11917     1000                     __end_of___awmod:
 11918                           
 11919                           	psect	text49
 11920     0A79                     __ptext49:	
 11921 ;; *************** function _MTOUCH_Sensor_AdditionalCap_Get *****************
 11922 ;; Defined at:
 11923 ;;		line 908 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11924 ;; Parameters:    Size  Location     Type
 11925 ;;  name            1    wreg     enum E11929
 11926 ;; Auto vars:     Size  Location     Type
 11927 ;;  name            1    4[BANK0 ] enum E11929
 11928 ;; Return value:  Size  Location     Type
 11929 ;;                  1    wreg      unsigned char 
 11930 ;; Registers used:
 11931 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11932 ;; Tracked objects:
 11933 ;;		On entry : 0/0
 11934 ;;		On exit  : 0/0
 11935 ;;		Unchanged: 0/0
 11936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11938 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11940 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11941 ;;Total ram usage:        1 bytes
 11942 ;; Hardware stack levels used: 1
 11943 ;; Hardware stack levels required when called: 8
 11944 ;; This function calls:
 11945 ;;		___bmul
 11946 ;; This function is called by:
 11947 ;;		_MTOUCH_DataStreamer_Service
 11948 ;; This function uses a non-reentrant model
 11949 ;;
 11950                           
 11951     0A79                     _MTOUCH_Sensor_AdditionalCap_Get:	
 11952                           ;psect for function _MTOUCH_Sensor_AdditionalCap_Get
 11953                           
 11954                           
 11955                           ;incstack = 0
 11956                           ; Regs used in _MTOUCH_Sensor_AdditionalCap_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pcl
      +                          ath+cstack]
 11957                           ;MTOUCH_Sensor_AdditionalCap_Get@name stored from wreg
 11958     0A79  0020               	movlb	0	; select bank0
 11959     0A7A  00D0               	movwf	MTOUCH_Sensor_AdditionalCap_Get@name
 11960     0A7B                     l4059:
 11961                           
 11962                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 908: uint8_t MTOUCH_Sensor_AdditionalCap_Ge
      +                          t(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 909: {;mcc_
      +                          generated_files/mtouch/mtouch_sensor.c: 910:     if(name < (1u))
 11963     0A7B  0850               	movf	MTOUCH_Sensor_AdditionalCap_Get@name,w
 11964     0A7C  1D03               	btfss	3,2
 11965     0A7D  2A7F               	goto	u2921
 11966     0A7E  2A80               	goto	u2920
 11967     0A7F                     u2921:
 11968     0A7F  2A8B               	goto	l4067
 11969     0A80                     u2920:
 11970     0A80                     l4061:
 11971                           
 11972                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 911:        return (uint8_t)mtouch_sensor[n
      +                          ame].addcap;
 11973     0A80  3009               	movlw	9
 11974     0A81  00CC               	movwf	___bmul@multiplicand
 11975     0A82  0850               	movf	MTOUCH_Sensor_AdditionalCap_Get@name,w
 11976     0A83  318A  22CC  318A   	fcall	___bmul
 11977     0A86  3E48               	addlw	(low ((_mtouch_sensor| 0+5)))& (0+255)
 11978     0A87  0086               	movwf	6
 11979     0A88  0187               	clrf	7
 11980     0A89  0801               	movf	1,w
 11981     0A8A  2A8C               	goto	l918
 11982     0A8B                     l4067:
 11983                           
 11984                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 913:        return 0;
 11985     0A8B  3000               	movlw	0
 11986     0A8C                     l918:
 11987     0A8C  0008               	return
 11988     0A8D                     __end_of_MTOUCH_Sensor_AdditionalCap_Get:
 11989                           
 11990                           	psect	text50
 11991     0A65                     __ptext50:	
 11992 ;; *************** function _MTOUCH_Sensor_AcquisitionTime_Get *****************
 11993 ;; Defined at:
 11994 ;;		line 916 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11995 ;; Parameters:    Size  Location     Type
 11996 ;;  name            1    wreg     enum E11929
 11997 ;; Auto vars:     Size  Location     Type
 11998 ;;  name            1    4[BANK0 ] enum E11929
 11999 ;; Return value:  Size  Location     Type
 12000 ;;                  1    wreg      unsigned char 
 12001 ;; Registers used:
 12002 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12003 ;; Tracked objects:
 12004 ;;		On entry : 0/0
 12005 ;;		On exit  : 0/0
 12006 ;;		Unchanged: 0/0
 12007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12009 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12011 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12012 ;;Total ram usage:        1 bytes
 12013 ;; Hardware stack levels used: 1
 12014 ;; Hardware stack levels required when called: 8
 12015 ;; This function calls:
 12016 ;;		___bmul
 12017 ;; This function is called by:
 12018 ;;		_MTOUCH_DataStreamer_Service
 12019 ;; This function uses a non-reentrant model
 12020 ;;
 12021                           
 12022     0A65                     _MTOUCH_Sensor_AcquisitionTime_Get:	
 12023                           ;psect for function _MTOUCH_Sensor_AcquisitionTime_Get
 12024                           
 12025                           
 12026                           ;incstack = 0
 12027                           ; Regs used in _MTOUCH_Sensor_AcquisitionTime_Get: [wreg+fsr1l+fsr1h+status,2+status,0+p
      +                          clath+cstack]
 12028                           ;MTOUCH_Sensor_AcquisitionTime_Get@name stored from wreg
 12029     0A65  0020               	movlb	0	; select bank0
 12030     0A66  00D0               	movwf	MTOUCH_Sensor_AcquisitionTime_Get@name
 12031     0A67                     l4071:
 12032                           
 12033                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 916: uint8_t MTOUCH_Sensor_AcquisitionTime_
      +                          Get(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 917: {;mc
      +                          c_generated_files/mtouch/mtouch_sensor.c: 918:      if(name < (1u))
 12034     0A67  0850               	movf	MTOUCH_Sensor_AcquisitionTime_Get@name,w
 12035     0A68  1D03               	btfss	3,2
 12036     0A69  2A6B               	goto	u2931
 12037     0A6A  2A6C               	goto	u2930
 12038     0A6B                     u2931:
 12039     0A6B  2A77               	goto	l4079
 12040     0A6C                     u2930:
 12041     0A6C                     l4073:
 12042                           
 12043                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 919:         return (uint8_t)(mtouch_sensor
      +                          [name].acquisition_time >> (uint8_t)0);
 12044     0A6C  3009               	movlw	9
 12045     0A6D  00CC               	movwf	___bmul@multiplicand
 12046     0A6E  0850               	movf	MTOUCH_Sensor_AcquisitionTime_Get@name,w
 12047     0A6F  318A  22CC  318A   	fcall	___bmul
 12048     0A72  3E46               	addlw	(low ((_mtouch_sensor| 0+3)))& (0+255)
 12049     0A73  0086               	movwf	6
 12050     0A74  0187               	clrf	7
 12051     0A75  0801               	movf	1,w
 12052     0A76  2A78               	goto	l923
 12053     0A77                     l4079:
 12054                           
 12055                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 921:         return 0;
 12056     0A77  3000               	movlw	0
 12057     0A78                     l923:
 12058     0A78  0008               	return
 12059     0A79                     __end_of_MTOUCH_Sensor_AcquisitionTime_Get:
 12060                           
 12061                           	psect	text51
 12062     0BE7                     __ptext51:	
 12063 ;; *************** function _MTOUCH_Button_isPressed *****************
 12064 ;; Defined at:
 12065 ;;		line 354 in file "mcc_generated_files/mtouch/mtouch_button.c"
 12066 ;; Parameters:    Size  Location     Type
 12067 ;;  name            1    wreg     enum E11928
 12068 ;; Auto vars:     Size  Location     Type
 12069 ;;  name            1    1[BANK0 ] enum E11928
 12070 ;; Return value:  Size  Location     Type
 12071 ;;                  1    wreg      _Bool 
 12072 ;; Registers used:
 12073 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12074 ;; Tracked objects:
 12075 ;;		On entry : 0/0
 12076 ;;		On exit  : 0/0
 12077 ;;		Unchanged: 0/0
 12078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12080 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12081 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12082 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12083 ;;Total ram usage:        2 bytes
 12084 ;; Hardware stack levels used: 1
 12085 ;; Hardware stack levels required when called: 7
 12086 ;; This function calls:
 12087 ;;		Nothing
 12088 ;; This function is called by:
 12089 ;;		_MTOUCH_DataStreamer_Service
 12090 ;;		_MTOUCH_Button_Buttonmask_Get
 12091 ;;		_touch_example
 12092 ;; This function uses a non-reentrant model
 12093 ;;
 12094                           
 12095     0BE7                     _MTOUCH_Button_isPressed:	
 12096                           ;psect for function _MTOUCH_Button_isPressed
 12097                           
 12098                           
 12099                           ;incstack = 0
 12100                           ; Regs used in _MTOUCH_Button_isPressed: [wreg+fsr1l+fsr1h+status,2+status,0]
 12101                           ;MTOUCH_Button_isPressed@name stored from wreg
 12102     0BE7  0020               	movlb	0	; select bank0
 12103     0BE8  00CD               	movwf	MTOUCH_Button_isPressed@name
 12104     0BE9                     l3913:
 12105                           
 12106                           ;mcc_generated_files/mtouch/mtouch_button.c: 354: _Bool MTOUCH_Button_isPressed(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 355: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 356:     if(name < 1u)
 12107     0BE9  084D               	movf	MTOUCH_Button_isPressed@name,w
 12108     0BEA  1D03               	btfss	3,2
 12109     0BEB  2BED               	goto	u2691
 12110     0BEC  2BEE               	goto	u2690
 12111     0BED                     u2691:
 12112     0BED  2C02               	goto	l3921
 12113     0BEE                     u2690:
 12114     0BEE                     l3915:
 12115                           
 12116                           ;mcc_generated_files/mtouch/mtouch_button.c: 357:         return (_Bool)((mtouch_button[
      +                          name].state == MTOUCH_BUTTON_STATE_pressed) ? 1 : 0);
 12117     0BEE  084D               	movf	MTOUCH_Button_isPressed@name,w
 12118     0BEF  00CC               	movwf	??_MTOUCH_Button_isPressed
 12119     0BF0  3003               	movlw	3
 12120     0BF1                     u2705:
 12121     0BF1  35CC               	lslf	??_MTOUCH_Button_isPressed,f
 12122     0BF2  3EFF               	addlw	-1
 12123     0BF3  1D03               	skipz
 12124     0BF4  2BF1               	goto	u2705
 12125     0BF5  354C               	lslf	??_MTOUCH_Button_isPressed,w
 12126     0BF6  3EB2               	addlw	(low ((_mtouch_button| 0+2)))& (0+255)
 12127     0BF7  0086               	movwf	6
 12128     0BF8  0187               	clrf	7
 12129     0BF9  3002               	movlw	2
 12130     0BFA  0601               	xorwf	1,w
 12131     0BFB  1903               	btfsc	3,2
 12132     0BFC  2BFE               	goto	u2711
 12133     0BFD  2C00               	goto	u2710
 12134     0BFE                     u2711:
 12135     0BFE  3001               	movlw	1
 12136     0BFF  2C01               	goto	u2720
 12137     0C00                     u2710:
 12138     0C00  3000               	movlw	0
 12139     0C01                     u2720:
 12140     0C01  2C03               	goto	l270
 12141     0C02                     l3921:
 12142                           
 12143                           ;mcc_generated_files/mtouch/mtouch_button.c: 359:         return 0;
 12144     0C02  3000               	movlw	0
 12145     0C03                     l270:
 12146     0C03  0008               	return
 12147     0C04                     __end_of_MTOUCH_Button_isPressed:
 12148                           
 12149                           	psect	text52
 12150     0B0E                     __ptext52:	
 12151 ;; *************** function _MTOUCH_Button_Threshold_Get *****************
 12152 ;; Defined at:
 12153 ;;		line 304 in file "mcc_generated_files/mtouch/mtouch_button.c"
 12154 ;; Parameters:    Size  Location     Type
 12155 ;;  name            1    wreg     enum E11928
 12156 ;; Auto vars:     Size  Location     Type
 12157 ;;  name            1    1[BANK0 ] enum E11928
 12158 ;; Return value:  Size  Location     Type
 12159 ;;                  1    wreg      unsigned char 
 12160 ;; Registers used:
 12161 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12162 ;; Tracked objects:
 12163 ;;		On entry : 0/0
 12164 ;;		On exit  : 0/0
 12165 ;;		Unchanged: 0/0
 12166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12168 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12169 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12170 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12171 ;;Total ram usage:        2 bytes
 12172 ;; Hardware stack levels used: 1
 12173 ;; Hardware stack levels required when called: 7
 12174 ;; This function calls:
 12175 ;;		Nothing
 12176 ;; This function is called by:
 12177 ;;		_MTOUCH_DataStreamer_Service
 12178 ;; This function uses a non-reentrant model
 12179 ;;
 12180                           
 12181     0B0E                     _MTOUCH_Button_Threshold_Get:	
 12182                           ;psect for function _MTOUCH_Button_Threshold_Get
 12183                           
 12184                           
 12185                           ;incstack = 0
 12186                           ; Regs used in _MTOUCH_Button_Threshold_Get: [wreg+fsr1l+fsr1h+status,2+status,0]
 12187                           ;MTOUCH_Button_Threshold_Get@name stored from wreg
 12188     0B0E  0020               	movlb	0	; select bank0
 12189     0B0F  00CD               	movwf	MTOUCH_Button_Threshold_Get@name
 12190     0B10                     l3889:
 12191                           
 12192                           ;mcc_generated_files/mtouch/mtouch_button.c: 304: mtouch_button_threshold_t MTOUCH_Butto
      +                          n_Threshold_Get(enum mtouch_button_names name);mcc_generated_files/mtouch/mtouch_button.
      +                          c: 305: {;mcc_generated_files/mtouch/mtouch_button.c: 306:     if(name < 1u)
 12193     0B10  084D               	movf	MTOUCH_Button_Threshold_Get@name,w
 12194     0B11  1D03               	btfss	3,2
 12195     0B12  2B14               	goto	u2651
 12196     0B13  2B15               	goto	u2650
 12197     0B14                     u2651:
 12198     0B14  2B22               	goto	l3897
 12199     0B15                     u2650:
 12200     0B15                     l3891:
 12201                           
 12202                           ;mcc_generated_files/mtouch/mtouch_button.c: 307:         return mtouch_button[name].thr
      +                          eshold;
 12203     0B15  084D               	movf	MTOUCH_Button_Threshold_Get@name,w
 12204     0B16  00CC               	movwf	??_MTOUCH_Button_Threshold_Get
 12205     0B17  3003               	movlw	3
 12206     0B18                     u2665:
 12207     0B18  35CC               	lslf	??_MTOUCH_Button_Threshold_Get,f
 12208     0B19  3EFF               	addlw	-1
 12209     0B1A  1D03               	skipz
 12210     0B1B  2B18               	goto	u2665
 12211     0B1C  354C               	lslf	??_MTOUCH_Button_Threshold_Get,w
 12212     0B1D  3EBE               	addlw	(low ((_mtouch_button| 0+14)))& (0+255)
 12213     0B1E  0086               	movwf	6
 12214     0B1F  0187               	clrf	7
 12215     0B20  0801               	movf	1,w
 12216     0B21  2B23               	goto	l241
 12217     0B22                     l3897:
 12218                           
 12219                           ;mcc_generated_files/mtouch/mtouch_button.c: 309:         return (mtouch_button_threshol
      +                          d_t)0;
 12220     0B22  3000               	movlw	0
 12221     0B23                     l241:
 12222     0B23  0008               	return
 12223     0B24                     __end_of_MTOUCH_Button_Threshold_Get:
 12224                           
 12225                           	psect	text53
 12226     0AF8                     __ptext53:	
 12227 ;; *************** function _MTOUCH_Button_Scaling_Get *****************
 12228 ;; Defined at:
 12229 ;;		line 321 in file "mcc_generated_files/mtouch/mtouch_button.c"
 12230 ;; Parameters:    Size  Location     Type
 12231 ;;  name            1    wreg     enum E11928
 12232 ;; Auto vars:     Size  Location     Type
 12233 ;;  name            1    1[BANK0 ] enum E11928
 12234 ;; Return value:  Size  Location     Type
 12235 ;;                  1    wreg      unsigned char 
 12236 ;; Registers used:
 12237 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12238 ;; Tracked objects:
 12239 ;;		On entry : 0/0
 12240 ;;		On exit  : 0/0
 12241 ;;		Unchanged: 0/0
 12242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12244 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12245 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12246 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12247 ;;Total ram usage:        2 bytes
 12248 ;; Hardware stack levels used: 1
 12249 ;; Hardware stack levels required when called: 7
 12250 ;; This function calls:
 12251 ;;		Nothing
 12252 ;; This function is called by:
 12253 ;;		_MTOUCH_DataStreamer_Service
 12254 ;; This function uses a non-reentrant model
 12255 ;;
 12256                           
 12257     0AF8                     _MTOUCH_Button_Scaling_Get:	
 12258                           ;psect for function _MTOUCH_Button_Scaling_Get
 12259                           
 12260                           
 12261                           ;incstack = 0
 12262                           ; Regs used in _MTOUCH_Button_Scaling_Get: [wreg+fsr1l+fsr1h+status,2+status,0]
 12263                           ;MTOUCH_Button_Scaling_Get@name stored from wreg
 12264     0AF8  0020               	movlb	0	; select bank0
 12265     0AF9  00CD               	movwf	MTOUCH_Button_Scaling_Get@name
 12266     0AFA                     l3901:
 12267                           
 12268                           ;mcc_generated_files/mtouch/mtouch_button.c: 321: mtouch_button_scaling_t MTOUCH_Button_
      +                          Scaling_Get(enum mtouch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 3
      +                          22: {;mcc_generated_files/mtouch/mtouch_button.c: 323:     if(name < 1u)
 12269     0AFA  084D               	movf	MTOUCH_Button_Scaling_Get@name,w
 12270     0AFB  1D03               	btfss	3,2
 12271     0AFC  2AFE               	goto	u2671
 12272     0AFD  2AFF               	goto	u2670
 12273     0AFE                     u2671:
 12274     0AFE  2B0C               	goto	l3909
 12275     0AFF                     u2670:
 12276     0AFF                     l3903:
 12277                           
 12278                           ;mcc_generated_files/mtouch/mtouch_button.c: 324:         return mtouch_button[name].sca
      +                          ling;
 12279     0AFF  084D               	movf	MTOUCH_Button_Scaling_Get@name,w
 12280     0B00  00CC               	movwf	??_MTOUCH_Button_Scaling_Get
 12281     0B01  3003               	movlw	3
 12282     0B02                     u2685:
 12283     0B02  35CC               	lslf	??_MTOUCH_Button_Scaling_Get,f
 12284     0B03  3EFF               	addlw	-1
 12285     0B04  1D03               	skipz
 12286     0B05  2B02               	goto	u2685
 12287     0B06  354C               	lslf	??_MTOUCH_Button_Scaling_Get,w
 12288     0B07  3EBF               	addlw	(low ((_mtouch_button| 0+15)))& (0+255)
 12289     0B08  0086               	movwf	6
 12290     0B09  0187               	clrf	7
 12291     0B0A  0801               	movf	1,w
 12292     0B0B  2B0D               	goto	l251
 12293     0B0C                     l3909:
 12294                           
 12295                           ;mcc_generated_files/mtouch/mtouch_button.c: 326:         return (mtouch_button_scaling_
      +                          t)0;
 12296     0B0C  3000               	movlw	0
 12297     0B0D                     l251:
 12298     0B0D  0008               	return
 12299     0B0E                     __end_of_MTOUCH_Button_Scaling_Get:
 12300                           
 12301                           	psect	text54
 12302     0BCD                     __ptext54:	
 12303 ;; *************** function _MTOUCH_Button_Reading_Get *****************
 12304 ;; Defined at:
 12305 ;;		line 420 in file "mcc_generated_files/mtouch/mtouch_button.c"
 12306 ;; Parameters:    Size  Location     Type
 12307 ;;  name            1    wreg     enum E11928
 12308 ;; Auto vars:     Size  Location     Type
 12309 ;;  name            1    3[BANK0 ] enum E11928
 12310 ;; Return value:  Size  Location     Type
 12311 ;;                  2    0[BANK0 ] unsigned short 
 12312 ;; Registers used:
 12313 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12314 ;; Tracked objects:
 12315 ;;		On entry : 0/0
 12316 ;;		On exit  : 0/0
 12317 ;;		Unchanged: 0/0
 12318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12319 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12320 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12321 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12322 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12323 ;;Total ram usage:        4 bytes
 12324 ;; Hardware stack levels used: 1
 12325 ;; Hardware stack levels required when called: 7
 12326 ;; This function calls:
 12327 ;;		Nothing
 12328 ;; This function is called by:
 12329 ;;		_MTOUCH_DataStreamer_Service
 12330 ;; This function uses a non-reentrant model
 12331 ;;
 12332                           
 12333     0BCD                     _MTOUCH_Button_Reading_Get:	
 12334                           ;psect for function _MTOUCH_Button_Reading_Get
 12335                           
 12336                           
 12337                           ;incstack = 0
 12338                           ; Regs used in _MTOUCH_Button_Reading_Get: [wreg+fsr1l+fsr1h+status,2+status,0]
 12339                           ;MTOUCH_Button_Reading_Get@name stored from wreg
 12340     0BCD  0020               	movlb	0	; select bank0
 12341     0BCE  00CF               	movwf	MTOUCH_Button_Reading_Get@name
 12342     0BCF                     l3937:
 12343                           
 12344                           ;mcc_generated_files/mtouch/mtouch_button.c: 420: mtouch_button_reading_t MTOUCH_Button_
      +                          Reading_Get(enum mtouch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 4
      +                          21: {;mcc_generated_files/mtouch/mtouch_button.c: 422:     if(name < 1u)
 12345     0BCF  084F               	movf	MTOUCH_Button_Reading_Get@name,w
 12346     0BD0  1D03               	btfss	3,2
 12347     0BD1  2BD3               	goto	u2751
 12348     0BD2  2BD4               	goto	u2750
 12349     0BD3                     u2751:
 12350     0BD3  2BE4               	goto	l3945
 12351     0BD4                     u2750:
 12352     0BD4                     l3939:
 12353                           
 12354                           ;mcc_generated_files/mtouch/mtouch_button.c: 423:         return mtouch_button[name].rea
      +                          ding;
 12355     0BD4  084F               	movf	MTOUCH_Button_Reading_Get@name,w
 12356     0BD5  00CE               	movwf	??_MTOUCH_Button_Reading_Get
 12357     0BD6  3003               	movlw	3
 12358     0BD7                     u2765:
 12359     0BD7  35CE               	lslf	??_MTOUCH_Button_Reading_Get,f
 12360     0BD8  3EFF               	addlw	-1
 12361     0BD9  1D03               	skipz
 12362     0BDA  2BD7               	goto	u2765
 12363     0BDB  354E               	lslf	??_MTOUCH_Button_Reading_Get,w
 12364     0BDC  3EB3               	addlw	(low ((_mtouch_button| 0+3)))& (0+255)
 12365     0BDD  0086               	movwf	6
 12366     0BDE  0187               	clrf	7
 12367     0BDF  3F40               	moviw [0]fsr1
 12368     0BE0  00CC               	movwf	?_MTOUCH_Button_Reading_Get
 12369     0BE1  3F41               	moviw [1]fsr1
 12370     0BE2  00CD               	movwf	?_MTOUCH_Button_Reading_Get+1
 12371     0BE3  2BE6               	goto	l296
 12372     0BE4                     l3945:
 12373                           
 12374                           ;mcc_generated_files/mtouch/mtouch_button.c: 425:         return (mtouch_button_reading_
      +                          t)0;
 12375     0BE4  01CC               	clrf	?_MTOUCH_Button_Reading_Get
 12376     0BE5  01CD               	clrf	?_MTOUCH_Button_Reading_Get+1
 12377     0BE6                     l296:
 12378     0BE6  0008               	return
 12379     0BE7                     __end_of_MTOUCH_Button_Reading_Get:
 12380                           
 12381                           	psect	text55
 12382     0AE2                     __ptext55:	
 12383 ;; *************** function _MTOUCH_Button_Deviation_Get *****************
 12384 ;; Defined at:
 12385 ;;		line 371 in file "mcc_generated_files/mtouch/mtouch_button.c"
 12386 ;; Parameters:    Size  Location     Type
 12387 ;;  name            1    wreg     enum E11928
 12388 ;; Auto vars:     Size  Location     Type
 12389 ;;  name            1    1[BANK0 ] enum E11928
 12390 ;; Return value:  Size  Location     Type
 12391 ;;                  1    wreg      char 
 12392 ;; Registers used:
 12393 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12394 ;; Tracked objects:
 12395 ;;		On entry : 0/0
 12396 ;;		On exit  : 0/0
 12397 ;;		Unchanged: 0/0
 12398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12400 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12401 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12402 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12403 ;;Total ram usage:        2 bytes
 12404 ;; Hardware stack levels used: 1
 12405 ;; Hardware stack levels required when called: 7
 12406 ;; This function calls:
 12407 ;;		Nothing
 12408 ;; This function is called by:
 12409 ;;		_MTOUCH_DataStreamer_Service
 12410 ;; This function uses a non-reentrant model
 12411 ;;
 12412                           
 12413     0AE2                     _MTOUCH_Button_Deviation_Get:	
 12414                           ;psect for function _MTOUCH_Button_Deviation_Get
 12415                           
 12416                           
 12417                           ;incstack = 0
 12418                           ; Regs used in _MTOUCH_Button_Deviation_Get: [wreg+fsr1l+fsr1h+status,2+status,0]
 12419                           ;MTOUCH_Button_Deviation_Get@name stored from wreg
 12420     0AE2  0020               	movlb	0	; select bank0
 12421     0AE3  00CD               	movwf	MTOUCH_Button_Deviation_Get@name
 12422     0AE4                     l3925:
 12423                           
 12424                           ;mcc_generated_files/mtouch/mtouch_button.c: 371: mtouch_button_deviation_t MTOUCH_Butto
      +                          n_Deviation_Get(enum mtouch_button_names name);mcc_generated_files/mtouch/mtouch_button.
      +                          c: 372: {;mcc_generated_files/mtouch/mtouch_button.c: 373:     if(name < 1u)
 12425     0AE4  084D               	movf	MTOUCH_Button_Deviation_Get@name,w
 12426     0AE5  1D03               	btfss	3,2
 12427     0AE6  2AE8               	goto	u2731
 12428     0AE7  2AE9               	goto	u2730
 12429     0AE8                     u2731:
 12430     0AE8  2AF6               	goto	l3933
 12431     0AE9                     u2730:
 12432     0AE9                     l3927:
 12433                           
 12434                           ;mcc_generated_files/mtouch/mtouch_button.c: 374:         return mtouch_button[name].dev
      +                          iation;
 12435     0AE9  084D               	movf	MTOUCH_Button_Deviation_Get@name,w
 12436     0AEA  00CC               	movwf	??_MTOUCH_Button_Deviation_Get
 12437     0AEB  3003               	movlw	3
 12438     0AEC                     u2745:
 12439     0AEC  35CC               	lslf	??_MTOUCH_Button_Deviation_Get,f
 12440     0AED  3EFF               	addlw	-1
 12441     0AEE  1D03               	skipz
 12442     0AEF  2AEC               	goto	u2745
 12443     0AF0  354C               	lslf	??_MTOUCH_Button_Deviation_Get,w
 12444     0AF1  3EB9               	addlw	(low ((_mtouch_button| 0+9)))& (0+255)
 12445     0AF2  0086               	movwf	6
 12446     0AF3  0187               	clrf	7
 12447     0AF4  0801               	movf	1,w
 12448     0AF5  2AF7               	goto	l280
 12449     0AF6                     l3933:
 12450                           
 12451                           ;mcc_generated_files/mtouch/mtouch_button.c: 376:         return (mtouch_button_deviatio
      +                          n_t)0;
 12452     0AF6  3000               	movlw	0
 12453     0AF7                     l280:
 12454     0AF7  0008               	return
 12455     0AF8                     __end_of_MTOUCH_Button_Deviation_Get:
 12456                           
 12457                           	psect	text56
 12458     0A51                     __ptext56:	
 12459 ;; *************** function _MTOUCH_Button_Baseline_Get *****************
 12460 ;; Defined at:
 12461 ;;		line 477 in file "mcc_generated_files/mtouch/mtouch_button.c"
 12462 ;; Parameters:    Size  Location     Type
 12463 ;;  name            1    wreg     enum E11928
 12464 ;; Auto vars:     Size  Location     Type
 12465 ;;  name            1   10[BANK0 ] enum E11928
 12466 ;; Return value:  Size  Location     Type
 12467 ;;                  2    8[BANK0 ] unsigned short 
 12468 ;; Registers used:
 12469 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12470 ;; Tracked objects:
 12471 ;;		On entry : 0/0
 12472 ;;		On exit  : 0/0
 12473 ;;		Unchanged: 0/0
 12474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12475 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12476 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12478 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12479 ;;Total ram usage:        3 bytes
 12480 ;; Hardware stack levels used: 1
 12481 ;; Hardware stack levels required when called: 8
 12482 ;; This function calls:
 12483 ;;		_Button_Baseline_Get_helper
 12484 ;; This function is called by:
 12485 ;;		_MTOUCH_DataStreamer_Service
 12486 ;; This function uses a non-reentrant model
 12487 ;;
 12488                           
 12489     0A51                     _MTOUCH_Button_Baseline_Get:	
 12490                           ;psect for function _MTOUCH_Button_Baseline_Get
 12491                           
 12492                           
 12493                           ;incstack = 0
 12494                           ; Regs used in _MTOUCH_Button_Baseline_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 12495                           ;MTOUCH_Button_Baseline_Get@name stored from wreg
 12496     0A51  0020               	movlb	0	; select bank0
 12497     0A52  00D6               	movwf	MTOUCH_Button_Baseline_Get@name
 12498     0A53                     l3949:
 12499                           
 12500                           ;mcc_generated_files/mtouch/mtouch_button.c: 477: mtouch_button_reading_t MTOUCH_Button_
      +                          Baseline_Get(enum mtouch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 
      +                          478: {;mcc_generated_files/mtouch/mtouch_button.c: 479:     if(name < 1u)
 12501     0A53  0856               	movf	MTOUCH_Button_Baseline_Get@name,w
 12502     0A54  1D03               	btfss	3,2
 12503     0A55  2A57               	goto	u2771
 12504     0A56  2A58               	goto	u2770
 12505     0A57                     u2771:
 12506     0A57  2A62               	goto	l3957
 12507     0A58                     u2770:
 12508     0A58                     l3951:
 12509                           
 12510                           ;mcc_generated_files/mtouch/mtouch_button.c: 480:         return Button_Baseline_Get_hel
      +                          per(name);
 12511     0A58  0856               	movf	MTOUCH_Button_Baseline_Get@name,w
 12512     0A59  318C  245E  318A   	fcall	_Button_Baseline_Get_helper
 12513     0A5C  0020               	movlb	0	; select bank0
 12514     0A5D  084D               	movf	?_Button_Baseline_Get_helper+1,w
 12515     0A5E  00D5               	movwf	?_MTOUCH_Button_Baseline_Get+1
 12516     0A5F  084C               	movf	?_Button_Baseline_Get_helper,w
 12517     0A60  00D4               	movwf	?_MTOUCH_Button_Baseline_Get
 12518     0A61  2A64               	goto	l319
 12519     0A62                     l3957:
 12520                           
 12521                           ;mcc_generated_files/mtouch/mtouch_button.c: 482:         return (mtouch_button_reading_
      +                          t)0;
 12522     0A62  01D4               	clrf	?_MTOUCH_Button_Baseline_Get
 12523     0A63  01D5               	clrf	?_MTOUCH_Button_Baseline_Get+1
 12524     0A64                     l319:
 12525     0A64  0008               	return
 12526     0A65                     __end_of_MTOUCH_Button_Baseline_Get:
 12527                           
 12528                           	psect	text57
 12529     0C5E                     __ptext57:	
 12530 ;; *************** function _Button_Baseline_Get_helper *****************
 12531 ;; Defined at:
 12532 ;;		line 485 in file "mcc_generated_files/mtouch/mtouch_button.c"
 12533 ;; Parameters:    Size  Location     Type
 12534 ;;  name            1    wreg     enum E11928
 12535 ;; Auto vars:     Size  Location     Type
 12536 ;;  name            1    7[BANK0 ] enum E11928
 12537 ;; Return value:  Size  Location     Type
 12538 ;;                  2    0[BANK0 ] unsigned short 
 12539 ;; Registers used:
 12540 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12541 ;; Tracked objects:
 12542 ;;		On entry : 0/0
 12543 ;;		On exit  : 0/0
 12544 ;;		Unchanged: 0/0
 12545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12546 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12547 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12548 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12549 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12550 ;;Total ram usage:        8 bytes
 12551 ;; Hardware stack levels used: 1
 12552 ;; Hardware stack levels required when called: 7
 12553 ;; This function calls:
 12554 ;;		Nothing
 12555 ;; This function is called by:
 12556 ;;		_MTOUCH_Button_Baseline_Get
 12557 ;; This function uses a non-reentrant model
 12558 ;;
 12559                           
 12560     0C5E                     _Button_Baseline_Get_helper:	
 12561                           ;psect for function _Button_Baseline_Get_helper
 12562                           
 12563                           
 12564                           ;incstack = 0
 12565                           ; Regs used in _Button_Baseline_Get_helper: [wreg+fsr1l+fsr1h+status,2+status,0]
 12566                           ;Button_Baseline_Get_helper@name stored from wreg
 12567     0C5E  0020               	movlb	0	; select bank0
 12568     0C5F  00D3               	movwf	Button_Baseline_Get_helper@name
 12569     0C60                     l3585:
 12570                           
 12571                           ;mcc_generated_files/mtouch/mtouch_button.c: 485: static mtouch_button_reading_t Button_
      +                          Baseline_Get_helper(enum mtouch_button_names name);mcc_generated_files/mtouch/mtouch_but
      +                          ton.c: 486: {;mcc_generated_files/mtouch/mtouch_button.c: 487:     return (mtouch_button
      +                          _reading_t)((mtouch_button[name].baseline) >> ((uint8_t)4u));
 12572     0C60  0853               	movf	Button_Baseline_Get_helper@name,w
 12573     0C61  00CE               	movwf	??_Button_Baseline_Get_helper
 12574     0C62  3003               	movlw	3
 12575     0C63                     u2205:
 12576     0C63  35CE               	lslf	??_Button_Baseline_Get_helper,f
 12577     0C64  3EFF               	addlw	-1
 12578     0C65  1D03               	skipz
 12579     0C66  2C63               	goto	u2205
 12580     0C67  354E               	lslf	??_Button_Baseline_Get_helper,w
 12581     0C68  3EB5               	addlw	(low ((_mtouch_button| 0+5)))& (0+255)
 12582     0C69  0086               	movwf	6
 12583     0C6A  0187               	clrf	7
 12584     0C6B  3F40               	moviw [0]fsr1
 12585     0C6C  00CF               	movwf	??_Button_Baseline_Get_helper+1
 12586     0C6D  3F41               	moviw [1]fsr1
 12587     0C6E  00D0               	movwf	??_Button_Baseline_Get_helper+2
 12588     0C6F  3F42               	moviw [2]fsr1
 12589     0C70  00D1               	movwf	??_Button_Baseline_Get_helper+3
 12590     0C71  3F43               	moviw [3]fsr1
 12591     0C72  00D2               	movwf	??_Button_Baseline_Get_helper+4
 12592     0C73  3004               	movlw	4
 12593     0C74                     u2215:
 12594     0C74  36D2               	lsrf	??_Button_Baseline_Get_helper+4,f
 12595     0C75  0CD1               	rrf	??_Button_Baseline_Get_helper+3,f
 12596     0C76  0CD0               	rrf	??_Button_Baseline_Get_helper+2,f
 12597     0C77  0CCF               	rrf	??_Button_Baseline_Get_helper+1,f
 12598     0C78                     u2210:
 12599     0C78  0B89               	decfsz	9,f
 12600     0C79  2C74               	goto	u2215
 12601     0C7A  0850               	movf	??_Button_Baseline_Get_helper+2,w
 12602     0C7B  00CD               	movwf	?_Button_Baseline_Get_helper+1
 12603     0C7C  084F               	movf	??_Button_Baseline_Get_helper+1,w
 12604     0C7D  00CC               	movwf	?_Button_Baseline_Get_helper
 12605     0C7E                     l323:
 12606     0C7E  0008               	return
 12607     0C7F                     __end_of_Button_Baseline_Get_helper:
 12608                           
 12609                           	psect	text58
 12610     0985                     __ptext58:	
 12611 ;; *************** function _MTOUCH_Button_ServiceAll *****************
 12612 ;; Defined at:
 12613 ;;		line 173 in file "mcc_generated_files/mtouch/mtouch_button.c"
 12614 ;; Parameters:    Size  Location     Type
 12615 ;;		None
 12616 ;; Auto vars:     Size  Location     Type
 12617 ;;  button          1   21[BANK0 ] enum E11928
 12618 ;; Return value:  Size  Location     Type
 12619 ;;                  1    wreg      void 
 12620 ;; Registers used:
 12621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12622 ;; Tracked objects:
 12623 ;;		On entry : 0/0
 12624 ;;		On exit  : 0/0
 12625 ;;		Unchanged: 0/0
 12626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12628 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12629 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12630 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12631 ;;Total ram usage:        2 bytes
 12632 ;; Hardware stack levels used: 1
 12633 ;; Hardware stack levels required when called: 12
 12634 ;; This function calls:
 12635 ;;		_Button_Service
 12636 ;; This function is called by:
 12637 ;;		_MTOUCH_Service_Mainloop
 12638 ;; This function uses a non-reentrant model
 12639 ;;
 12640                           
 12641     0985                     _MTOUCH_Button_ServiceAll:	
 12642                           ;psect for function _MTOUCH_Button_ServiceAll
 12643                           
 12644     0985                     l4235:	
 12645                           ;incstack = 0
 12646                           ; Regs used in _MTOUCH_Button_ServiceAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12647                           
 12648                           
 12649                           ;mcc_generated_files/mtouch/mtouch_button.c: 175:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 178:     for (button = 0; button < 1u; button
      +                          ++)
 12650     0985  0020               	movlb	0	; select bank0
 12651     0986  01E1               	clrf	MTOUCH_Button_ServiceAll@button
 12652     0987                     l4241:
 12653                           
 12654                           ;mcc_generated_files/mtouch/mtouch_button.c: 179:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 180:         Button_Service(button);
 12655     0987  0861               	movf	MTOUCH_Button_ServiceAll@button,w
 12656     0988  318F  275A  3189   	fcall	_Button_Service
 12657     098B                     l4243:
 12658                           
 12659                           ;mcc_generated_files/mtouch/mtouch_button.c: 181:     }
 12660     098B  3001               	movlw	1
 12661     098C  0020               	movlb	0	; select bank0
 12662     098D  00E0               	movwf	??_MTOUCH_Button_ServiceAll
 12663     098E  0860               	movf	??_MTOUCH_Button_ServiceAll,w
 12664     098F  07E1               	addwf	MTOUCH_Button_ServiceAll@button,f
 12665     0990                     l4245:
 12666     0990  0861               	movf	MTOUCH_Button_ServiceAll@button,w
 12667     0991  1903               	btfsc	3,2
 12668     0992  2994               	goto	u3041
 12669     0993  2995               	goto	u3040
 12670     0994                     u3041:
 12671     0994  2987               	goto	l4241
 12672     0995                     u3040:
 12673     0995                     l203:
 12674     0995  0008               	return
 12675     0996                     __end_of_MTOUCH_Button_ServiceAll:
 12676                           
 12677                           	psect	text59
 12678     0F5A                     __ptext59:	
 12679 ;; *************** function _Button_Service *****************
 12680 ;; Defined at:
 12681 ;;		line 184 in file "mcc_generated_files/mtouch/mtouch_button.c"
 12682 ;; Parameters:    Size  Location     Type
 12683 ;;  name            1    wreg     enum E11928
 12684 ;; Auto vars:     Size  Location     Type
 12685 ;;  name            1   18[BANK0 ] enum E11928
 12686 ;;  button          1   19[BANK0 ] PTR struct .
 12687 ;;		 -> mtouch_button(16), 
 12688 ;; Return value:  Size  Location     Type
 12689 ;;                  1    wreg      void 
 12690 ;; Registers used:
 12691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12692 ;; Tracked objects:
 12693 ;;		On entry : 0/0
 12694 ;;		On exit  : 0/0
 12695 ;;		Unchanged: 0/0
 12696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12698 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12699 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12700 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12701 ;;Total ram usage:        3 bytes
 12702 ;; Hardware stack levels used: 1
 12703 ;; Hardware stack levels required when called: 11
 12704 ;; This function calls:
 12705 ;;		_Button_Deviation_Update
 12706 ;;		_Button_Reading_Update
 12707 ;;		_Button_State_Initializing
 12708 ;;		_Button_State_NotPressed
 12709 ;;		_Button_State_Pressed
 12710 ;;		_MTOUCH_Button_Initialize
 12711 ;;		_MTOUCH_Sensor_isCalibrated
 12712 ;;		_MTOUCH_Sensor_wasSampled
 12713 ;; This function is called by:
 12714 ;;		_MTOUCH_Button_ServiceAll
 12715 ;; This function uses a non-reentrant model
 12716 ;;
 12717                           
 12718     0F5A                     _Button_Service:	
 12719                           ;psect for function _Button_Service
 12720                           
 12721                           
 12722                           ;incstack = 0
 12723                           ; Regs used in _Button_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12724                           ;Button_Service@name stored from wreg
 12725     0F5A  0020               	movlb	0	; select bank0
 12726     0F5B  00DE               	movwf	Button_Service@name
 12727     0F5C                     l3873:
 12728                           
 12729                           ;mcc_generated_files/mtouch/mtouch_button.c: 184: static void Button_Service(enum mtouch
      +                          _button_names name);mcc_generated_files/mtouch/mtouch_button.c: 185: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 186:     mtouch_button_t* button = &mtouch_button[name];
 12730     0F5C  085E               	movf	Button_Service@name,w
 12731     0F5D  00DD               	movwf	??_Button_Service
 12732     0F5E  3003               	movlw	3
 12733     0F5F                     u2615:
 12734     0F5F  35DD               	lslf	??_Button_Service,f
 12735     0F60  3EFF               	addlw	-1
 12736     0F61  1D03               	skipz
 12737     0F62  2F5F               	goto	u2615
 12738     0F63  355D               	lslf	??_Button_Service,w
 12739     0F64  3EB0               	addlw	(low (_mtouch_button| 0))& (0+255)
 12740     0F65  00DF               	movwf	Button_Service@button
 12741     0F66                     l3875:
 12742                           
 12743                           ;mcc_generated_files/mtouch/mtouch_button.c: 188:     if (MTOUCH_Sensor_wasSampled(butto
      +                          n->sensor) && MTOUCH_Sensor_isCalibrated(button->sensor))
 12744     0F66  0A5F               	incf	Button_Service@button,w
 12745     0F67  0086               	movwf	6
 12746     0F68  0187               	clrf	7
 12747     0F69  0801               	movf	1,w
 12748     0F6A  318A  22A2  318F   	fcall	_MTOUCH_Sensor_wasSampled
 12749     0F6D  3A00               	xorlw	0
 12750     0F6E  1903               	skipnz
 12751     0F6F  2F71               	goto	u2621
 12752     0F70  2F72               	goto	u2620
 12753     0F71                     u2621:
 12754     0F71  2FAB               	goto	l208
 12755     0F72                     u2620:
 12756     0F72                     l3877:
 12757     0F72  0020               	movlb	0	; select bank0
 12758     0F73  0A5F               	incf	Button_Service@button,w
 12759     0F74  0086               	movwf	6
 12760     0F75  0187               	clrf	7
 12761     0F76  0801               	movf	1,w
 12762     0F77  318B  239B  318F   	fcall	_MTOUCH_Sensor_isCalibrated
 12763     0F7A  3A00               	xorlw	0
 12764     0F7B  1903               	skipnz
 12765     0F7C  2F7E               	goto	u2631
 12766     0F7D  2F7F               	goto	u2630
 12767     0F7E                     u2631:
 12768     0F7E  2FAB               	goto	l208
 12769     0F7F                     u2630:
 12770     0F7F                     l3879:
 12771                           
 12772                           ;mcc_generated_files/mtouch/mtouch_button.c: 189:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 190:         Button_Reading_Update(button);
 12773     0F7F  0020               	movlb	0	; select bank0
 12774     0F80  085F               	movf	Button_Service@button,w
 12775     0F81  3189  2196  318F   	fcall	_Button_Reading_Update
 12776                           
 12777                           ;mcc_generated_files/mtouch/mtouch_button.c: 191:         Button_Deviation_Update(button
      +                          );
 12778     0F84  0020               	movlb	0	; select bank0
 12779     0F85  085F               	movf	Button_Service@button,w
 12780     0F86  3186  263D  318F   	fcall	_Button_Deviation_Update
 12781     0F89                     l3881:
 12782                           
 12783                           ;mcc_generated_files/mtouch/mtouch_button.c: 193:         if (button->state >= (uint8_t)
      +                          (sizeof(Button_StateMachine)/sizeof(button_statemachine_state_t)))
 12784     0F89  0020               	movlb	0	; select bank0
 12785     0F8A  085F               	movf	Button_Service@button,w
 12786     0F8B  3E02               	addlw	2
 12787     0F8C  0086               	movwf	6
 12788     0F8D  0187               	clrf	7
 12789     0F8E  3003               	movlw	3
 12790     0F8F  0201               	subwf	1,w
 12791     0F90  1C03               	skipc
 12792     0F91  2F93               	goto	u2641
 12793     0F92  2F94               	goto	u2640
 12794     0F93                     u2641:
 12795     0F93  2F9B               	goto	l3885
 12796     0F94                     u2640:
 12797     0F94                     l3883:
 12798                           
 12799                           ;mcc_generated_files/mtouch/mtouch_button.c: 194:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 195:             MTOUCH_Button_Initialize(button->name);
 12800     0F94  085F               	movf	Button_Service@button,w
 12801     0F95  0086               	movwf	6
 12802     0F96  0187               	clrf	7
 12803     0F97  0801               	movf	1,w
 12804     0F98  318E  265D  318F   	fcall	_MTOUCH_Button_Initialize
 12805     0F9B                     l3885:
 12806                           
 12807                           ;mcc_generated_files/mtouch/mtouch_button.c: 197:         Button_StateMachine[(uint8_t)b
      +                          utton->state](button);
 12808     0F9B  0020               	movlb	0	; select bank0
 12809     0F9C  085F               	movf	Button_Service@button,w
 12810     0F9D  00D8               	movwf	Button_State_Pressed@button
 12811     0F9E  085F               	movf	Button_Service@button,w
 12812     0F9F  3E02               	addlw	2
 12813     0FA0  0086               	movwf	6
 12814     0FA1  0187               	clrf	7
 12815     0FA2  3501               	lslf	1,w
 12816     0FA3  3ED3               	addlw	(low (_Button_StateMachine| 0))& (0+255)
 12817     0FA4  0086               	movwf	6
 12818     0FA5  0187               	clrf	7
 12819     0FA6  3F41               	moviw [1]fsr1
 12820     0FA7  008A               	movwf	10
 12821     0FA8  3F40               	moviw [0]fsr1
 12822     0FA9  000A               	callw
 12823     0FAA  318F               	pagesel	$
 12824     0FAB                     l208:
 12825     0FAB  0008               	return
 12826     0FAC                     __end_of_Button_Service:
 12827                           
 12828                           	psect	text60
 12829     0AA2                     __ptext60:	
 12830 ;; *************** function _MTOUCH_Sensor_wasSampled *****************
 12831 ;; Defined at:
 12832 ;;		line 879 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12833 ;; Parameters:    Size  Location     Type
 12834 ;;  sensor          1    wreg     enum E11929
 12835 ;; Auto vars:     Size  Location     Type
 12836 ;;  sensor          1    4[BANK0 ] enum E11929
 12837 ;; Return value:  Size  Location     Type
 12838 ;;                  1    wreg      _Bool 
 12839 ;; Registers used:
 12840 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12841 ;; Tracked objects:
 12842 ;;		On entry : 0/0
 12843 ;;		On exit  : 0/0
 12844 ;;		Unchanged: 0/0
 12845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12849 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12850 ;;Total ram usage:        1 bytes
 12851 ;; Hardware stack levels used: 1
 12852 ;; Hardware stack levels required when called: 8
 12853 ;; This function calls:
 12854 ;;		___bmul
 12855 ;; This function is called by:
 12856 ;;		_Button_Service
 12857 ;;		_MTOUCH_Sensor_isSamplingComplete
 12858 ;;		_Sensor_scheduleNextScan
 12859 ;; This function uses a non-reentrant model
 12860 ;;
 12861                           
 12862     0AA2                     _MTOUCH_Sensor_wasSampled:	
 12863                           ;psect for function _MTOUCH_Sensor_wasSampled
 12864                           
 12865                           
 12866                           ;incstack = 0
 12867                           ; Regs used in _MTOUCH_Sensor_wasSampled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 12868                           ;MTOUCH_Sensor_wasSampled@sensor stored from wreg
 12869     0AA2  0020               	movlb	0	; select bank0
 12870     0AA3  00D0               	movwf	MTOUCH_Sensor_wasSampled@sensor
 12871     0AA4                     l3303:
 12872                           
 12873                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 879: _Bool MTOUCH_Sensor_wasSampled(enum mt
      +                          ouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 880: {;mcc_generat
      +                          ed_files/mtouch/mtouch_sensor.c: 881:     if(sensor < (1u))
 12874     0AA4  0850               	movf	MTOUCH_Sensor_wasSampled@sensor,w
 12875     0AA5  1D03               	btfss	3,2
 12876     0AA6  2AA8               	goto	u1831
 12877     0AA7  2AA9               	goto	u1830
 12878     0AA8                     u1831:
 12879     0AA8  2AB5               	goto	l3311
 12880     0AA9                     u1830:
 12881     0AA9                     l3305:
 12882                           
 12883                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 882:         return (_Bool)mtouch_sensor[se
      +                          nsor].sampled;
 12884     0AA9  3009               	movlw	9
 12885     0AAA  00CC               	movwf	___bmul@multiplicand
 12886     0AAB  0850               	movf	MTOUCH_Sensor_wasSampled@sensor,w
 12887     0AAC  318A  22CC  318A   	fcall	___bmul
 12888     0AAF  3E4B               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
 12889     0AB0  0086               	movwf	6
 12890     0AB1  0187               	clrf	7
 12891     0AB2  0C01               	rrf	1,w
 12892     0AB3  3901               	andlw	1
 12893     0AB4  2AB6               	goto	l904
 12894     0AB5                     l3311:
 12895                           
 12896                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 884:         return 0;
 12897     0AB5  3000               	movlw	0
 12898     0AB6                     l904:
 12899     0AB6  0008               	return
 12900     0AB7                     __end_of_MTOUCH_Sensor_wasSampled:
 12901                           
 12902                           	psect	text61
 12903     0B9B                     __ptext61:	
 12904 ;; *************** function _MTOUCH_Sensor_isCalibrated *****************
 12905 ;; Defined at:
 12906 ;;		line 831 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12907 ;; Parameters:    Size  Location     Type
 12908 ;;  sensor          1    wreg     enum E11929
 12909 ;; Auto vars:     Size  Location     Type
 12910 ;;  sensor          1    5[BANK0 ] enum E11929
 12911 ;; Return value:  Size  Location     Type
 12912 ;;                  1    wreg      _Bool 
 12913 ;; Registers used:
 12914 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12915 ;; Tracked objects:
 12916 ;;		On entry : 0/0
 12917 ;;		On exit  : 0/0
 12918 ;;		Unchanged: 0/0
 12919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12921 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12922 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12923 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12924 ;;Total ram usage:        2 bytes
 12925 ;; Hardware stack levels used: 1
 12926 ;; Hardware stack levels required when called: 8
 12927 ;; This function calls:
 12928 ;;		___bmul
 12929 ;; This function is called by:
 12930 ;;		_Button_Service
 12931 ;; This function uses a non-reentrant model
 12932 ;;
 12933                           
 12934     0B9B                     _MTOUCH_Sensor_isCalibrated:	
 12935                           ;psect for function _MTOUCH_Sensor_isCalibrated
 12936                           
 12937                           
 12938                           ;incstack = 0
 12939                           ; Regs used in _MTOUCH_Sensor_isCalibrated: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 12940                           ;MTOUCH_Sensor_isCalibrated@sensor stored from wreg
 12941     0B9B  0020               	movlb	0	; select bank0
 12942     0B9C  00D1               	movwf	MTOUCH_Sensor_isCalibrated@sensor
 12943     0B9D                     l3503:
 12944                           
 12945                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 831: _Bool MTOUCH_Sensor_isCalibrated(enum 
      +                          mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 832: {;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 833:     if(sensor < (1u))
 12946     0B9D  0851               	movf	MTOUCH_Sensor_isCalibrated@sensor,w
 12947     0B9E  1D03               	btfss	3,2
 12948     0B9F  2BA1               	goto	u2031
 12949     0BA0  2BA2               	goto	u2030
 12950     0BA1                     u2031:
 12951     0BA1  2BB2               	goto	l3511
 12952     0BA2                     u2030:
 12953     0BA2                     l3505:
 12954                           
 12955                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 834:         return (_Bool)mtouch_sensor[se
      +                          nsor].calibrated;
 12956     0BA2  3009               	movlw	9
 12957     0BA3  00CC               	movwf	___bmul@multiplicand
 12958     0BA4  0851               	movf	MTOUCH_Sensor_isCalibrated@sensor,w
 12959     0BA5  318A  22CC  318B   	fcall	___bmul
 12960     0BA8  3E4B               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
 12961     0BA9  0086               	movwf	6
 12962     0BAA  0187               	clrf	7
 12963     0BAB  0C01               	rrf	1,w
 12964     0BAC  0020               	movlb	0	; select bank0
 12965     0BAD  00D0               	movwf	??_MTOUCH_Sensor_isCalibrated
 12966     0BAE  0CD0               	rrf	??_MTOUCH_Sensor_isCalibrated,f
 12967     0BAF  0C50               	rrf	??_MTOUCH_Sensor_isCalibrated,w
 12968     0BB0  3901               	andlw	1
 12969     0BB1  2BB3               	goto	l882
 12970     0BB2                     l3511:
 12971                           
 12972                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 836:         return 0;
 12973     0BB2  3000               	movlw	0
 12974     0BB3                     l882:
 12975     0BB3  0008               	return
 12976     0BB4                     __end_of_MTOUCH_Sensor_isCalibrated:
 12977                           
 12978                           	psect	text62
 12979     048F                     __ptext62:	
 12980 ;; *************** function _Button_State_NotPressed *****************
 12981 ;; Defined at:
 12982 ;;		line 221 in file "mcc_generated_files/mtouch/mtouch_button.c"
 12983 ;; Parameters:    Size  Location     Type
 12984 ;;  button          1   12[BANK0 ] PTR struct .
 12985 ;;		 -> mtouch_button(16), 
 12986 ;; Auto vars:     Size  Location     Type
 12987 ;;		None
 12988 ;; Return value:  Size  Location     Type
 12989 ;;                  1    wreg      void 
 12990 ;; Registers used:
 12991 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12992 ;; Tracked objects:
 12993 ;;		On entry : 0/0
 12994 ;;		On exit  : 0/0
 12995 ;;		Unchanged: 0/0
 12996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12997 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12999 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13000 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13001 ;;Total ram usage:        3 bytes
 13002 ;; Hardware stack levels used: 1
 13003 ;; Hardware stack levels required when called: 10
 13004 ;; This function calls:
 13005 ;;		_Button_Baseline_Update
 13006 ;;		_Button_DefaultCallback
 13007 ;;		_MTOUCH_Button_Initialize
 13008 ;; This function is called by:
 13009 ;;		_Button_Service
 13010 ;; This function uses a non-reentrant model
 13011 ;;
 13012                           
 13013     048F                     _Button_State_NotPressed:	
 13014                           ;psect for function _Button_State_NotPressed
 13015                           
 13016     048F                     l3549:	
 13017                           ;incstack = 0
 13018                           ; Regs used in _Button_State_NotPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 13019                           
 13020                           
 13021                           ;mcc_generated_files/mtouch/mtouch_button.c: 221: static void Button_State_NotPressed(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 222: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 224:     if ((button->deviation) < (mtouch_button_deviatio
      +                          n_t)(-button->threshold))
 13022     048F  0020               	movlb	0	; select bank0
 13023     0490  0858               	movf	Button_State_NotPressed@button,w
 13024     0491  3E09               	addlw	9
 13025     0492  0086               	movwf	6
 13026     0493  0187               	clrf	7
 13027     0494  0801               	movf	1,w
 13028     0495  3A80               	xorlw	128
 13029     0496  00D9               	movwf	??_Button_State_NotPressed
 13030     0497  0858               	movf	Button_State_NotPressed@button,w
 13031     0498  3E0E               	addlw	14
 13032     0499  0086               	movwf	6
 13033     049A  0187               	clrf	7
 13034     049B  0301               	decf	1,w
 13035     049C  3AFF               	xorlw	255
 13036     049D  3A80               	xorlw	128
 13037     049E  02D9               	subwf	??_Button_State_NotPressed,f
 13038     049F  1803               	skipnc
 13039     04A0  2CA2               	goto	u2121
 13040     04A1  2CA3               	goto	u2120
 13041     04A2                     u2121:
 13042     04A2  2CCC               	goto	l3557
 13043     04A3                     u2120:
 13044     04A3                     l3551:
 13045                           
 13046                           ;mcc_generated_files/mtouch/mtouch_button.c: 225:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 226:         (button->counter)++;
 13047     04A3  0858               	movf	Button_State_NotPressed@button,w
 13048     04A4  3E0A               	addlw	10
 13049     04A5  0086               	movwf	6
 13050     04A6  0187               	clrf	7
 13051     04A7  3001               	movlw	1
 13052     04A8  0781               	addwf	1,f
 13053     04A9  3141               	addfsr 1,1
 13054     04AA  1803               	skipnc
 13055     04AB  0A81               	incf	1,f
 13056                           
 13057                           ;mcc_generated_files/mtouch/mtouch_button.c: 227:         if ((button->counter) > (mtouc
      +                          h_button_statecounter_t)((mtouch_button_statecounter_t)64u))
 13058     04AC  0858               	movf	Button_State_NotPressed@button,w
 13059     04AD  3E0A               	addlw	10
 13060     04AE  0086               	movwf	6
 13061     04AF  0187               	clrf	7
 13062     04B0  3F40               	moviw [0]fsr1
 13063     04B1  00D9               	movwf	??_Button_State_NotPressed
 13064     04B2  3F41               	moviw [1]fsr1
 13065     04B3  00DA               	movwf	??_Button_State_NotPressed+1
 13066     04B4  3000               	movlw	0
 13067     04B5  025A               	subwf	??_Button_State_NotPressed+1,w
 13068     04B6  3041               	movlw	65
 13069     04B7  1903               	skipnz
 13070     04B8  0259               	subwf	??_Button_State_NotPressed,w
 13071     04B9  1C03               	skipc
 13072     04BA  2CBC               	goto	u2131
 13073     04BB  2CBD               	goto	u2130
 13074     04BC                     u2131:
 13075     04BC  2D03               	goto	l219
 13076     04BD                     u2130:
 13077     04BD                     l3553:
 13078                           
 13079                           ;mcc_generated_files/mtouch/mtouch_button.c: 228:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 229:             button->counter = (mtouch_button_statecounter_t)0;
 13080     04BD  0858               	movf	Button_State_NotPressed@button,w
 13081     04BE  3E0A               	addlw	10
 13082     04BF  0086               	movwf	6
 13083     04C0  0187               	clrf	7
 13084     04C1  3000               	movlw	0
 13085     04C2  3FC0               	movwi [0]fsr1
 13086     04C3  3FC1               	movwi [1]fsr1
 13087     04C4                     l3555:
 13088                           
 13089                           ;mcc_generated_files/mtouch/mtouch_button.c: 230:             MTOUCH_Button_Initialize(b
      +                          utton->name);
 13090     04C4  0858               	movf	Button_State_NotPressed@button,w
 13091     04C5  0086               	movwf	6
 13092     04C6  0187               	clrf	7
 13093     04C7  0801               	movf	1,w
 13094     04C8  318E  265D  3184   	fcall	_MTOUCH_Button_Initialize
 13095     04CB  2D03               	goto	l219
 13096     04CC                     l3557:
 13097     04CC  0858               	movf	Button_State_NotPressed@button,w
 13098     04CD  3E09               	addlw	9
 13099     04CE  0086               	movwf	6
 13100     04CF  0187               	clrf	7
 13101     04D0  0801               	movf	1,w
 13102     04D1  00D9               	movwf	??_Button_State_NotPressed
 13103     04D2  01DA               	clrf	??_Button_State_NotPressed+1
 13104     04D3  1BD9               	btfsc	??_Button_State_NotPressed,7
 13105     04D4  03DA               	decf	??_Button_State_NotPressed+1,f
 13106     04D5  0858               	movf	Button_State_NotPressed@button,w
 13107     04D6  3E0E               	addlw	14
 13108     04D7  0086               	movwf	6
 13109     04D8  0187               	clrf	7
 13110     04D9  085A               	movf	??_Button_State_NotPressed+1,w
 13111     04DA  3A80               	xorlw	128
 13112     04DB  3C80               	sublw	128
 13113     04DC  1D03               	skipz
 13114     04DD  2CE0               	goto	u2145
 13115     04DE  0859               	movf	??_Button_State_NotPressed,w
 13116     04DF  0201               	subwf	1,w
 13117     04E0                     u2145:
 13118     04E0  1803               	skipnc
 13119     04E1  2CE3               	goto	u2141
 13120     04E2  2CE4               	goto	u2140
 13121     04E3                     u2141:
 13122     04E3  2CFB               	goto	l3563
 13123     04E4                     u2140:
 13124     04E4                     l3559:
 13125                           
 13126                           ;mcc_generated_files/mtouch/mtouch_button.c: 235:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 237:         button->state = MTOUCH_BUTTON_STATE_pressed;
 13127     04E4  0020               	movlb	0	; select bank0
 13128     04E5  0858               	movf	Button_State_NotPressed@button,w
 13129     04E6  3E02               	addlw	2
 13130     04E7  0086               	movwf	6
 13131     04E8  0187               	clrf	7
 13132     04E9  3002               	movlw	2
 13133     04EA  0081               	movwf	1
 13134                           
 13135                           ;mcc_generated_files/mtouch/mtouch_button.c: 238:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
 13136     04EB  0858               	movf	Button_State_NotPressed@button,w
 13137     04EC  3E0A               	addlw	10
 13138     04ED  0086               	movwf	6
 13139     04EE  0187               	clrf	7
 13140     04EF  3000               	movlw	0
 13141     04F0  3FC0               	movwi [0]fsr1
 13142     04F1  3FC1               	movwi [1]fsr1
 13143     04F2                     l3561:
 13144                           
 13145                           ;mcc_generated_files/mtouch/mtouch_button.c: 239:         callback_pressed(button->name)
      +                          ;
 13146     04F2  0858               	movf	Button_State_NotPressed@button,w
 13147     04F3  0086               	movwf	6
 13148     04F4  0187               	clrf	7
 13149     04F5  0801               	movf	1,w
 13150     04F6  00CC               	movwf	Button_DefaultCallback@button
 13151     04F7  3188  208B  3184   	fcall	_Button_DefaultCallback
 13152                           
 13153                           ;mcc_generated_files/mtouch/mtouch_button.c: 240:     }
 13154     04FA  2D03               	goto	l219
 13155     04FB                     l3563:
 13156                           
 13157                           ;mcc_generated_files/mtouch/mtouch_button.c: 242:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 244:         button->counter = (mtouch_button_statecounter_t)0;
 13158     04FB  0020               	movlb	0	; select bank0
 13159     04FC  0858               	movf	Button_State_NotPressed@button,w
 13160     04FD  3E0A               	addlw	10
 13161     04FE  0086               	movwf	6
 13162     04FF  0187               	clrf	7
 13163     0500  3000               	movlw	0
 13164     0501  3FC0               	movwi [0]fsr1
 13165     0502  3FC1               	movwi [1]fsr1
 13166     0503                     l219:
 13167                           
 13168                           ;mcc_generated_files/mtouch/mtouch_button.c: 249:     (button->baseline_count)++;
 13169     0503  0020               	movlb	0	; select bank0
 13170     0504  0858               	movf	Button_State_NotPressed@button,w
 13171     0505  3E0C               	addlw	12
 13172     0506  0086               	movwf	6
 13173     0507  0187               	clrf	7
 13174     0508  3001               	movlw	1
 13175     0509  0781               	addwf	1,f
 13176     050A  3141               	addfsr 1,1
 13177     050B  1803               	skipnc
 13178     050C  0A81               	incf	1,f
 13179                           
 13180                           ;mcc_generated_files/mtouch/mtouch_button.c: 250:     if ((button->baseline_count) == ((
      +                          mtouch_button_baselinecounter_t)64u))
 13181     050D  0858               	movf	Button_State_NotPressed@button,w
 13182     050E  3E0C               	addlw	12
 13183     050F  0086               	movwf	6
 13184     0510  0187               	clrf	7
 13185     0511  0016               	moviw fsr1++
 13186     0512  3A40               	xorlw	64
 13187     0513  00D9               	movwf	??_Button_State_NotPressed
 13188     0514  0016               	moviw fsr1++
 13189     0515  04D9               	iorwf	??_Button_State_NotPressed,f
 13190     0516  1D03               	btfss	3,2
 13191     0517  2D19               	goto	u2151
 13192     0518  2D1A               	goto	u2150
 13193     0519                     u2151:
 13194     0519  2D25               	goto	l223
 13195     051A                     u2150:
 13196     051A                     l3565:
 13197                           
 13198                           ;mcc_generated_files/mtouch/mtouch_button.c: 251:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 252:         button->baseline_count = (mtouch_button_baselinecounter_t)0;
 13199     051A  0858               	movf	Button_State_NotPressed@button,w
 13200     051B  3E0C               	addlw	12
 13201     051C  0086               	movwf	6
 13202     051D  0187               	clrf	7
 13203     051E  3000               	movlw	0
 13204     051F  3FC0               	movwi [0]fsr1
 13205     0520  3FC1               	movwi [1]fsr1
 13206     0521                     l3567:
 13207                           
 13208                           ;mcc_generated_files/mtouch/mtouch_button.c: 253:         Button_Baseline_Update(button)
      +                          ;
 13209     0521  0858               	movf	Button_State_NotPressed@button,w
 13210     0522  3185  25B3  3184   	fcall	_Button_Baseline_Update
 13211     0525                     l223:
 13212     0525  0008               	return
 13213     0526                     __end_of_Button_State_NotPressed:
 13214                           
 13215                           	psect	text63
 13216     0740                     __ptext63:	
 13217 ;; *************** function _Button_State_Initializing *****************
 13218 ;; Defined at:
 13219 ;;		line 201 in file "mcc_generated_files/mtouch/mtouch_button.c"
 13220 ;; Parameters:    Size  Location     Type
 13221 ;;  button          1   12[BANK0 ] PTR struct .
 13222 ;;		 -> mtouch_button(16), 
 13223 ;; Auto vars:     Size  Location     Type
 13224 ;;		None
 13225 ;; Return value:  Size  Location     Type
 13226 ;;                  1    wreg      void 
 13227 ;; Registers used:
 13228 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13229 ;; Tracked objects:
 13230 ;;		On entry : 0/0
 13231 ;;		On exit  : 0/0
 13232 ;;		Unchanged: 0/0
 13233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13234 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13236 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13237 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13238 ;;Total ram usage:        5 bytes
 13239 ;; Hardware stack levels used: 1
 13240 ;; Hardware stack levels required when called: 10
 13241 ;; This function calls:
 13242 ;;		_Button_Baseline_Initialize
 13243 ;;		_Button_Baseline_Update
 13244 ;; This function is called by:
 13245 ;;		_Button_Service
 13246 ;; This function uses a non-reentrant model
 13247 ;;
 13248                           
 13249     0740                     _Button_State_Initializing:	
 13250                           ;psect for function _Button_State_Initializing
 13251                           
 13252     0740                     l3537:	
 13253                           ;incstack = 0
 13254                           ; Regs used in _Button_State_Initializing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 13255                           
 13256                           
 13257                           ;mcc_generated_files/mtouch/mtouch_button.c: 201: static void Button_State_Initializing(
      +                          mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 202: {;mcc_generate
      +                          d_files/mtouch/mtouch_button.c: 204:     if ((button->counter) <= (mtouch_button_stateco
      +                          unter_t)((mtouch_button_baselinecounter_t)16u)/2)
 13258     0740  0020               	movlb	0	; select bank0
 13259     0741  0858               	movf	Button_State_Initializing@button,w
 13260     0742  3E0A               	addlw	10
 13261     0743  0086               	movwf	6
 13262     0744  0187               	clrf	7
 13263     0745  3F40               	moviw [0]fsr1
 13264     0746  00D9               	movwf	??_Button_State_Initializing
 13265     0747  3F41               	moviw [1]fsr1
 13266     0748  00DA               	movwf	??_Button_State_Initializing+1
 13267     0749  3000               	movlw	0
 13268     074A  025A               	subwf	??_Button_State_Initializing+1,w
 13269     074B  3009               	movlw	9
 13270     074C  1903               	skipnz
 13271     074D  0259               	subwf	??_Button_State_Initializing,w
 13272     074E  1803               	skipnc
 13273     074F  2F51               	goto	u2091
 13274     0750  2F52               	goto	u2090
 13275     0751                     u2091:
 13276     0751  2F57               	goto	l3541
 13277     0752                     u2090:
 13278     0752                     l3539:
 13279                           
 13280                           ;mcc_generated_files/mtouch/mtouch_button.c: 205:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 206:         Button_Baseline_Initialize(button);
 13281     0752  0858               	movf	Button_State_Initializing@button,w
 13282     0753  318E  2603  3187   	fcall	_Button_Baseline_Initialize
 13283                           
 13284                           ;mcc_generated_files/mtouch/mtouch_button.c: 207:     } else {
 13285     0756  2F5B               	goto	l3543
 13286     0757                     l3541:
 13287                           
 13288                           ;mcc_generated_files/mtouch/mtouch_button.c: 208:         Button_Baseline_Update(button)
      +                          ;
 13289     0757  0858               	movf	Button_State_Initializing@button,w
 13290     0758  3185  25B3  3187   	fcall	_Button_Baseline_Update
 13291     075B                     l3543:
 13292                           
 13293                           ;mcc_generated_files/mtouch/mtouch_button.c: 212:     (button->counter)++;
 13294     075B  0020               	movlb	0	; select bank0
 13295     075C  0858               	movf	Button_State_Initializing@button,w
 13296     075D  3E0A               	addlw	10
 13297     075E  0086               	movwf	6
 13298     075F  0187               	clrf	7
 13299     0760  3001               	movlw	1
 13300     0761  0781               	addwf	1,f
 13301     0762  3141               	addfsr 1,1
 13302     0763  1803               	skipnc
 13303     0764  0A81               	incf	1,f
 13304     0765                     l3545:
 13305                           
 13306                           ;mcc_generated_files/mtouch/mtouch_button.c: 213:     if ((button->counter) >= (mtouch_b
      +                          utton_statecounter_t)((mtouch_button_baselinecounter_t)16u))
 13307     0765  0858               	movf	Button_State_Initializing@button,w
 13308     0766  3E0A               	addlw	10
 13309     0767  0086               	movwf	6
 13310     0768  0187               	clrf	7
 13311     0769  3F40               	moviw [0]fsr1
 13312     076A  00D9               	movwf	??_Button_State_Initializing
 13313     076B  3F41               	moviw [1]fsr1
 13314     076C  00DA               	movwf	??_Button_State_Initializing+1
 13315     076D  3000               	movlw	0
 13316     076E  025A               	subwf	??_Button_State_Initializing+1,w
 13317     076F  3010               	movlw	16
 13318     0770  1903               	skipnz
 13319     0771  0259               	subwf	??_Button_State_Initializing,w
 13320     0772  1C03               	skipc
 13321     0773  2F75               	goto	u2101
 13322     0774  2F76               	goto	u2100
 13323     0775                     u2101:
 13324     0775  2F9E               	goto	l214
 13325     0776                     u2100:
 13326     0776                     l3547:
 13327                           
 13328                           ;mcc_generated_files/mtouch/mtouch_button.c: 214:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 215:         button->reading = (mtouch_button_reading_t)((button->baseline)>
      +                          >((uint8_t)4u));
 13329     0776  0858               	movf	Button_State_Initializing@button,w
 13330     0777  3E05               	addlw	5
 13331     0778  0086               	movwf	6
 13332     0779  0187               	clrf	7
 13333     077A  3F40               	moviw [0]fsr1
 13334     077B  00D9               	movwf	??_Button_State_Initializing
 13335     077C  3F41               	moviw [1]fsr1
 13336     077D  00DA               	movwf	??_Button_State_Initializing+1
 13337     077E  3F42               	moviw [2]fsr1
 13338     077F  00DB               	movwf	??_Button_State_Initializing+2
 13339     0780  3F43               	moviw [3]fsr1
 13340     0781  00DC               	movwf	??_Button_State_Initializing+3
 13341     0782  3004               	movlw	4
 13342     0783                     u2115:
 13343     0783  36DC               	lsrf	??_Button_State_Initializing+3,f
 13344     0784  0CDB               	rrf	??_Button_State_Initializing+2,f
 13345     0785  0CDA               	rrf	??_Button_State_Initializing+1,f
 13346     0786  0CD9               	rrf	??_Button_State_Initializing,f
 13347     0787                     u2110:
 13348     0787  0B89               	decfsz	9,f
 13349     0788  2F83               	goto	u2115
 13350     0789  0858               	movf	Button_State_Initializing@button,w
 13351     078A  3E03               	addlw	3
 13352     078B  0086               	movwf	6
 13353     078C  0187               	clrf	7
 13354     078D  0859               	movf	??_Button_State_Initializing,w
 13355     078E  3FC0               	movwi [0]fsr1
 13356     078F  085A               	movf	??_Button_State_Initializing+1,w
 13357     0790  3FC1               	movwi [1]fsr1
 13358                           
 13359                           ;mcc_generated_files/mtouch/mtouch_button.c: 216:         button->state = MTOUCH_BUTTON_
      +                          STATE_notPressed;
 13360     0791  0858               	movf	Button_State_Initializing@button,w
 13361     0792  3E02               	addlw	2
 13362     0793  0086               	movwf	6
 13363     0794  0187               	clrf	7
 13364     0795  0181               	clrf	1
 13365     0796  0A81               	incf	1,f
 13366                           
 13367                           ;mcc_generated_files/mtouch/mtouch_button.c: 217:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
 13368     0797  0858               	movf	Button_State_Initializing@button,w
 13369     0798  3E0A               	addlw	10
 13370     0799  0086               	movwf	6
 13371     079A  0187               	clrf	7
 13372     079B  3000               	movlw	0
 13373     079C  3FC0               	movwi [0]fsr1
 13374     079D  3FC1               	movwi [1]fsr1
 13375     079E                     l214:
 13376     079E  0008               	return
 13377     079F                     __end_of_Button_State_Initializing:
 13378                           
 13379                           	psect	text64
 13380     079F                     __ptext64:	
 13381 ;; *************** function _Button_State_Pressed *****************
 13382 ;; Defined at:
 13383 ;;		line 257 in file "mcc_generated_files/mtouch/mtouch_button.c"
 13384 ;; Parameters:    Size  Location     Type
 13385 ;;  button          1   12[BANK0 ] PTR struct .
 13386 ;;		 -> mtouch_button(16), 
 13387 ;; Auto vars:     Size  Location     Type
 13388 ;;		None
 13389 ;; Return value:  Size  Location     Type
 13390 ;;                  1    wreg      void 
 13391 ;; Registers used:
 13392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13393 ;; Tracked objects:
 13394 ;;		On entry : 0/0
 13395 ;;		On exit  : 0/0
 13396 ;;		Unchanged: 0/0
 13397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13398 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13400 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13401 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13402 ;;Total ram usage:        3 bytes
 13403 ;; Hardware stack levels used: 1
 13404 ;; Hardware stack levels required when called: 10
 13405 ;; This function calls:
 13406 ;;		_Button_DefaultCallback
 13407 ;;		_MTOUCH_Button_Initialize
 13408 ;; This function is called by:
 13409 ;;		_Button_Service
 13410 ;; This function uses a non-reentrant model
 13411 ;;
 13412                           
 13413     079F                     _Button_State_Pressed:	
 13414                           ;psect for function _Button_State_Pressed
 13415                           
 13416     079F                     l3569:	
 13417                           ;incstack = 0
 13418                           ; Regs used in _Button_State_Pressed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13419                           
 13420                           
 13421                           ;mcc_generated_files/mtouch/mtouch_button.c: 257: static void Button_State_Pressed(mtouc
      +                          h_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 258: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 260:     if ((button->counter) >= ((mtouch_button_statecounte
      +                          r_t)1000u))
 13422     079F  0020               	movlb	0	; select bank0
 13423     07A0  0858               	movf	Button_State_Pressed@button,w
 13424     07A1  3E0A               	addlw	10
 13425     07A2  0086               	movwf	6
 13426     07A3  0187               	clrf	7
 13427     07A4  3F40               	moviw [0]fsr1
 13428     07A5  00D9               	movwf	??_Button_State_Pressed
 13429     07A6  3F41               	moviw [1]fsr1
 13430     07A7  00DA               	movwf	??_Button_State_Pressed+1
 13431     07A8  3003               	movlw	3
 13432     07A9  025A               	subwf	??_Button_State_Pressed+1,w
 13433     07AA  30E8               	movlw	232
 13434     07AB  1903               	skipnz
 13435     07AC  0259               	subwf	??_Button_State_Pressed,w
 13436     07AD  1C03               	skipc
 13437     07AE  2FB0               	goto	u2161
 13438     07AF  2FB1               	goto	u2160
 13439     07B0                     u2161:
 13440     07B0  2FC2               	goto	l3573
 13441     07B1                     u2160:
 13442     07B1                     l3571:
 13443                           
 13444                           ;mcc_generated_files/mtouch/mtouch_button.c: 261:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 262:         MTOUCH_Button_Initialize(button->name);
 13445     07B1  0858               	movf	Button_State_Pressed@button,w
 13446     07B2  0086               	movwf	6
 13447     07B3  0187               	clrf	7
 13448     07B4  0801               	movf	1,w
 13449     07B5  318E  265D  3187   	fcall	_MTOUCH_Button_Initialize
 13450                           
 13451                           ;mcc_generated_files/mtouch/mtouch_button.c: 263:         callback_notPressed(button->na
      +                          me);
 13452     07B8  0020               	movlb	0	; select bank0
 13453     07B9  0858               	movf	Button_State_Pressed@button,w
 13454     07BA  0086               	movwf	6
 13455     07BB  0187               	clrf	7
 13456     07BC  0801               	movf	1,w
 13457     07BD  00CC               	movwf	Button_DefaultCallback@button
 13458     07BE  3188  208B  3187   	fcall	_Button_DefaultCallback
 13459                           
 13460                           ;mcc_generated_files/mtouch/mtouch_button.c: 264:     }
 13461     07C1  2FF6               	goto	l229
 13462     07C2                     l3573:
 13463     07C2  0858               	movf	Button_State_Pressed@button,w
 13464     07C3  3E09               	addlw	9
 13465     07C4  0086               	movwf	6
 13466     07C5  0187               	clrf	7
 13467     07C6  0801               	movf	1,w
 13468     07C7  3A80               	xorlw	128
 13469     07C8  00D9               	movwf	??_Button_State_Pressed
 13470     07C9  0858               	movf	Button_State_Pressed@button,w
 13471     07CA  3E0E               	addlw	14
 13472     07CB  0086               	movwf	6
 13473     07CC  0187               	clrf	7
 13474     07CD  0858               	movf	Button_State_Pressed@button,w
 13475     07CE  3E0E               	addlw	14
 13476     07CF  0084               	movwf	4
 13477     07D0  0185               	clrf	5
 13478     07D1  3600               	lsrf	0,w
 13479     07D2  0201               	subwf	1,w
 13480     07D3  3A80               	xorlw	128
 13481     07D4  02D9               	subwf	??_Button_State_Pressed,f
 13482     07D5  1803               	skipnc
 13483     07D6  2FD8               	goto	u2171
 13484     07D7  2FD9               	goto	u2170
 13485     07D8                     u2171:
 13486     07D8  2FF6               	goto	l229
 13487     07D9                     u2170:
 13488     07D9                     l3575:
 13489                           
 13490                           ;mcc_generated_files/mtouch/mtouch_button.c: 268:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 269:         button->state = MTOUCH_BUTTON_STATE_notPressed;
 13491     07D9  0858               	movf	Button_State_Pressed@button,w
 13492     07DA  3E02               	addlw	2
 13493     07DB  0086               	movwf	6
 13494     07DC  0187               	clrf	7
 13495     07DD  0181               	clrf	1
 13496     07DE  0A81               	incf	1,f
 13497                           
 13498                           ;mcc_generated_files/mtouch/mtouch_button.c: 270:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
 13499     07DF  0858               	movf	Button_State_Pressed@button,w
 13500     07E0  3E0A               	addlw	10
 13501     07E1  0086               	movwf	6
 13502     07E2  0187               	clrf	7
 13503     07E3  3000               	movlw	0
 13504     07E4  3FC0               	movwi [0]fsr1
 13505     07E5  3FC1               	movwi [1]fsr1
 13506                           
 13507                           ;mcc_generated_files/mtouch/mtouch_button.c: 271:         button->baseline_count = (mtou
      +                          ch_button_baselinecounter_t)((0xffff))-((mtouch_button_baselinecounter_t)1024u);
 13508     07E6  0858               	movf	Button_State_Pressed@button,w
 13509     07E7  3E0C               	addlw	12
 13510     07E8  0086               	movwf	6
 13511     07E9  0187               	clrf	7
 13512     07EA  30FF               	movlw	255
 13513     07EB  3FC0               	movwi [0]fsr1
 13514     07EC  30FB               	movlw	251
 13515     07ED  3FC1               	movwi [1]fsr1
 13516     07EE                     l3577:
 13517                           
 13518                           ;mcc_generated_files/mtouch/mtouch_button.c: 272:         callback_notPressed(button->na
      +                          me);
 13519     07EE  0858               	movf	Button_State_Pressed@button,w
 13520     07EF  0086               	movwf	6
 13521     07F0  0187               	clrf	7
 13522     07F1  0801               	movf	1,w
 13523     07F2  00CC               	movwf	Button_DefaultCallback@button
 13524     07F3  3188  208B  3187   	fcall	_Button_DefaultCallback
 13525     07F6                     l229:
 13526     07F6  0008               	return
 13527     07F7                     __end_of_Button_State_Pressed:
 13528                           
 13529                           	psect	text65
 13530     0E5D                     __ptext65:	
 13531 ;; *************** function _MTOUCH_Button_Initialize *****************
 13532 ;; Defined at:
 13533 ;;		line 143 in file "mcc_generated_files/mtouch/mtouch_button.c"
 13534 ;; Parameters:    Size  Location     Type
 13535 ;;  name            1    wreg     enum E11928
 13536 ;; Auto vars:     Size  Location     Type
 13537 ;;  name            1    6[BANK0 ] enum E11928
 13538 ;;  button          1    7[BANK0 ] PTR struct .
 13539 ;;		 -> mtouch_button(16), 
 13540 ;; Return value:  Size  Location     Type
 13541 ;;                  1    wreg      void 
 13542 ;; Registers used:
 13543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13544 ;; Tracked objects:
 13545 ;;		On entry : 0/0
 13546 ;;		On exit  : 0/0
 13547 ;;		Unchanged: 0/0
 13548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13550 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13551 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13552 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13553 ;;Total ram usage:        3 bytes
 13554 ;; Hardware stack levels used: 1
 13555 ;; Hardware stack levels required when called: 9
 13556 ;; This function calls:
 13557 ;;		_MTOUCH_Sensor_Calibrate
 13558 ;; This function is called by:
 13559 ;;		_MTOUCH_Button_InitializeAll
 13560 ;;		_Button_Service
 13561 ;;		_Button_State_NotPressed
 13562 ;;		_Button_State_Pressed
 13563 ;; This function uses a non-reentrant model
 13564 ;;
 13565                           
 13566     0E5D                     _MTOUCH_Button_Initialize:	
 13567                           ;psect for function _MTOUCH_Button_Initialize
 13568                           
 13569                           
 13570                           ;incstack = 0
 13571                           ; Regs used in _MTOUCH_Button_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 13572                           ;MTOUCH_Button_Initialize@name stored from wreg
 13573     0E5D  0020               	movlb	0	; select bank0
 13574     0E5E  00D2               	movwf	MTOUCH_Button_Initialize@name
 13575     0E5F                     l3291:
 13576                           
 13577                           ;mcc_generated_files/mtouch/mtouch_button.c: 143: void MTOUCH_Button_Initialize(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 144: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 145:     mtouch_button_t* button = &mtouch_button[name];
 13578     0E5F  0852               	movf	MTOUCH_Button_Initialize@name,w
 13579     0E60  00D1               	movwf	??_MTOUCH_Button_Initialize
 13580     0E61  3003               	movlw	3
 13581     0E62                     u1825:
 13582     0E62  35D1               	lslf	??_MTOUCH_Button_Initialize,f
 13583     0E63  3EFF               	addlw	-1
 13584     0E64  1D03               	skipz
 13585     0E65  2E62               	goto	u1825
 13586     0E66  3551               	lslf	??_MTOUCH_Button_Initialize,w
 13587     0E67  3EB0               	addlw	(low (_mtouch_button| 0))& (0+255)
 13588     0E68  00D3               	movwf	MTOUCH_Button_Initialize@button
 13589     0E69                     l3293:
 13590                           
 13591                           ;mcc_generated_files/mtouch/mtouch_button.c: 147:     button->state = MTOUCH_BUTTON_STAT
      +                          E_initializing;
 13592     0E69  0853               	movf	MTOUCH_Button_Initialize@button,w
 13593     0E6A  3E02               	addlw	2
 13594     0E6B  0086               	movwf	6
 13595     0E6C  0187               	clrf	7
 13596     0E6D  0181               	clrf	1
 13597     0E6E                     l3295:
 13598                           
 13599                           ;mcc_generated_files/mtouch/mtouch_button.c: 148:     button->baseline = (mtouch_button_
      +                          baseline_t)0;
 13600     0E6E  0853               	movf	MTOUCH_Button_Initialize@button,w
 13601     0E6F  3E05               	addlw	5
 13602     0E70  0086               	movwf	6
 13603     0E71  0187               	clrf	7
 13604     0E72  3000               	movlw	0
 13605     0E73  3FC0               	movwi [0]fsr1
 13606     0E74  3000               	movlw	0
 13607     0E75  3FC1               	movwi [1]fsr1
 13608     0E76  3FC2               	movwi [2]fsr1
 13609     0E77  3FC3               	movwi [3]fsr1
 13610     0E78                     l3297:
 13611                           
 13612                           ;mcc_generated_files/mtouch/mtouch_button.c: 149:     button->counter = (mtouch_button_s
      +                          tatecounter_t)0;
 13613     0E78  0853               	movf	MTOUCH_Button_Initialize@button,w
 13614     0E79  3E0A               	addlw	10
 13615     0E7A  0086               	movwf	6
 13616     0E7B  0187               	clrf	7
 13617     0E7C  3000               	movlw	0
 13618     0E7D  3FC0               	movwi [0]fsr1
 13619     0E7E  3FC1               	movwi [1]fsr1
 13620     0E7F                     l3299:
 13621                           
 13622                           ;mcc_generated_files/mtouch/mtouch_button.c: 150:     button->baseline_count = (mtouch_b
      +                          utton_baselinecounter_t)0;
 13623     0E7F  0853               	movf	MTOUCH_Button_Initialize@button,w
 13624     0E80  3E0C               	addlw	12
 13625     0E81  0086               	movwf	6
 13626     0E82  0187               	clrf	7
 13627     0E83  3000               	movlw	0
 13628     0E84  3FC0               	movwi [0]fsr1
 13629     0E85  3FC1               	movwi [1]fsr1
 13630     0E86                     l3301:
 13631                           
 13632                           ;mcc_generated_files/mtouch/mtouch_button.c: 152:     MTOUCH_Sensor_Calibrate(button->se
      +                          nsor);
 13633     0E86  0A53               	incf	MTOUCH_Button_Initialize@button,w
 13634     0E87  0086               	movwf	6
 13635     0E88  0187               	clrf	7
 13636     0E89  0801               	movf	1,w
 13637     0E8A  3189  21A8  318E   	fcall	_MTOUCH_Sensor_Calibrate
 13638     0E8D                     l193:
 13639     0E8D  0008               	return
 13640     0E8E                     __end_of_MTOUCH_Button_Initialize:
 13641                           
 13642                           	psect	text66
 13643     09A8                     __ptext66:	
 13644 ;; *************** function _MTOUCH_Sensor_Calibrate *****************
 13645 ;; Defined at:
 13646 ;;		line 823 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 13647 ;; Parameters:    Size  Location     Type
 13648 ;;  sensor          1    wreg     enum E11929
 13649 ;; Auto vars:     Size  Location     Type
 13650 ;;  sensor          1    4[BANK0 ] enum E11929
 13651 ;; Return value:  Size  Location     Type
 13652 ;;                  1    wreg      void 
 13653 ;; Registers used:
 13654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13655 ;; Tracked objects:
 13656 ;;		On entry : 0/0
 13657 ;;		On exit  : 0/0
 13658 ;;		Unchanged: 0/0
 13659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13661 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13663 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13664 ;;Total ram usage:        1 bytes
 13665 ;; Hardware stack levels used: 1
 13666 ;; Hardware stack levels required when called: 8
 13667 ;; This function calls:
 13668 ;;		___bmul
 13669 ;; This function is called by:
 13670 ;;		_MTOUCH_Button_Initialize
 13671 ;;		_MTOUCH_Sensor_Initialize
 13672 ;; This function uses a non-reentrant model
 13673 ;;
 13674                           
 13675     09A8                     _MTOUCH_Sensor_Calibrate:	
 13676                           ;psect for function _MTOUCH_Sensor_Calibrate
 13677                           
 13678                           
 13679                           ;incstack = 0
 13680                           ; Regs used in _MTOUCH_Sensor_Calibrate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 13681                           ;MTOUCH_Sensor_Calibrate@sensor stored from wreg
 13682     09A8  0020               	movlb	0	; select bank0
 13683     09A9  00D0               	movwf	MTOUCH_Sensor_Calibrate@sensor
 13684     09AA                     l3261:
 13685                           
 13686                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 823: void MTOUCH_Sensor_Calibrate(enum mtou
      +                          ch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 824: {;mcc_generated
      +                          _files/mtouch/mtouch_sensor.c: 825:     if(sensor < (1u))
 13687     09AA  0850               	movf	MTOUCH_Sensor_Calibrate@sensor,w
 13688     09AB  1D03               	btfss	3,2
 13689     09AC  29AE               	goto	u1781
 13690     09AD  29AF               	goto	u1780
 13691     09AE                     u1781:
 13692     09AE  29B9               	goto	l878
 13693     09AF                     u1780:
 13694     09AF                     l3263:
 13695                           
 13696                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 826:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 827:         mtouch_sensor[sensor].calibrated = 0;
 13697     09AF  3009               	movlw	9
 13698     09B0  00CC               	movwf	___bmul@multiplicand
 13699     09B1  0850               	movf	MTOUCH_Sensor_Calibrate@sensor,w
 13700     09B2  318A  22CC  3189   	fcall	___bmul
 13701     09B5  3E4B               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
 13702     09B6  0086               	movwf	6
 13703     09B7  0187               	clrf	7
 13704     09B8  1181               	bcf	1,3
 13705     09B9                     l878:
 13706     09B9  0008               	return
 13707     09BA                     __end_of_MTOUCH_Sensor_Calibrate:
 13708                           
 13709                           	psect	text67
 13710     088B                     __ptext67:	
 13711 ;; *************** function _Button_DefaultCallback *****************
 13712 ;; Defined at:
 13713 ;;		line 507 in file "mcc_generated_files/mtouch/mtouch_button.c"
 13714 ;; Parameters:    Size  Location     Type
 13715 ;;  button          1    0[BANK0 ] enum E11928
 13716 ;; Auto vars:     Size  Location     Type
 13717 ;;		None
 13718 ;; Return value:  Size  Location     Type
 13719 ;;                  1    wreg      void 
 13720 ;; Registers used:
 13721 ;;		None
 13722 ;; Tracked objects:
 13723 ;;		On entry : 0/0
 13724 ;;		On exit  : 0/0
 13725 ;;		Unchanged: 0/0
 13726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13727 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13730 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13731 ;;Total ram usage:        1 bytes
 13732 ;; Hardware stack levels used: 1
 13733 ;; Hardware stack levels required when called: 7
 13734 ;; This function calls:
 13735 ;;		Nothing
 13736 ;; This function is called by:
 13737 ;;		_Button_State_NotPressed
 13738 ;;		_Button_State_Pressed
 13739 ;; This function uses a non-reentrant model
 13740 ;;
 13741                           
 13742     088B                     _Button_DefaultCallback:	
 13743                           ;psect for function _Button_DefaultCallback
 13744                           
 13745     088B                     l331:	
 13746                           ;incstack = 0
 13747                           ; Regs used in _Button_DefaultCallback: []
 13748                           
 13749     088B  0008               	return
 13750     088C                     __end_of_Button_DefaultCallback:
 13751                           
 13752                           	psect	text68
 13753     05B3                     __ptext68:	
 13754 ;; *************** function _Button_Baseline_Update *****************
 13755 ;; Defined at:
 13756 ;;		line 461 in file "mcc_generated_files/mtouch/mtouch_button.c"
 13757 ;; Parameters:    Size  Location     Type
 13758 ;;  button          1    wreg     PTR struct .
 13759 ;;		 -> mtouch_button(16), 
 13760 ;; Auto vars:     Size  Location     Type
 13761 ;;  button          1    6[BANK0 ] PTR struct .
 13762 ;;		 -> mtouch_button(16), 
 13763 ;; Return value:  Size  Location     Type
 13764 ;;                  1    wreg      void 
 13765 ;; Registers used:
 13766 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13767 ;; Tracked objects:
 13768 ;;		On entry : 0/0
 13769 ;;		On exit  : 0/0
 13770 ;;		Unchanged: 0/0
 13771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13773 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13774 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13775 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13776 ;;Total ram usage:        7 bytes
 13777 ;; Hardware stack levels used: 1
 13778 ;; Hardware stack levels required when called: 7
 13779 ;; This function calls:
 13780 ;;		Nothing
 13781 ;; This function is called by:
 13782 ;;		_Button_State_Initializing
 13783 ;;		_Button_State_NotPressed
 13784 ;; This function uses a non-reentrant model
 13785 ;;
 13786                           
 13787     05B3                     _Button_Baseline_Update:	
 13788                           ;psect for function _Button_Baseline_Update
 13789                           
 13790                           
 13791                           ;incstack = 0
 13792                           ; Regs used in _Button_Baseline_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
 13793                           ;Button_Baseline_Update@button stored from wreg
 13794     05B3  0020               	movlb	0	; select bank0
 13795     05B4  00D2               	movwf	Button_Baseline_Update@button
 13796     05B5                     l3319:
 13797                           
 13798                           ;mcc_generated_files/mtouch/mtouch_button.c: 461: static void Button_Baseline_Update(mto
      +                          uch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 462: {;mcc_generated_f
      +                          iles/mtouch/mtouch_button.c: 463:     if (GIE == (uint8_t)1)
 13799     05B5  1F8B               	btfss	11,7	;volatile
 13800     05B6  2DB8               	goto	u1851
 13801     05B7  2DB9               	goto	u1850
 13802     05B8                     u1851:
 13803     05B8  2DFC               	goto	l3327
 13804     05B9                     u1850:
 13805     05B9                     l3321:
 13806                           
 13807                           ;mcc_generated_files/mtouch/mtouch_button.c: 464:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 465:         GIE = (uint8_t)0;
 13808     05B9  138B               	bcf	11,7	;volatile
 13809     05BA                     l3323:
 13810                           
 13811                           ;mcc_generated_files/mtouch/mtouch_button.c: 466:         button->baseline -= (button->b
      +                          aseline) >> ((uint8_t)4u);
 13812     05BA  0852               	movf	Button_Baseline_Update@button,w
 13813     05BB  3E05               	addlw	5
 13814     05BC  0086               	movwf	6
 13815     05BD  0187               	clrf	7
 13816     05BE  3F40               	moviw [0]fsr1
 13817     05BF  00CC               	movwf	??_Button_Baseline_Update
 13818     05C0  3F41               	moviw [1]fsr1
 13819     05C1  00CD               	movwf	??_Button_Baseline_Update+1
 13820     05C2  3F42               	moviw [2]fsr1
 13821     05C3  00CE               	movwf	??_Button_Baseline_Update+2
 13822     05C4  3F43               	moviw [3]fsr1
 13823     05C5  00CF               	movwf	??_Button_Baseline_Update+3
 13824     05C6  3004               	movlw	4
 13825     05C7                     u1865:
 13826     05C7  36CF               	lsrf	??_Button_Baseline_Update+3,f
 13827     05C8  0CCE               	rrf	??_Button_Baseline_Update+2,f
 13828     05C9  0CCD               	rrf	??_Button_Baseline_Update+1,f
 13829     05CA  0CCC               	rrf	??_Button_Baseline_Update,f
 13830     05CB                     u1860:
 13831     05CB  0B89               	decfsz	9,f
 13832     05CC  2DC7               	goto	u1865
 13833     05CD  0852               	movf	Button_Baseline_Update@button,w
 13834     05CE  3E05               	addlw	5
 13835     05CF  0086               	movwf	6
 13836     05D0  0187               	clrf	7
 13837     05D1  084C               	movf	??_Button_Baseline_Update,w
 13838     05D2  0281               	subwf	1,f
 13839     05D3  3141               	addfsr 1,1
 13840     05D4  084D               	movf	??_Button_Baseline_Update+1,w
 13841     05D5  3B81               	subwfb	1,f
 13842     05D6  3141               	addfsr 1,1
 13843     05D7  084E               	movf	??_Button_Baseline_Update+2,w
 13844     05D8  3B81               	subwfb	1,f
 13845     05D9  3141               	addfsr 1,1
 13846     05DA  084F               	movf	??_Button_Baseline_Update+3,w
 13847     05DB  3B81               	subwfb	1,f
 13848     05DC  317D               	addfsr 1,-3
 13849                           
 13850                           ;mcc_generated_files/mtouch/mtouch_button.c: 467:         button->baseline += button->re
      +                          ading;
 13851     05DD  0852               	movf	Button_Baseline_Update@button,w
 13852     05DE  3E03               	addlw	3
 13853     05DF  0086               	movwf	6
 13854     05E0  0187               	clrf	7
 13855     05E1  3F40               	moviw [0]fsr1
 13856     05E2  00CC               	movwf	??_Button_Baseline_Update
 13857     05E3  3F41               	moviw [1]fsr1
 13858     05E4  00CD               	movwf	??_Button_Baseline_Update+1
 13859     05E5  084C               	movf	??_Button_Baseline_Update,w
 13860     05E6  00CE               	movwf	??_Button_Baseline_Update+2
 13861     05E7  084D               	movf	??_Button_Baseline_Update+1,w
 13862     05E8  00CF               	movwf	??_Button_Baseline_Update+3
 13863     05E9  01D0               	clrf	??_Button_Baseline_Update+4
 13864     05EA  01D1               	clrf	??_Button_Baseline_Update+5
 13865     05EB  0852               	movf	Button_Baseline_Update@button,w
 13866     05EC  3E05               	addlw	5
 13867     05ED  0086               	movwf	6
 13868     05EE  0187               	clrf	7
 13869     05EF  084E               	movf	??_Button_Baseline_Update+2,w
 13870     05F0  0781               	addwf	1,f
 13871     05F1  3141               	addfsr 1,1
 13872     05F2  084F               	movf	??_Button_Baseline_Update+3,w
 13873     05F3  3D81               	addwfc	1,f
 13874     05F4  3141               	addfsr 1,1
 13875     05F5  0850               	movf	??_Button_Baseline_Update+4,w
 13876     05F6  3D81               	addwfc	1,f
 13877     05F7  3141               	addfsr 1,1
 13878     05F8  0851               	movf	??_Button_Baseline_Update+5,w
 13879     05F9  3D81               	addwfc	1,f
 13880     05FA                     l3325:
 13881                           
 13882                           ;mcc_generated_files/mtouch/mtouch_button.c: 468:         GIE = (uint8_t)1;
 13883     05FA  178B               	bsf	11,7	;volatile
 13884                           
 13885                           ;mcc_generated_files/mtouch/mtouch_button.c: 469:     }
 13886     05FB  2E3C               	goto	l315
 13887     05FC                     l3327:
 13888                           
 13889                           ;mcc_generated_files/mtouch/mtouch_button.c: 471:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 472:         button->baseline -= (button->baseline) >> ((uint8_t)4u);
 13890     05FC  0852               	movf	Button_Baseline_Update@button,w
 13891     05FD  3E05               	addlw	5
 13892     05FE  0086               	movwf	6
 13893     05FF  0187               	clrf	7
 13894     0600  3F40               	moviw [0]fsr1
 13895     0601  00CC               	movwf	??_Button_Baseline_Update
 13896     0602  3F41               	moviw [1]fsr1
 13897     0603  00CD               	movwf	??_Button_Baseline_Update+1
 13898     0604  3F42               	moviw [2]fsr1
 13899     0605  00CE               	movwf	??_Button_Baseline_Update+2
 13900     0606  3F43               	moviw [3]fsr1
 13901     0607  00CF               	movwf	??_Button_Baseline_Update+3
 13902     0608  3004               	movlw	4
 13903     0609                     u1875:
 13904     0609  36CF               	lsrf	??_Button_Baseline_Update+3,f
 13905     060A  0CCE               	rrf	??_Button_Baseline_Update+2,f
 13906     060B  0CCD               	rrf	??_Button_Baseline_Update+1,f
 13907     060C  0CCC               	rrf	??_Button_Baseline_Update,f
 13908     060D                     u1870:
 13909     060D  0B89               	decfsz	9,f
 13910     060E  2E09               	goto	u1875
 13911     060F  0852               	movf	Button_Baseline_Update@button,w
 13912     0610  3E05               	addlw	5
 13913     0611  0086               	movwf	6
 13914     0612  0187               	clrf	7
 13915     0613  084C               	movf	??_Button_Baseline_Update,w
 13916     0614  0281               	subwf	1,f
 13917     0615  3141               	addfsr 1,1
 13918     0616  084D               	movf	??_Button_Baseline_Update+1,w
 13919     0617  3B81               	subwfb	1,f
 13920     0618  3141               	addfsr 1,1
 13921     0619  084E               	movf	??_Button_Baseline_Update+2,w
 13922     061A  3B81               	subwfb	1,f
 13923     061B  3141               	addfsr 1,1
 13924     061C  084F               	movf	??_Button_Baseline_Update+3,w
 13925     061D  3B81               	subwfb	1,f
 13926     061E  317D               	addfsr 1,-3
 13927                           
 13928                           ;mcc_generated_files/mtouch/mtouch_button.c: 473:         button->baseline += button->re
      +                          ading;
 13929     061F  0852               	movf	Button_Baseline_Update@button,w
 13930     0620  3E03               	addlw	3
 13931     0621  0086               	movwf	6
 13932     0622  0187               	clrf	7
 13933     0623  3F40               	moviw [0]fsr1
 13934     0624  00CC               	movwf	??_Button_Baseline_Update
 13935     0625  3F41               	moviw [1]fsr1
 13936     0626  00CD               	movwf	??_Button_Baseline_Update+1
 13937     0627  084C               	movf	??_Button_Baseline_Update,w
 13938     0628  00CE               	movwf	??_Button_Baseline_Update+2
 13939     0629  084D               	movf	??_Button_Baseline_Update+1,w
 13940     062A  00CF               	movwf	??_Button_Baseline_Update+3
 13941     062B  01D0               	clrf	??_Button_Baseline_Update+4
 13942     062C  01D1               	clrf	??_Button_Baseline_Update+5
 13943     062D  0852               	movf	Button_Baseline_Update@button,w
 13944     062E  3E05               	addlw	5
 13945     062F  0086               	movwf	6
 13946     0630  0187               	clrf	7
 13947     0631  084E               	movf	??_Button_Baseline_Update+2,w
 13948     0632  0781               	addwf	1,f
 13949     0633  3141               	addfsr 1,1
 13950     0634  084F               	movf	??_Button_Baseline_Update+3,w
 13951     0635  3D81               	addwfc	1,f
 13952     0636  3141               	addfsr 1,1
 13953     0637  0850               	movf	??_Button_Baseline_Update+4,w
 13954     0638  3D81               	addwfc	1,f
 13955     0639  3141               	addfsr 1,1
 13956     063A  0851               	movf	??_Button_Baseline_Update+5,w
 13957     063B  3D81               	addwfc	1,f
 13958     063C                     l315:
 13959     063C  0008               	return
 13960     063D                     __end_of_Button_Baseline_Update:
 13961                           
 13962                           	psect	text69
 13963     0E03                     __ptext69:	
 13964 ;; *************** function _Button_Baseline_Initialize *****************
 13965 ;; Defined at:
 13966 ;;		line 455 in file "mcc_generated_files/mtouch/mtouch_button.c"
 13967 ;; Parameters:    Size  Location     Type
 13968 ;;  button          1    wreg     PTR struct .
 13969 ;;		 -> mtouch_button(16), 
 13970 ;; Auto vars:     Size  Location     Type
 13971 ;;  button          1   11[BANK0 ] PTR struct .
 13972 ;;		 -> mtouch_button(16), 
 13973 ;; Return value:  Size  Location     Type
 13974 ;;                  1    wreg      void 
 13975 ;; Registers used:
 13976 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13977 ;; Tracked objects:
 13978 ;;		On entry : 0/0
 13979 ;;		On exit  : 0/0
 13980 ;;		Unchanged: 0/0
 13981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13983 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13984 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13985 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13986 ;;Total ram usage:        5 bytes
 13987 ;; Hardware stack levels used: 1
 13988 ;; Hardware stack levels required when called: 9
 13989 ;; This function calls:
 13990 ;;		_MTOUCH_Sensor_RawSample_Get
 13991 ;; This function is called by:
 13992 ;;		_Button_State_Initializing
 13993 ;; This function uses a non-reentrant model
 13994 ;;
 13995                           
 13996     0E03                     _Button_Baseline_Initialize:	
 13997                           ;psect for function _Button_Baseline_Initialize
 13998                           
 13999                           
 14000                           ;incstack = 0
 14001                           ; Regs used in _Button_Baseline_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 14002                           ;Button_Baseline_Initialize@button stored from wreg
 14003     0E03  0020               	movlb	0	; select bank0
 14004     0E04  00D7               	movwf	Button_Baseline_Initialize@button
 14005     0E05                     l3315:
 14006                           
 14007                           ;mcc_generated_files/mtouch/mtouch_button.c: 455: static void Button_Baseline_Initialize
      +                          (mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 456: {;mcc_generat
      +                          ed_files/mtouch/mtouch_button.c: 457:     button->baseline = MTOUCH_Sensor_RawSample_Get
      +                          (button->sensor);
 14008     0E05  0A57               	incf	Button_Baseline_Initialize@button,w
 14009     0E06  0086               	movwf	6
 14010     0E07  0187               	clrf	7
 14011     0E08  0801               	movf	1,w
 14012     0E09  318B  2382  318E   	fcall	_MTOUCH_Sensor_RawSample_Get
 14013     0E0C  0020               	movlb	0	; select bank0
 14014     0E0D  0850               	movf	?_MTOUCH_Sensor_RawSample_Get,w
 14015     0E0E  00D3               	movwf	??_Button_Baseline_Initialize
 14016     0E0F  0851               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 14017     0E10  00D4               	movwf	??_Button_Baseline_Initialize+1
 14018     0E11  01D5               	clrf	??_Button_Baseline_Initialize+2
 14019     0E12  01D6               	clrf	??_Button_Baseline_Initialize+3
 14020     0E13  0857               	movf	Button_Baseline_Initialize@button,w
 14021     0E14  3E05               	addlw	5
 14022     0E15  0086               	movwf	6
 14023     0E16  0187               	clrf	7
 14024     0E17  0853               	movf	??_Button_Baseline_Initialize,w
 14025     0E18  3FC0               	movwi [0]fsr1
 14026     0E19  0854               	movf	??_Button_Baseline_Initialize+1,w
 14027     0E1A  3FC1               	movwi [1]fsr1
 14028     0E1B  0855               	movf	??_Button_Baseline_Initialize+2,w
 14029     0E1C  3FC2               	movwi [2]fsr1
 14030     0E1D  0856               	movf	??_Button_Baseline_Initialize+3,w
 14031     0E1E  3FC3               	movwi [3]fsr1
 14032     0E1F                     l3317:
 14033                           
 14034                           ;mcc_generated_files/mtouch/mtouch_button.c: 458:     button->baseline <<= ((uint8_t)4u)
      +                          ;
 14035     0E1F  0857               	movf	Button_Baseline_Initialize@button,w
 14036     0E20  3E05               	addlw	5
 14037     0E21  0086               	movwf	6
 14038     0E22  0187               	clrf	7
 14039     0E23  3004               	movlw	4
 14040     0E24                     u1845:
 14041     0E24  3581               	lslf	1,f
 14042     0E25  3141               	addfsr 1,1
 14043     0E26  0D81               	rlf	1,f
 14044     0E27  3141               	addfsr 1,1
 14045     0E28  0D81               	rlf	1,f
 14046     0E29  3141               	addfsr 1,1
 14047     0E2A  0D81               	rlf	1,f
 14048     0E2B  317D               	addfsr 1,-3
 14049     0E2C  0B89               	decfsz	9,f
 14050     0E2D  2E24               	goto	u1845
 14051     0E2E                     l310:
 14052     0E2E  0008               	return
 14053     0E2F                     __end_of_Button_Baseline_Initialize:
 14054                           
 14055                           	psect	text70
 14056     0996                     __ptext70:	
 14057 ;; *************** function _Button_Reading_Update *****************
 14058 ;; Defined at:
 14059 ;;		line 428 in file "mcc_generated_files/mtouch/mtouch_button.c"
 14060 ;; Parameters:    Size  Location     Type
 14061 ;;  button          1    wreg     PTR struct .
 14062 ;;		 -> mtouch_button(16), 
 14063 ;; Auto vars:     Size  Location     Type
 14064 ;;  button          1   10[BANK0 ] PTR struct .
 14065 ;;		 -> mtouch_button(16), 
 14066 ;; Return value:  Size  Location     Type
 14067 ;;                  1    wreg      void 
 14068 ;; Registers used:
 14069 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14070 ;; Tracked objects:
 14071 ;;		On entry : 0/0
 14072 ;;		On exit  : 0/0
 14073 ;;		Unchanged: 0/0
 14074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14076 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14078 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14079 ;;Total ram usage:        1 bytes
 14080 ;; Hardware stack levels used: 1
 14081 ;; Hardware stack levels required when called: 10
 14082 ;; This function calls:
 14083 ;;		_Button_Reading_Update_Helper
 14084 ;; This function is called by:
 14085 ;;		_Button_Service
 14086 ;; This function uses a non-reentrant model
 14087 ;;
 14088                           
 14089     0996                     _Button_Reading_Update:	
 14090                           ;psect for function _Button_Reading_Update
 14091                           
 14092                           
 14093                           ;incstack = 0
 14094                           ; Regs used in _Button_Reading_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14095                           ;Button_Reading_Update@button stored from wreg
 14096     0996  0020               	movlb	0	; select bank0
 14097     0997  00D6               	movwf	Button_Reading_Update@button
 14098     0998                     l3515:
 14099                           
 14100                           ;mcc_generated_files/mtouch/mtouch_button.c: 428: static void Button_Reading_Update(mtou
      +                          ch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 429: {;mcc_generated_fi
      +                          les/mtouch/mtouch_button.c: 430:     if (GIE == (uint8_t) 1)
 14101     0998  1F8B               	btfss	11,7	;volatile
 14102     0999  299B               	goto	u2041
 14103     099A  299C               	goto	u2040
 14104     099B                     u2041:
 14105     099B  29A3               	goto	l3523
 14106     099C                     u2040:
 14107     099C                     l3517:
 14108                           
 14109                           ;mcc_generated_files/mtouch/mtouch_button.c: 431:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 432:         GIE = (uint8_t) 0;
 14110     099C  138B               	bcf	11,7	;volatile
 14111     099D                     l3519:
 14112                           
 14113                           ;mcc_generated_files/mtouch/mtouch_button.c: 433:         Button_Reading_Update_Helper(b
      +                          utton);
 14114     099D  0856               	movf	Button_Reading_Update@button,w
 14115     099E  318F  270D  3189   	fcall	_Button_Reading_Update_Helper
 14116     09A1                     l3521:
 14117                           
 14118                           ;mcc_generated_files/mtouch/mtouch_button.c: 434:         GIE = (uint8_t) 1;
 14119     09A1  178B               	bsf	11,7	;volatile
 14120                           
 14121                           ;mcc_generated_files/mtouch/mtouch_button.c: 435:     }
 14122     09A2  29A7               	goto	l302
 14123     09A3                     l3523:
 14124                           
 14125                           ;mcc_generated_files/mtouch/mtouch_button.c: 437:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 438:         Button_Reading_Update_Helper(button);
 14126     09A3  0856               	movf	Button_Reading_Update@button,w
 14127     09A4  318F  270D  3189   	fcall	_Button_Reading_Update_Helper
 14128     09A7                     l302:
 14129     09A7  0008               	return
 14130     09A8                     __end_of_Button_Reading_Update:
 14131                           
 14132                           	psect	text71
 14133     0F0D                     __ptext71:	
 14134 ;; *************** function _Button_Reading_Update_Helper *****************
 14135 ;; Defined at:
 14136 ;;		line 442 in file "mcc_generated_files/mtouch/mtouch_button.c"
 14137 ;; Parameters:    Size  Location     Type
 14138 ;;  button          1    wreg     PTR struct .
 14139 ;;		 -> mtouch_button(16), 
 14140 ;; Auto vars:     Size  Location     Type
 14141 ;;  button          1    9[BANK0 ] PTR struct .
 14142 ;;		 -> mtouch_button(16), 
 14143 ;; Return value:  Size  Location     Type
 14144 ;;                  1    wreg      void 
 14145 ;; Registers used:
 14146 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14147 ;; Tracked objects:
 14148 ;;		On entry : 0/0
 14149 ;;		On exit  : 0/0
 14150 ;;		Unchanged: 0/0
 14151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14153 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14154 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14155 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14156 ;;Total ram usage:        3 bytes
 14157 ;; Hardware stack levels used: 1
 14158 ;; Hardware stack levels required when called: 9
 14159 ;; This function calls:
 14160 ;;		_MTOUCH_Sensor_RawSample_Get
 14161 ;; This function is called by:
 14162 ;;		_Button_Reading_Update
 14163 ;; This function uses a non-reentrant model
 14164 ;;
 14165                           
 14166     0F0D                     _Button_Reading_Update_Helper:	
 14167                           ;psect for function _Button_Reading_Update_Helper
 14168                           
 14169                           
 14170                           ;incstack = 0
 14171                           ; Regs used in _Button_Reading_Update_Helper: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 14172                           ;Button_Reading_Update_Helper@button stored from wreg
 14173     0F0D  0020               	movlb	0	; select bank0
 14174     0F0E  00D5               	movwf	Button_Reading_Update_Helper@button
 14175     0F0F                     l3329:
 14176                           
 14177                           ;mcc_generated_files/mtouch/mtouch_button.c: 442: static void Button_Reading_Update_Help
      +                          er(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 443: {;mcc_gener
      +                          ated_files/mtouch/mtouch_button.c: 444:     if (button->state != MTOUCH_BUTTON_STATE_ini
      +                          tializing)
 14178     0F0F  0855               	movf	Button_Reading_Update_Helper@button,w
 14179     0F10  3E02               	addlw	2
 14180     0F11  0086               	movwf	6
 14181     0F12  0187               	clrf	7
 14182     0F13  0801               	movf	1,w
 14183     0F14  1903               	btfsc	3,2
 14184     0F15  2F17               	goto	u1881
 14185     0F16  2F18               	goto	u1880
 14186     0F17                     u1881:
 14187     0F17  2F49               	goto	l3335
 14188     0F18                     u1880:
 14189     0F18                     l3331:
 14190                           
 14191                           ;mcc_generated_files/mtouch/mtouch_button.c: 445:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 446:         button->reading -= button->reading>>((uint8_t)2u);
 14192     0F18  0855               	movf	Button_Reading_Update_Helper@button,w
 14193     0F19  3E03               	addlw	3
 14194     0F1A  0086               	movwf	6
 14195     0F1B  0187               	clrf	7
 14196     0F1C  3F40               	moviw [0]fsr1
 14197     0F1D  00D3               	movwf	??_Button_Reading_Update_Helper
 14198     0F1E  3F41               	moviw [1]fsr1
 14199     0F1F  00D4               	movwf	??_Button_Reading_Update_Helper+1
 14200     0F20  36D4               	lsrf	??_Button_Reading_Update_Helper+1,f
 14201     0F21  0CD3               	rrf	??_Button_Reading_Update_Helper,f
 14202     0F22  36D4               	lsrf	??_Button_Reading_Update_Helper+1,f
 14203     0F23  0CD3               	rrf	??_Button_Reading_Update_Helper,f
 14204     0F24  0855               	movf	Button_Reading_Update_Helper@button,w
 14205     0F25  3E03               	addlw	3
 14206     0F26  0086               	movwf	6
 14207     0F27  0187               	clrf	7
 14208     0F28  0853               	movf	??_Button_Reading_Update_Helper,w
 14209     0F29  0281               	subwf	1,f
 14210     0F2A  3141               	addfsr 1,1
 14211     0F2B  0854               	movf	??_Button_Reading_Update_Helper+1,w
 14212     0F2C  3B81               	subwfb	1,f
 14213     0F2D  317F               	addfsr 1,-1
 14214     0F2E                     l3333:
 14215                           
 14216                           ;mcc_generated_files/mtouch/mtouch_button.c: 447:         button->reading += MTOUCH_Sens
      +                          or_RawSample_Get(button->sensor) >> ((uint8_t)2u);
 14217     0F2E  0A55               	incf	Button_Reading_Update_Helper@button,w
 14218     0F2F  0086               	movwf	6
 14219     0F30  0187               	clrf	7
 14220     0F31  0801               	movf	1,w
 14221     0F32  318B  2382  318F   	fcall	_MTOUCH_Sensor_RawSample_Get
 14222     0F35  0020               	movlb	0	; select bank0
 14223     0F36  0850               	movf	?_MTOUCH_Sensor_RawSample_Get,w
 14224     0F37  00D3               	movwf	??_Button_Reading_Update_Helper
 14225     0F38  0851               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 14226     0F39  00D4               	movwf	??_Button_Reading_Update_Helper+1
 14227     0F3A  36D4               	lsrf	??_Button_Reading_Update_Helper+1,f
 14228     0F3B  0CD3               	rrf	??_Button_Reading_Update_Helper,f
 14229     0F3C  36D4               	lsrf	??_Button_Reading_Update_Helper+1,f
 14230     0F3D  0CD3               	rrf	??_Button_Reading_Update_Helper,f
 14231     0F3E  0855               	movf	Button_Reading_Update_Helper@button,w
 14232     0F3F  3E03               	addlw	3
 14233     0F40  0086               	movwf	6
 14234     0F41  0187               	clrf	7
 14235     0F42  0853               	movf	??_Button_Reading_Update_Helper,w
 14236     0F43  0781               	addwf	1,f
 14237     0F44  3141               	addfsr 1,1
 14238     0F45  0854               	movf	??_Button_Reading_Update_Helper+1,w
 14239     0F46  3D81               	addwfc	1,f
 14240     0F47  317F               	addfsr 1,-1
 14241                           
 14242                           ;mcc_generated_files/mtouch/mtouch_button.c: 448:     }
 14243     0F48  2F59               	goto	l307
 14244     0F49                     l3335:
 14245                           
 14246                           ;mcc_generated_files/mtouch/mtouch_button.c: 450:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 451:         button->reading = MTOUCH_Sensor_RawSample_Get(button->sensor);
 14247     0F49  0A55               	incf	Button_Reading_Update_Helper@button,w
 14248     0F4A  0086               	movwf	6
 14249     0F4B  0187               	clrf	7
 14250     0F4C  0801               	movf	1,w
 14251     0F4D  318B  2382  318F   	fcall	_MTOUCH_Sensor_RawSample_Get
 14252     0F50  0020               	movlb	0	; select bank0
 14253     0F51  0855               	movf	Button_Reading_Update_Helper@button,w
 14254     0F52  3E03               	addlw	3
 14255     0F53  0086               	movwf	6
 14256     0F54  0187               	clrf	7
 14257     0F55  0850               	movf	?_MTOUCH_Sensor_RawSample_Get,w
 14258     0F56  3FC0               	movwi [0]fsr1
 14259     0F57  0851               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 14260     0F58  3FC1               	movwi [1]fsr1
 14261     0F59                     l307:
 14262     0F59  0008               	return
 14263     0F5A                     __end_of_Button_Reading_Update_Helper:
 14264                           
 14265                           	psect	text72
 14266     0B82                     __ptext72:	
 14267 ;; *************** function _MTOUCH_Sensor_RawSample_Get *****************
 14268 ;; Defined at:
 14269 ;;		line 572 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 14270 ;; Parameters:    Size  Location     Type
 14271 ;;  name            1    wreg     enum E11929
 14272 ;; Auto vars:     Size  Location     Type
 14273 ;;  name            1    6[BANK0 ] enum E11929
 14274 ;; Return value:  Size  Location     Type
 14275 ;;                  2    4[BANK0 ] unsigned short 
 14276 ;; Registers used:
 14277 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14278 ;; Tracked objects:
 14279 ;;		On entry : 0/0
 14280 ;;		On exit  : 0/0
 14281 ;;		Unchanged: 0/0
 14282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14283 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14284 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14286 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14287 ;;Total ram usage:        3 bytes
 14288 ;; Hardware stack levels used: 1
 14289 ;; Hardware stack levels required when called: 8
 14290 ;; This function calls:
 14291 ;;		___bmul
 14292 ;; This function is called by:
 14293 ;;		_Button_Reading_Update_Helper
 14294 ;;		_Button_Baseline_Initialize
 14295 ;; This function uses a non-reentrant model
 14296 ;;
 14297                           
 14298     0B82                     _MTOUCH_Sensor_RawSample_Get:	
 14299                           ;psect for function _MTOUCH_Sensor_RawSample_Get
 14300                           
 14301                           
 14302                           ;incstack = 0
 14303                           ; Regs used in _MTOUCH_Sensor_RawSample_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14304                           ;MTOUCH_Sensor_RawSample_Get@name stored from wreg
 14305     0B82  0020               	movlb	0	; select bank0
 14306     0B83  00D2               	movwf	MTOUCH_Sensor_RawSample_Get@name
 14307     0B84                     l3265:
 14308                           
 14309                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 572: mtouch_sensor_sample_t MTOUCH_Sensor_R
      +                          awSample_Get(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          573: {;mcc_generated_files/mtouch/mtouch_sensor.c: 574:     if (name < (1u))
 14310     0B84  0852               	movf	MTOUCH_Sensor_RawSample_Get@name,w
 14311     0B85  1D03               	btfss	3,2
 14312     0B86  2B88               	goto	u1791
 14313     0B87  2B89               	goto	u1790
 14314     0B88                     u1791:
 14315     0B88  2B98               	goto	l3273
 14316     0B89                     u1790:
 14317     0B89                     l3267:
 14318                           
 14319                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 575:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 576:         return mtouch_sensor[name].rawSample;
 14320     0B89  3009               	movlw	9
 14321     0B8A  00CC               	movwf	___bmul@multiplicand
 14322     0B8B  0852               	movf	MTOUCH_Sensor_RawSample_Get@name,w
 14323     0B8C  318A  22CC  318B   	fcall	___bmul
 14324     0B8F  3E49               	addlw	(low ((_mtouch_sensor| 0+6)))& (0+255)
 14325     0B90  0086               	movwf	6
 14326     0B91  0187               	clrf	7
 14327     0B92  3F40               	moviw [0]fsr1
 14328     0B93  0020               	movlb	0	; select bank0
 14329     0B94  00D0               	movwf	?_MTOUCH_Sensor_RawSample_Get
 14330     0B95  3F41               	moviw [1]fsr1
 14331     0B96  00D1               	movwf	?_MTOUCH_Sensor_RawSample_Get+1
 14332     0B97  2B9A               	goto	l782
 14333     0B98                     l3273:
 14334                           
 14335                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 579:         return (mtouch_sensor_sample_t
      +                          )0;
 14336     0B98  01D0               	clrf	?_MTOUCH_Sensor_RawSample_Get
 14337     0B99  01D1               	clrf	?_MTOUCH_Sensor_RawSample_Get+1
 14338     0B9A                     l782:
 14339     0B9A  0008               	return
 14340     0B9B                     __end_of_MTOUCH_Sensor_RawSample_Get:
 14341                           
 14342                           	psect	text73
 14343     0ACC                     __ptext73:	
 14344 ;; *************** function ___bmul *****************
 14345 ;; Defined at:
 14346 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
 14347 ;; Parameters:    Size  Location     Type
 14348 ;;  multiplier      1    wreg     unsigned char 
 14349 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 14350 ;; Auto vars:     Size  Location     Type
 14351 ;;  multiplier      1    3[BANK0 ] unsigned char 
 14352 ;;  product         1    2[BANK0 ] unsigned char 
 14353 ;; Return value:  Size  Location     Type
 14354 ;;                  1    wreg      unsigned char 
 14355 ;; Registers used:
 14356 ;;		wreg, status,2, status,0
 14357 ;; Tracked objects:
 14358 ;;		On entry : 0/0
 14359 ;;		On exit  : 0/0
 14360 ;;		Unchanged: 0/0
 14361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14362 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14363 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14364 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14365 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14366 ;;Total ram usage:        4 bytes
 14367 ;; Hardware stack levels used: 1
 14368 ;; Hardware stack levels required when called: 7
 14369 ;; This function calls:
 14370 ;;		Nothing
 14371 ;; This function is called by:
 14372 ;;		_MTOUCH_Sensor_Initialize
 14373 ;;		_Sensor_scheduleNextScan
 14374 ;;		_MTOUCH_Sensor_postAcquisitionProcess
 14375 ;;		_MTOUCH_Sensor_Service
 14376 ;;		_MTOUCH_Sensor_RawSample_Get
 14377 ;;		_medianFilter
 14378 ;;		_Sensor_FrequencyHopping_Autotune_Process
 14379 ;;		_MTOUCH_Sensor_Enable
 14380 ;;		_MTOUCH_Sensor_isEnabled
 14381 ;;		_MTOUCH_Sensor_Calibrate
 14382 ;;		_MTOUCH_Sensor_isCalibrated
 14383 ;;		_MTOUCH_Sensor_wasSampled
 14384 ;;		_MTOUCH_Sensor_AdditionalCap_Get
 14385 ;;		_MTOUCH_Sensor_AcquisitionTime_Get
 14386 ;;		i1_Sensor_scheduleNextScan
 14387 ;;		i1_MTOUCH_Sensor_isEnabled
 14388 ;;		i1_MTOUCH_Sensor_wasSampled
 14389 ;;		_MTOUCH_Sensor_isAnySensorActive
 14390 ;;		_MTOUCH_Sensor_Disable
 14391 ;;		_MTOUCH_Sensor_isActive
 14392 ;;		_MTOUCH_Sensor_PreChargeTime_Get
 14393 ;;		_MTOUCH_Sensor_Oversampling_Get
 14394 ;;		_MTOUCH_Sensor_Oversampling_Set
 14395 ;; This function uses a non-reentrant model
 14396 ;;
 14397                           
 14398     0ACC                     ___bmul:	
 14399                           ;psect for function ___bmul
 14400                           
 14401                           
 14402                           ;incstack = 0
 14403                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 14404                           ;___bmul@multiplier stored from wreg
 14405     0ACC  0020               	movlb	0	; select bank0
 14406     0ACD  00CF               	movwf	___bmul@multiplier
 14407     0ACE                     l3247:
 14408     0ACE  01CE               	clrf	___bmul@product
 14409     0ACF                     l3249:
 14410     0ACF  1C4F               	btfss	___bmul@multiplier,0
 14411     0AD0  2AD2               	goto	u1761
 14412     0AD1  2AD3               	goto	u1760
 14413     0AD2                     u1761:
 14414     0AD2  2AD7               	goto	l3253
 14415     0AD3                     u1760:
 14416     0AD3                     l3251:
 14417     0AD3  084C               	movf	___bmul@multiplicand,w
 14418     0AD4  00CD               	movwf	??___bmul
 14419     0AD5  084D               	movf	??___bmul,w
 14420     0AD6  07CE               	addwf	___bmul@product,f
 14421     0AD7                     l3253:
 14422     0AD7  1003               	clrc
 14423     0AD8  0DCC               	rlf	___bmul@multiplicand,f
 14424     0AD9                     l3255:
 14425     0AD9  1003               	clrc
 14426     0ADA  0CCF               	rrf	___bmul@multiplier,f
 14427     0ADB  084F               	movf	___bmul@multiplier,w
 14428     0ADC  1D03               	btfss	3,2
 14429     0ADD  2ADF               	goto	u1771
 14430     0ADE  2AE0               	goto	u1770
 14431     0ADF                     u1771:
 14432     0ADF  2ACF               	goto	l3249
 14433     0AE0                     u1770:
 14434     0AE0                     l3257:
 14435     0AE0  084E               	movf	___bmul@product,w
 14436     0AE1                     l1308:
 14437     0AE1  0008               	return
 14438     0AE2                     __end_of___bmul:
 14439                           
 14440                           	psect	text74
 14441     063D                     __ptext74:	
 14442 ;; *************** function _Button_Deviation_Update *****************
 14443 ;; Defined at:
 14444 ;;		line 379 in file "mcc_generated_files/mtouch/mtouch_button.c"
 14445 ;; Parameters:    Size  Location     Type
 14446 ;;  button          1    wreg     PTR struct .
 14447 ;;		 -> mtouch_button(16), 
 14448 ;; Auto vars:     Size  Location     Type
 14449 ;;  button          1   10[BANK0 ] PTR struct .
 14450 ;;		 -> mtouch_button(16), 
 14451 ;;  deviation       4   11[BANK0 ] long 
 14452 ;; Return value:  Size  Location     Type
 14453 ;;                  1    wreg      void 
 14454 ;; Registers used:
 14455 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14456 ;; Tracked objects:
 14457 ;;		On entry : 0/0
 14458 ;;		On exit  : 0/0
 14459 ;;		Unchanged: 0/0
 14460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14462 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14463 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14464 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14465 ;;Total ram usage:       15 bytes
 14466 ;; Hardware stack levels used: 1
 14467 ;; Hardware stack levels required when called: 7
 14468 ;; This function calls:
 14469 ;;		Nothing
 14470 ;; This function is called by:
 14471 ;;		_Button_Service
 14472 ;; This function uses a non-reentrant model
 14473 ;;
 14474                           
 14475     063D                     _Button_Deviation_Update:	
 14476                           ;psect for function _Button_Deviation_Update
 14477                           
 14478                           
 14479                           ;incstack = 0
 14480                           ; Regs used in _Button_Deviation_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
 14481                           ;Button_Deviation_Update@button stored from wreg
 14482     063D  0020               	movlb	0	; select bank0
 14483     063E  00D6               	movwf	Button_Deviation_Update@button
 14484     063F                     l3525:
 14485                           
 14486                           ;mcc_generated_files/mtouch/mtouch_button.c: 379: static void Button_Deviation_Update(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 380: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 381:     int32_t deviation;;mcc_generated_files/mtouch/mto
      +                          uch_button.c: 383:     deviation = (int32_t)((int32_t)(button->reading) - (int32_t)((but
      +                          ton->baseline)>>((uint8_t)4u)));
 14487     063F  0856               	movf	Button_Deviation_Update@button,w
 14488     0640  3E05               	addlw	5
 14489     0641  0086               	movwf	6
 14490     0642  0187               	clrf	7
 14491     0643  3F40               	moviw [0]fsr1
 14492     0644  00CC               	movwf	??_Button_Deviation_Update
 14493     0645  3F41               	moviw [1]fsr1
 14494     0646  00CD               	movwf	??_Button_Deviation_Update+1
 14495     0647  3F42               	moviw [2]fsr1
 14496     0648  00CE               	movwf	??_Button_Deviation_Update+2
 14497     0649  3F43               	moviw [3]fsr1
 14498     064A  00CF               	movwf	??_Button_Deviation_Update+3
 14499     064B  3004               	movlw	4
 14500     064C                     u2055:
 14501     064C  36CF               	lsrf	??_Button_Deviation_Update+3,f
 14502     064D  0CCE               	rrf	??_Button_Deviation_Update+2,f
 14503     064E  0CCD               	rrf	??_Button_Deviation_Update+1,f
 14504     064F  0CCC               	rrf	??_Button_Deviation_Update,f
 14505     0650                     u2050:
 14506     0650  0B89               	decfsz	9,f
 14507     0651  2E4C               	goto	u2055
 14508     0652  0856               	movf	Button_Deviation_Update@button,w
 14509     0653  3E03               	addlw	3
 14510     0654  0086               	movwf	6
 14511     0655  0187               	clrf	7
 14512     0656  3F40               	moviw [0]fsr1
 14513     0657  00D0               	movwf	??_Button_Deviation_Update+4
 14514     0658  3F41               	moviw [1]fsr1
 14515     0659  00D1               	movwf	??_Button_Deviation_Update+5
 14516     065A  0850               	movf	??_Button_Deviation_Update+4,w
 14517     065B  00D2               	movwf	??_Button_Deviation_Update+6
 14518     065C  0851               	movf	??_Button_Deviation_Update+5,w
 14519     065D  00D3               	movwf	??_Button_Deviation_Update+7
 14520     065E  01D4               	clrf	??_Button_Deviation_Update+8
 14521     065F  01D5               	clrf	??_Button_Deviation_Update+9
 14522     0660  084C               	movf	??_Button_Deviation_Update,w
 14523     0661  02D2               	subwf	??_Button_Deviation_Update+6,f
 14524     0662  084D               	movf	??_Button_Deviation_Update+1,w
 14525     0663  3BD3               	subwfb	??_Button_Deviation_Update+7,f
 14526     0664  084E               	movf	??_Button_Deviation_Update+2,w
 14527     0665  3BD4               	subwfb	??_Button_Deviation_Update+8,f
 14528     0666  084F               	movf	??_Button_Deviation_Update+3,w
 14529     0667  3BD5               	subwfb	??_Button_Deviation_Update+9,f
 14530     0668  0855               	movf	??_Button_Deviation_Update+9,w
 14531     0669  00DA               	movwf	Button_Deviation_Update@deviation+3
 14532     066A  0854               	movf	??_Button_Deviation_Update+8,w
 14533     066B  00D9               	movwf	Button_Deviation_Update@deviation+2
 14534     066C  0853               	movf	??_Button_Deviation_Update+7,w
 14535     066D  00D8               	movwf	Button_Deviation_Update@deviation+1
 14536     066E  0852               	movf	??_Button_Deviation_Update+6,w
 14537     066F  00D7               	movwf	Button_Deviation_Update@deviation
 14538                           
 14539                           ;mcc_generated_files/mtouch/mtouch_button.c: 386:     deviation = deviation >> (button->
      +                          scaling);
 14540     0670  0857               	movf	Button_Deviation_Update@deviation,w
 14541     0671  00CC               	movwf	??_Button_Deviation_Update
 14542     0672  0858               	movf	Button_Deviation_Update@deviation+1,w
 14543     0673  00CD               	movwf	??_Button_Deviation_Update+1
 14544     0674  0859               	movf	Button_Deviation_Update@deviation+2,w
 14545     0675  00CE               	movwf	??_Button_Deviation_Update+2
 14546     0676  085A               	movf	Button_Deviation_Update@deviation+3,w
 14547     0677  00CF               	movwf	??_Button_Deviation_Update+3
 14548     0678  0856               	movf	Button_Deviation_Update@button,w
 14549     0679  3E0F               	addlw	15
 14550     067A  0086               	movwf	6
 14551     067B  0187               	clrf	7
 14552     067C  0A01               	incf	1,w
 14553     067D  2E82               	goto	u2060
 14554     067E                     u2065:
 14555     067E  37CF               	asrf	??_Button_Deviation_Update+3,f
 14556     067F  0CCE               	rrf	??_Button_Deviation_Update+2,f
 14557     0680  0CCD               	rrf	??_Button_Deviation_Update+1,f
 14558     0681  0CCC               	rrf	??_Button_Deviation_Update,f
 14559     0682                     u2060:
 14560     0682  0B89               	decfsz	9,f
 14561     0683  2E7E               	goto	u2065
 14562     0684  084F               	movf	??_Button_Deviation_Update+3,w
 14563     0685  00DA               	movwf	Button_Deviation_Update@deviation+3
 14564     0686  084E               	movf	??_Button_Deviation_Update+2,w
 14565     0687  00D9               	movwf	Button_Deviation_Update@deviation+2
 14566     0688  084D               	movf	??_Button_Deviation_Update+1,w
 14567     0689  00D8               	movwf	Button_Deviation_Update@deviation+1
 14568     068A  084C               	movf	??_Button_Deviation_Update,w
 14569     068B  00D7               	movwf	Button_Deviation_Update@deviation
 14570     068C                     l3527:
 14571                           
 14572                           ;mcc_generated_files/mtouch/mtouch_button.c: 389:     if (deviation > ((0x7f)))
 14573     068C  1BDA               	btfsc	Button_Deviation_Update@deviation+3,7
 14574     068D  2E9C               	goto	u2071
 14575     068E  085A               	movf	Button_Deviation_Update@deviation+3,w
 14576     068F  1D03               	btfss	3,2
 14577     0690  2E9D               	goto	u2070
 14578     0691  0859               	movf	Button_Deviation_Update@deviation+2,w
 14579     0692  1D03               	btfss	3,2
 14580     0693  2E9D               	goto	u2070
 14581     0694  0858               	movf	Button_Deviation_Update@deviation+1,w
 14582     0695  1D03               	btfss	3,2
 14583     0696  2E9D               	goto	u2070
 14584     0697  3080               	movlw	128
 14585     0698  0257               	subwf	Button_Deviation_Update@deviation,w
 14586     0699  1C03               	btfss	3,0
 14587     069A  2E9C               	goto	u2071
 14588     069B  2E9D               	goto	u2070
 14589     069C                     u2071:
 14590     069C  2EA6               	goto	l3531
 14591     069D                     u2070:
 14592     069D                     l3529:
 14593                           
 14594                           ;mcc_generated_files/mtouch/mtouch_button.c: 390:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 391:         deviation = ((0x7f));
 14595     069D  3000               	movlw	0
 14596     069E  0020               	movlb	0	; select bank0
 14597     069F  00DA               	movwf	Button_Deviation_Update@deviation+3
 14598     06A0  3000               	movlw	0
 14599     06A1  00D9               	movwf	Button_Deviation_Update@deviation+2
 14600     06A2  3000               	movlw	0
 14601     06A3  00D8               	movwf	Button_Deviation_Update@deviation+1
 14602     06A4  307F               	movlw	127
 14603     06A5  00D7               	movwf	Button_Deviation_Update@deviation
 14604     06A6                     l3531:
 14605                           
 14606                           ;mcc_generated_files/mtouch/mtouch_button.c: 393:     if (deviation < ((-1-0x7f)))
 14607     06A6  0020               	movlb	0	; select bank0
 14608     06A7  1FDA               	btfss	Button_Deviation_Update@deviation+3,7
 14609     06A8  2EB4               	goto	u2081
 14610     06A9  3080               	movlw	128
 14611     06AA  0257               	subwf	Button_Deviation_Update@deviation,w
 14612     06AB  30FF               	movlw	255
 14613     06AC  3B58               	subwfb	Button_Deviation_Update@deviation+1,w
 14614     06AD  30FF               	movlw	255
 14615     06AE  3B59               	subwfb	Button_Deviation_Update@deviation+2,w
 14616     06AF  30FF               	movlw	255
 14617     06B0  3B5A               	subwfb	Button_Deviation_Update@deviation+3,w
 14618     06B1  1803               	btfsc	3,0
 14619     06B2  2EB4               	goto	u2081
 14620     06B3  2EB5               	goto	u2080
 14621     06B4                     u2081:
 14622     06B4  2EBE               	goto	l3535
 14623     06B5                     u2080:
 14624     06B5                     l3533:
 14625                           
 14626                           ;mcc_generated_files/mtouch/mtouch_button.c: 394:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 395:         deviation = ((-1-0x7f));
 14627     06B5  30FF               	movlw	255
 14628     06B6  0020               	movlb	0	; select bank0
 14629     06B7  00DA               	movwf	Button_Deviation_Update@deviation+3
 14630     06B8  30FF               	movlw	255
 14631     06B9  00D9               	movwf	Button_Deviation_Update@deviation+2
 14632     06BA  30FF               	movlw	255
 14633     06BB  00D8               	movwf	Button_Deviation_Update@deviation+1
 14634     06BC  3080               	movlw	128
 14635     06BD  00D7               	movwf	Button_Deviation_Update@deviation
 14636     06BE                     l3535:
 14637                           
 14638                           ;mcc_generated_files/mtouch/mtouch_button.c: 398:     button->deviation = (mtouch_button
      +                          _deviation_t)deviation;
 14639     06BE  0020               	movlb	0	; select bank0
 14640     06BF  0856               	movf	Button_Deviation_Update@button,w
 14641     06C0  3E09               	addlw	9
 14642     06C1  0086               	movwf	6
 14643     06C2  0187               	clrf	7
 14644     06C3  0857               	movf	Button_Deviation_Update@deviation,w
 14645     06C4  0081               	movwf	1
 14646     06C5                     l286:
 14647     06C5  0008               	return
 14648     06C6                     __end_of_Button_Deviation_Update:
 14649                           
 14650                           	psect	intentry
 14651     0004                     __pintentry:	
 14652 ;; *************** function _INTERRUPT_InterruptManager *****************
 14653 ;; Defined at:
 14654 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14655 ;; Parameters:    Size  Location     Type
 14656 ;;		None
 14657 ;; Auto vars:     Size  Location     Type
 14658 ;;		None
 14659 ;; Return value:  Size  Location     Type
 14660 ;;                  1    wreg      void 
 14661 ;; Registers used:
 14662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14663 ;; Tracked objects:
 14664 ;;		On entry : 0/0
 14665 ;;		On exit  : 0/0
 14666 ;;		Unchanged: 0/0
 14667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14672 ;;Total ram usage:        0 bytes
 14673 ;; Hardware stack levels used: 1
 14674 ;; Hardware stack levels required when called: 6
 14675 ;; This function calls:
 14676 ;;		NULL
 14677 ;;		_ADCC_ThresholdISR
 14678 ;;		_EUSART_Receive_ISR
 14679 ;;		_EUSART_Transmit_ISR
 14680 ;; This function is called by:
 14681 ;;		Interrupt level 1
 14682 ;; This function uses a non-reentrant model
 14683 ;;
 14684                           
 14685     0004                     _INTERRUPT_InterruptManager:
 14686                           
 14687                           ;incstack = 0
 14688     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 14689                           
 14690                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14691     0005  3180               	pagesel	$
 14692     0006                     i1l4415:
 14693                           
 14694                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 14695     0006  1F0B               	btfss	11,6	;volatile
 14696     0007  2809               	goto	u318_21
 14697     0008  280A               	goto	u318_20
 14698     0009                     u318_21:
 14699     0009  2835               	goto	i1l140
 14700     000A                     u318_20:
 14701     000A                     i1l4417:
 14702                           
 14703                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE3bits.TXIE == 1 && PIR3bits.TXIF == 1)
 14704     000A  002E               	movlb	14	; select bank14
 14705     000B  1E19               	btfss	25,4	;volatile
 14706     000C  280E               	goto	u319_21
 14707     000D  280F               	goto	u319_20
 14708     000E                     u319_21:
 14709     000E  281A               	goto	i1l133
 14710     000F                     u319_20:
 14711     000F                     i1l4419:
 14712     000F  1E0F               	btfss	15,4	;volatile
 14713     0010  2812               	goto	u320_21
 14714     0011  2813               	goto	u320_20
 14715     0012                     u320_21:
 14716     0012  281A               	goto	i1l133
 14717     0013                     u320_20:
 14718     0013                     i1l4421:
 14719                           
 14720                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
 14721     0013  0020               	movlb	0	; select bank0
 14722     0014  086E               	movf	_EUSART_TxDefaultInterruptHandler+1,w
 14723     0015  008A               	movwf	10
 14724     0016  086D               	movf	_EUSART_TxDefaultInterruptHandler,w
 14725     0017  000A               	callw
 14726     0018  3180               	pagesel	$
 14727                           
 14728                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 14729     0019  2835               	goto	i1l140
 14730     001A                     i1l133:	
 14731                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE3bits.RCIE == 1 && PIR3
      +                          bits.RCIF == 1)
 14732                           
 14733     001A  1E99               	btfss	25,5	;volatile
 14734     001B  281D               	goto	u321_21
 14735     001C  281E               	goto	u321_20
 14736     001D                     u321_21:
 14737     001D  2829               	goto	i1l135
 14738     001E                     u321_20:
 14739     001E                     i1l4423:
 14740     001E  1E8F               	btfss	15,5	;volatile
 14741     001F  2821               	goto	u322_21
 14742     0020  2822               	goto	u322_20
 14743     0021                     u322_21:
 14744     0021  2829               	goto	i1l135
 14745     0022                     u322_20:
 14746     0022                     i1l4425:
 14747                           
 14748                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
 14749     0022  0021               	movlb	1	; select bank1
 14750     0023  0860               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 14751     0024  008A               	movwf	10
 14752     0025  085F               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 14753     0026  000A               	callw
 14754     0027  3180               	pagesel	$
 14755                           
 14756                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 14757     0028  2835               	goto	i1l140
 14758     0029                     i1l135:	
 14759                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 14760                           
 14761     0029  1C97               	btfss	23,1	;volatile
 14762     002A  282C               	goto	u323_21
 14763     002B  282D               	goto	u323_20
 14764     002C                     u323_21:
 14765     002C  2835               	goto	i1l134
 14766     002D                     u323_20:
 14767     002D                     i1l4427:
 14768     002D  1C8D               	btfss	13,1	;volatile
 14769     002E  2830               	goto	u324_21
 14770     002F  2831               	goto	u324_20
 14771     0030                     u324_21:
 14772     0030  2835               	goto	i1l134
 14773     0031                     u324_20:
 14774     0031                     i1l4429:
 14775                           
 14776                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             ADCC_ThresholdISR();
 14777     0031  3189  2155  3180   	fcall	_ADCC_ThresholdISR
 14778                           
 14779                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 14780     0034  2835               	goto	i1l140
 14781     0035                     i1l134:
 14782     0035                     i1l140:	
 14783                           ;mcc_generated_files/interrupt_manager.c: 73:     }
 14784                           
 14785     0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 14786     0036  0009               	retfie
 14787     0037                     __end_of_INTERRUPT_InterruptManager:
 14788                           
 14789                           	psect	text76
 14790     0CA0                     __ptext76:	
 14791 ;; *************** function _EUSART_Transmit_ISR *****************
 14792 ;; Defined at:
 14793 ;;		line 197 in file "mcc_generated_files/eusart.c"
 14794 ;; Parameters:    Size  Location     Type
 14795 ;;		None
 14796 ;; Auto vars:     Size  Location     Type
 14797 ;;		None
 14798 ;; Return value:  Size  Location     Type
 14799 ;;                  1    wreg      void 
 14800 ;; Registers used:
 14801 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14802 ;; Tracked objects:
 14803 ;;		On entry : 0/0
 14804 ;;		On exit  : 0/0
 14805 ;;		Unchanged: 0/0
 14806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14809 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14811 ;;Total ram usage:        1 bytes
 14812 ;; Hardware stack levels used: 1
 14813 ;; This function calls:
 14814 ;;		Nothing
 14815 ;; This function is called by:
 14816 ;;		_EUSART_Initialize
 14817 ;;		_INTERRUPT_InterruptManager
 14818 ;; This function uses a non-reentrant model
 14819 ;;
 14820                           
 14821     0CA0                     _EUSART_Transmit_ISR:	
 14822                           ;psect for function _EUSART_Transmit_ISR
 14823                           
 14824     0CA0                     i1l4377:	
 14825                           ;incstack = 0
 14826                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 14827                           
 14828                           
 14829                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 14830     0CA0  3008               	movlw	8
 14831     0CA1  0020               	movlb	0	; select bank0
 14832     0CA2  0236               	subwf	_eusartTxBufferRemaining,w	;volatile
 14833     0CA3  1803               	skipnc
 14834     0CA4  2CA6               	goto	u313_21
 14835     0CA5  2CA7               	goto	u313_20
 14836     0CA6                     u313_21:
 14837     0CA6  2CBF               	goto	i1l1092
 14838     0CA7                     u313_20:
 14839     0CA7                     i1l4379:
 14840                           
 14841                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
 14842     0CA7  0837               	movf	_eusartTxTail,w
 14843     0CA8  3EA8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
 14844     0CA9  0086               	movwf	6
 14845     0CAA  0187               	clrf	7
 14846     0CAB  0801               	movf	1,w
 14847     0CAC  0022               	movlb	2	; select bank2
 14848     0CAD  009A               	movwf	26	;volatile
 14849     0CAE                     i1l4381:
 14850     0CAE  3001               	movlw	1
 14851     0CAF  00F0               	movwf	??_EUSART_Transmit_ISR
 14852     0CB0  0870               	movf	??_EUSART_Transmit_ISR,w
 14853     0CB1  0020               	movlb	0	; select bank0
 14854     0CB2  07B7               	addwf	_eusartTxTail,f	;volatile
 14855     0CB3                     i1l4383:
 14856                           
 14857                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 14858     0CB3  3008               	movlw	8
 14859     0CB4  0237               	subwf	_eusartTxTail,w	;volatile
 14860     0CB5  1C03               	skipc
 14861     0CB6  2CB8               	goto	u314_21
 14862     0CB7  2CB9               	goto	u314_20
 14863     0CB8                     u314_21:
 14864     0CB8  2CBA               	goto	i1l4387
 14865     0CB9                     u314_20:
 14866     0CB9                     i1l4385:
 14867                           
 14868                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
 14869     0CB9  01B7               	clrf	_eusartTxTail	;volatile
 14870     0CBA                     i1l4387:
 14871                           
 14872                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
 14873     0CBA  3001               	movlw	1
 14874     0CBB  00F0               	movwf	??_EUSART_Transmit_ISR
 14875     0CBC  0870               	movf	??_EUSART_Transmit_ISR,w
 14876     0CBD  07B6               	addwf	_eusartTxBufferRemaining,f	;volatile
 14877                           
 14878                           ;mcc_generated_files/eusart.c: 209:     }
 14879     0CBE  2CC1               	goto	i1l1095
 14880     0CBF                     i1l1092:	
 14881                           ;mcc_generated_files/eusart.c: 210:     else
 14882                           
 14883                           
 14884                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          3bits.TXIE = 0;
 14885     0CBF  002E               	movlb	14	; select bank14
 14886     0CC0  1219               	bcf	25,4	;volatile
 14887     0CC1                     i1l1095:
 14888     0CC1  0008               	return
 14889     0CC2                     __end_of_EUSART_Transmit_ISR:
 14890                           
 14891                           	psect	text77
 14892     0E8E                     __ptext77:	
 14893 ;; *************** function _EUSART_Receive_ISR *****************
 14894 ;; Defined at:
 14895 ;;		line 216 in file "mcc_generated_files/eusart.c"
 14896 ;; Parameters:    Size  Location     Type
 14897 ;;		None
 14898 ;; Auto vars:     Size  Location     Type
 14899 ;;		None
 14900 ;; Return value:  Size  Location     Type
 14901 ;;                  1    wreg      void 
 14902 ;; Registers used:
 14903 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14904 ;; Tracked objects:
 14905 ;;		On entry : 0/0
 14906 ;;		On exit  : 0/0
 14907 ;;		Unchanged: 0/0
 14908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14913 ;;Total ram usage:        0 bytes
 14914 ;; Hardware stack levels used: 1
 14915 ;; Hardware stack levels required when called: 2
 14916 ;; This function calls:
 14917 ;;		NULL
 14918 ;;		_EUSART_DefaultErrorHandler
 14919 ;;		_EUSART_DefaultFramingErrorHandler
 14920 ;;		_EUSART_DefaultOverrunErrorHandler
 14921 ;;		_EUSART_RxDataHandler
 14922 ;; This function is called by:
 14923 ;;		_EUSART_Initialize
 14924 ;;		_INTERRUPT_InterruptManager
 14925 ;; This function uses a non-reentrant model
 14926 ;;
 14927                           
 14928     0E8E                     _EUSART_Receive_ISR:	
 14929                           ;psect for function _EUSART_Receive_ISR
 14930                           
 14931     0E8E                     i1l4389:	
 14932                           ;incstack = 0
 14933                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14934                           
 14935                           
 14936                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 14937     0E8E  0020               	movlb	0	; select bank0
 14938     0E8F  0835               	movf	_eusartRxHead,w	;volatile
 14939     0E90  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 14940     0E91  0086               	movwf	6
 14941     0E92  0187               	clrf	7
 14942     0E93  0181               	clrf	1
 14943     0E94                     i1l4391:
 14944                           
 14945                           ;mcc_generated_files/eusart.c: 221:     if(RC1STAbits.FERR){
 14946     0E94  0022               	movlb	2	; select bank2
 14947     0E95  1D1D               	btfss	29,2	;volatile
 14948     0E96  2E98               	goto	u315_21
 14949     0E97  2E99               	goto	u315_20
 14950     0E98                     u315_21:
 14951     0E98  2EA5               	goto	i1l4397
 14952     0E99                     u315_20:
 14953     0E99                     i1l4393:
 14954                           
 14955                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 14956     0E99  0020               	movlb	0	; select bank0
 14957     0E9A  0835               	movf	_eusartRxHead,w	;volatile
 14958     0E9B  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 14959     0E9C  0086               	movwf	6
 14960     0E9D  0187               	clrf	7
 14961     0E9E  1481               	bsf	1,1
 14962     0E9F                     i1l4395:
 14963                           
 14964                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
 14965     0E9F  0021               	movlb	1	; select bank1
 14966     0EA0  085E               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 14967     0EA1  008A               	movwf	10
 14968     0EA2  085D               	movf	_EUSART_FramingErrorHandler^(0+128),w
 14969     0EA3  000A               	callw
 14970     0EA4  318E               	pagesel	$
 14971     0EA5                     i1l4397:
 14972                           
 14973                           ;mcc_generated_files/eusart.c: 226:     if(RC1STAbits.OERR){
 14974     0EA5  0022               	movlb	2	; select bank2
 14975     0EA6  1C9D               	btfss	29,1	;volatile
 14976     0EA7  2EA9               	goto	u316_21
 14977     0EA8  2EAA               	goto	u316_20
 14978     0EA9                     u316_21:
 14979     0EA9  2EB6               	goto	i1l4403
 14980     0EAA                     u316_20:
 14981     0EAA                     i1l4399:
 14982                           
 14983                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 14984     0EAA  0020               	movlb	0	; select bank0
 14985     0EAB  0835               	movf	_eusartRxHead,w	;volatile
 14986     0EAC  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 14987     0EAD  0086               	movwf	6
 14988     0EAE  0187               	clrf	7
 14989     0EAF  1501               	bsf	1,2
 14990     0EB0                     i1l4401:
 14991                           
 14992                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
 14993     0EB0  0021               	movlb	1	; select bank1
 14994     0EB1  085C               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 14995     0EB2  008A               	movwf	10
 14996     0EB3  085B               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 14997     0EB4  000A               	callw
 14998     0EB5  318E               	pagesel	$
 14999     0EB6                     i1l4403:
 15000                           
 15001                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
 15002     0EB6  0020               	movlb	0	; select bank0
 15003     0EB7  0835               	movf	_eusartRxHead,w	;volatile
 15004     0EB8  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 15005     0EB9  0086               	movwf	6
 15006     0EBA  0187               	clrf	7
 15007     0EBB  0801               	movf	1,w
 15008     0EBC  1903               	btfsc	3,2
 15009     0EBD  2EBF               	goto	u317_21
 15010     0EBE  2EC0               	goto	u317_20
 15011     0EBF                     u317_21:
 15012     0EBF  2EC7               	goto	i1l4407
 15013     0EC0                     u317_20:
 15014     0EC0                     i1l4405:
 15015                           
 15016                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
 15017     0EC0  0021               	movlb	1	; select bank1
 15018     0EC1  085A               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
 15019     0EC2  008A               	movwf	10
 15020     0EC3  0859               	movf	_EUSART_ErrorHandler^(0+128),w
 15021     0EC4  000A               	callw
 15022     0EC5  318E               	pagesel	$
 15023                           
 15024                           ;mcc_generated_files/eusart.c: 233:     } else {
 15025     0EC6  2ECA               	goto	i1l1102
 15026     0EC7                     i1l4407:
 15027                           
 15028                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
 15029     0EC7  318B  2369  318E   	fcall	_EUSART_RxDataHandler
 15030     0ECA                     i1l1102:
 15031     0ECA  0008               	return
 15032     0ECB                     __end_of_EUSART_Receive_ISR:
 15033                           
 15034                           	psect	text78
 15035     0895                     __ptext78:	
 15036 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 15037 ;; Defined at:
 15038 ;;		line 252 in file "mcc_generated_files/eusart.c"
 15039 ;; Parameters:    Size  Location     Type
 15040 ;;		None
 15041 ;; Auto vars:     Size  Location     Type
 15042 ;;		None
 15043 ;; Return value:  Size  Location     Type
 15044 ;;                  1    wreg      void 
 15045 ;; Registers used:
 15046 ;;		None
 15047 ;; Tracked objects:
 15048 ;;		On entry : 0/0
 15049 ;;		On exit  : 0/0
 15050 ;;		Unchanged: 0/0
 15051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15056 ;;Total ram usage:        0 bytes
 15057 ;; Hardware stack levels used: 1
 15058 ;; This function calls:
 15059 ;;		Nothing
 15060 ;; This function is called by:
 15061 ;;		_EUSART_Initialize
 15062 ;;		_EUSART_Receive_ISR
 15063 ;; This function uses a non-reentrant model
 15064 ;;
 15065                           
 15066     0895                     _EUSART_DefaultOverrunErrorHandler:	
 15067                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 15068                           
 15069     0895                     i1l4317:	
 15070                           ;incstack = 0
 15071                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 15072                           
 15073                           
 15074                           ;mcc_generated_files/eusart.c: 255:     RC1STAbits.CREN = 0;
 15075     0895  0022               	movlb	2	; select bank2
 15076     0896  121D               	bcf	29,4	;volatile
 15077                           
 15078                           ;mcc_generated_files/eusart.c: 256:     RC1STAbits.CREN = 1;
 15079     0897  161D               	bsf	29,4	;volatile
 15080     0898                     i1l1112:
 15081     0898  0008               	return
 15082     0899                     __end_of_EUSART_DefaultOverrunErrorHandler:
 15083                           
 15084                           	psect	text79
 15085     088A                     __ptext79:	
 15086 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 15087 ;; Defined at:
 15088 ;;		line 250 in file "mcc_generated_files/eusart.c"
 15089 ;; Parameters:    Size  Location     Type
 15090 ;;		None
 15091 ;; Auto vars:     Size  Location     Type
 15092 ;;		None
 15093 ;; Return value:  Size  Location     Type
 15094 ;;                  1    wreg      void 
 15095 ;; Registers used:
 15096 ;;		None
 15097 ;; Tracked objects:
 15098 ;;		On entry : 0/0
 15099 ;;		On exit  : 0/0
 15100 ;;		Unchanged: 0/0
 15101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15106 ;;Total ram usage:        0 bytes
 15107 ;; Hardware stack levels used: 1
 15108 ;; This function calls:
 15109 ;;		Nothing
 15110 ;; This function is called by:
 15111 ;;		_EUSART_Initialize
 15112 ;;		_EUSART_Receive_ISR
 15113 ;; This function uses a non-reentrant model
 15114 ;;
 15115                           
 15116     088A                     _EUSART_DefaultFramingErrorHandler:	
 15117                           ;psect for function _EUSART_DefaultFramingErrorHandler
 15118                           
 15119     088A                     i1l1109:	
 15120                           ;incstack = 0
 15121                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 15122                           
 15123     088A  0008               	return
 15124     088B                     __end_of_EUSART_DefaultFramingErrorHandler:
 15125                           
 15126                           	psect	text80
 15127     0891                     __ptext80:	
 15128 ;; *************** function _EUSART_DefaultErrorHandler *****************
 15129 ;; Defined at:
 15130 ;;		line 260 in file "mcc_generated_files/eusart.c"
 15131 ;; Parameters:    Size  Location     Type
 15132 ;;		None
 15133 ;; Auto vars:     Size  Location     Type
 15134 ;;		None
 15135 ;; Return value:  Size  Location     Type
 15136 ;;                  1    wreg      void 
 15137 ;; Registers used:
 15138 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15139 ;; Tracked objects:
 15140 ;;		On entry : 0/0
 15141 ;;		On exit  : 0/0
 15142 ;;		Unchanged: 0/0
 15143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15148 ;;Total ram usage:        0 bytes
 15149 ;; Hardware stack levels used: 1
 15150 ;; Hardware stack levels required when called: 1
 15151 ;; This function calls:
 15152 ;;		_EUSART_RxDataHandler
 15153 ;; This function is called by:
 15154 ;;		_EUSART_Initialize
 15155 ;;		_EUSART_Receive_ISR
 15156 ;; This function uses a non-reentrant model
 15157 ;;
 15158                           
 15159     0891                     _EUSART_DefaultErrorHandler:	
 15160                           ;psect for function _EUSART_DefaultErrorHandler
 15161                           
 15162     0891                     i1l4319:	
 15163                           ;incstack = 0
 15164                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 15165                           
 15166                           
 15167                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
 15168     0891  318B  2369  3188   	fcall	_EUSART_RxDataHandler
 15169     0894                     i1l1115:
 15170     0894  0008               	return
 15171     0895                     __end_of_EUSART_DefaultErrorHandler:
 15172                           
 15173                           	psect	text81
 15174     0B69                     __ptext81:	
 15175 ;; *************** function _EUSART_RxDataHandler *****************
 15176 ;; Defined at:
 15177 ;;		line 240 in file "mcc_generated_files/eusart.c"
 15178 ;; Parameters:    Size  Location     Type
 15179 ;;		None
 15180 ;; Auto vars:     Size  Location     Type
 15181 ;;		None
 15182 ;; Return value:  Size  Location     Type
 15183 ;;                  1    wreg      void 
 15184 ;; Registers used:
 15185 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15186 ;; Tracked objects:
 15187 ;;		On entry : 0/0
 15188 ;;		On exit  : 0/0
 15189 ;;		Unchanged: 0/0
 15190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15193 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15194 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15195 ;;Total ram usage:        1 bytes
 15196 ;; Hardware stack levels used: 1
 15197 ;; This function calls:
 15198 ;;		Nothing
 15199 ;; This function is called by:
 15200 ;;		_EUSART_Receive_ISR
 15201 ;;		_EUSART_DefaultErrorHandler
 15202 ;; This function uses a non-reentrant model
 15203 ;;
 15204                           
 15205     0B69                     _EUSART_RxDataHandler:	
 15206                           ;psect for function _EUSART_RxDataHandler
 15207                           
 15208     0B69                     i1l4095:	
 15209                           ;incstack = 0
 15210                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 15211                           
 15212                           
 15213                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 15214     0B69  0020               	movlb	0	; select bank0
 15215     0B6A  0835               	movf	_eusartRxHead,w
 15216     0B6B  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
 15217     0B6C  0086               	movwf	6
 15218     0B6D  0187               	clrf	7
 15219     0B6E  0022               	movlb	2	; select bank2
 15220     0B6F  0819               	movf	25,w	;volatile
 15221     0B70  0081               	movwf	1
 15222     0B71                     i1l4097:
 15223     0B71  3001               	movlw	1
 15224     0B72  00F0               	movwf	??_EUSART_RxDataHandler
 15225     0B73  0870               	movf	??_EUSART_RxDataHandler,w
 15226     0B74  0020               	movlb	0	; select bank0
 15227     0B75  07B5               	addwf	_eusartRxHead,f	;volatile
 15228     0B76                     i1l4099:
 15229                           
 15230                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 15231     0B76  3008               	movlw	8
 15232     0B77  0235               	subwf	_eusartRxHead,w	;volatile
 15233     0B78  1C03               	skipc
 15234     0B79  2B7B               	goto	u294_21
 15235     0B7A  2B7C               	goto	u294_20
 15236     0B7B                     u294_21:
 15237     0B7B  2B7D               	goto	i1l4103
 15238     0B7C                     u294_20:
 15239     0B7C                     i1l4101:
 15240                           
 15241                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
 15242     0B7C  01B5               	clrf	_eusartRxHead	;volatile
 15243     0B7D                     i1l4103:
 15244                           
 15245                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
 15246     0B7D  3001               	movlw	1
 15247     0B7E  00F0               	movwf	??_EUSART_RxDataHandler
 15248     0B7F  0870               	movf	??_EUSART_RxDataHandler,w
 15249     0B80  07B4               	addwf	_eusartRxCount,f	;volatile
 15250     0B81                     i1l1106:
 15251     0B81  0008               	return
 15252     0B82                     __end_of_EUSART_RxDataHandler:
 15253                           
 15254                           	psect	text82
 15255     0955                     __ptext82:	
 15256 ;; *************** function _ADCC_ThresholdISR *****************
 15257 ;; Defined at:
 15258 ;;		line 307 in file "mcc_generated_files/adcc.c"
 15259 ;; Parameters:    Size  Location     Type
 15260 ;;		None
 15261 ;; Auto vars:     Size  Location     Type
 15262 ;;		None
 15263 ;; Return value:  Size  Location     Type
 15264 ;;                  1    wreg      void 
 15265 ;; Registers used:
 15266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15267 ;; Tracked objects:
 15268 ;;		On entry : 0/0
 15269 ;;		On exit  : 0/0
 15270 ;;		Unchanged: 0/0
 15271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15276 ;;Total ram usage:        0 bytes
 15277 ;; Hardware stack levels used: 1
 15278 ;; Hardware stack levels required when called: 5
 15279 ;; This function calls:
 15280 ;;		NULL
 15281 ;;		_ADCC_DefaultInterruptHandler
 15282 ;;		_ADCC_ThresholdISR_mTouch
 15283 ;; This function is called by:
 15284 ;;		_INTERRUPT_InterruptManager
 15285 ;; This function uses a non-reentrant model
 15286 ;;
 15287                           
 15288     0955                     _ADCC_ThresholdISR:	
 15289                           ;psect for function _ADCC_ThresholdISR
 15290                           
 15291     0955                     i1l4371:	
 15292                           ;incstack = 0
 15293                           ; Regs used in _ADCC_ThresholdISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15294                           
 15295                           
 15296                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADTIF = 0;
 15297     0955  002E               	movlb	14	; select bank14
 15298     0956  108D               	bcf	13,1	;volatile
 15299     0957                     i1l4373:
 15300                           
 15301                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADTI_InterruptHandler)
 15302     0957  0020               	movlb	0	; select bank0
 15303     0958  086B               	movf	_ADCC_ADTI_InterruptHandler,w
 15304     0959  046C               	iorwf	_ADCC_ADTI_InterruptHandler+1,w
 15305     095A  1903               	btfsc	3,2
 15306     095B  295D               	goto	u312_21
 15307     095C  295E               	goto	u312_20
 15308     095D                     u312_21:
 15309     095D  2963               	goto	i1l558
 15310     095E                     u312_20:
 15311     095E                     i1l4375:
 15312                           
 15313                           ;mcc_generated_files/adcc.c: 313:         ADCC_ADTI_InterruptHandler();
 15314     095E  086C               	movf	_ADCC_ADTI_InterruptHandler+1,w
 15315     095F  008A               	movwf	10
 15316     0960  086B               	movf	_ADCC_ADTI_InterruptHandler,w
 15317     0961  000A               	callw
 15318     0962  3189               	pagesel	$
 15319     0963                     i1l558:
 15320     0963  0008               	return
 15321     0964                     __end_of_ADCC_ThresholdISR:
 15322                           
 15323                           	psect	text83
 15324     0889                     __ptext83:	
 15325 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 15326 ;; Defined at:
 15327 ;;		line 319 in file "mcc_generated_files/adcc.c"
 15328 ;; Parameters:    Size  Location     Type
 15329 ;;		None
 15330 ;; Auto vars:     Size  Location     Type
 15331 ;;		None
 15332 ;; Return value:  Size  Location     Type
 15333 ;;                  1    wreg      void 
 15334 ;; Registers used:
 15335 ;;		None
 15336 ;; Tracked objects:
 15337 ;;		On entry : 0/0
 15338 ;;		On exit  : 0/0
 15339 ;;		Unchanged: 0/0
 15340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15345 ;;Total ram usage:        0 bytes
 15346 ;; Hardware stack levels used: 1
 15347 ;; This function calls:
 15348 ;;		Nothing
 15349 ;; This function is called by:
 15350 ;;		_ADCC_Initialize
 15351 ;;		_ADCC_ThresholdISR
 15352 ;; This function uses a non-reentrant model
 15353 ;;
 15354                           
 15355     0889                     _ADCC_DefaultInterruptHandler:	
 15356                           ;psect for function _ADCC_DefaultInterruptHandler
 15357                           
 15358     0889                     i1l564:	
 15359                           ;incstack = 0
 15360                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 15361                           
 15362     0889  0008               	return
 15363     088A                     __end_of_ADCC_DefaultInterruptHandler:
 15364                           
 15365                           	psect	text84
 15366     08A6                     __ptext84:	
 15367 ;; *************** function _ADCC_ThresholdISR_mTouch *****************
 15368 ;; Defined at:
 15369 ;;		line 489 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 15370 ;; Parameters:    Size  Location     Type
 15371 ;;		None
 15372 ;; Auto vars:     Size  Location     Type
 15373 ;;		None
 15374 ;; Return value:  Size  Location     Type
 15375 ;;                  1    wreg      void 
 15376 ;; Registers used:
 15377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15378 ;; Tracked objects:
 15379 ;;		On entry : 0/0
 15380 ;;		On exit  : 0/0
 15381 ;;		Unchanged: 0/0
 15382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15387 ;;Total ram usage:        0 bytes
 15388 ;; Hardware stack levels used: 1
 15389 ;; Hardware stack levels required when called: 4
 15390 ;; This function calls:
 15391 ;;		_MTOUCH_Sensor_Service
 15392 ;; This function is called by:
 15393 ;;		_MTOUCH_Sensor_ADCC_Initialize
 15394 ;;		_ADCC_ThresholdISR
 15395 ;; This function uses a non-reentrant model
 15396 ;;
 15397                           
 15398     08A6                     _ADCC_ThresholdISR_mTouch:	
 15399                           ;psect for function _ADCC_ThresholdISR_mTouch
 15400                           
 15401     08A6                     i1l4313:	
 15402                           ;incstack = 0
 15403                           ; Regs used in _ADCC_ThresholdISR_mTouch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15404                           
 15405                           
 15406                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 492:     PIR1bits.ADTIF = 0;
 15407     08A6  002E               	movlb	14	; select bank14
 15408     08A7  108D               	bcf	13,1	;volatile
 15409     08A8                     i1l4315:
 15410                           
 15411                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 493:     MTOUCH_Sensor_Service();
 15412     08A8  3186  26C6  3188   	fcall	_MTOUCH_Sensor_Service
 15413     08AB                     i1l762:
 15414     08AB  0008               	return
 15415     08AC                     __end_of_ADCC_ThresholdISR_mTouch:
 15416                           
 15417                           	psect	text85
 15418     06C6                     __ptext85:	
 15419 ;; *************** function _MTOUCH_Sensor_Service *****************
 15420 ;; Defined at:
 15421 ;;		line 502 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 15422 ;; Parameters:    Size  Location     Type
 15423 ;;		None
 15424 ;; Auto vars:     Size  Location     Type
 15425 ;;  sensor          1   12[COMMON] PTR struct .
 15426 ;;		 -> mtouch_sensor(9), 
 15427 ;; Return value:  Size  Location     Type
 15428 ;;                  1    wreg      void 
 15429 ;; Registers used:
 15430 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15431 ;; Tracked objects:
 15432 ;;		On entry : 0/0
 15433 ;;		On exit  : 0/0
 15434 ;;		Unchanged: 0/0
 15435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15437 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15438 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15439 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15440 ;;Total ram usage:        3 bytes
 15441 ;; Hardware stack levels used: 1
 15442 ;; Hardware stack levels required when called: 3
 15443 ;; This function calls:
 15444 ;;		_Sensor_autoCalibration
 15445 ;;		_Sensor_setSampled
 15446 ;;		i1_Sensor_SetTrisBit
 15447 ;;		i1_Sensor_isCalibrated
 15448 ;;		i1_Sensor_scheduleNextScan
 15449 ;;		i1___bmul
 15450 ;;		i1_abs
 15451 ;; This function is called by:
 15452 ;;		_ADCC_ThresholdISR_mTouch
 15453 ;; This function uses a non-reentrant model
 15454 ;;
 15455                           
 15456     06C6                     _MTOUCH_Sensor_Service:	
 15457                           ;psect for function _MTOUCH_Sensor_Service
 15458                           
 15459     06C6                     i1l4031:	
 15460                           ;incstack = 0
 15461                           ; Regs used in _MTOUCH_Sensor_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15462                           
 15463                           
 15464                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 504:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 506:     Sensor_SetTrisBit(currentScanSensor,0);
 15465     06C6  01F0               	clrf	i1Sensor_SetTrisBit@TrisBit
 15466     06C7  0020               	movlb	0	; select bank0
 15467     06C8  0840               	movf	_currentScanSensor,w
 15468     06C9  318B  2324  3186   	fcall	i1_Sensor_SetTrisBit
 15469     06CC                     i1l4033:
 15470                           
 15471                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 508:     if(scanInterrupted)
 15472     06CC  0020               	movlb	0	; select bank0
 15473     06CD  083E               	movf	_scanInterrupted,w	;volatile
 15474     06CE  1903               	btfsc	3,2
 15475     06CF  2ED1               	goto	u287_21
 15476     06D0  2ED2               	goto	u287_20
 15477     06D1                     u287_21:
 15478     06D1  2ED5               	goto	i1l765
 15479     06D2                     u287_20:
 15480     06D2                     i1l4035:
 15481                           
 15482                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 509:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 510:         ADCON0bits.ADON = 0;
 15483     06D2  0021               	movlb	1	; select bank1
 15484     06D3  1393               	bcf	19,7	;volatile
 15485                           
 15486                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 511:     }
 15487     06D4  2F34               	goto	i1l4053
 15488     06D5                     i1l765:	
 15489                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 512:     else
 15490                           
 15491                           
 15492                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 513:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 514:         ADCON0bits.ADON = 0;
 15493     06D5  0021               	movlb	1	; select bank1
 15494     06D6  1393               	bcf	19,7	;volatile
 15495     06D7                     i1l4037:
 15496                           
 15497                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 515:         sensor = &mtouch_sensor[curren
      +                          tScanSensor];
 15498     06D7  3009               	movlw	9
 15499     06D8  00F0               	movwf	i1___bmul@multiplicand
 15500     06D9  0020               	movlb	0	; select bank0
 15501     06DA  0840               	movf	_currentScanSensor,w
 15502     06DB  318A  228D  3186   	fcall	i1___bmul
 15503     06DE  3E43               	addlw	(low (_mtouch_sensor| 0))& (0+255)
 15504     06DF  00FC               	movwf	MTOUCH_Sensor_Service@sensor
 15505     06E0                     i1l4039:
 15506                           
 15507                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 516:         if(!Sensor_isCalibrated(sensor
      +                          ))
 15508     06E0  087C               	movf	MTOUCH_Sensor_Service@sensor,w
 15509     06E1  3189  2127  3186   	fcall	i1_Sensor_isCalibrated
 15510     06E4  3A00               	xorlw	0
 15511     06E5  1D03               	skipz
 15512     06E6  2EE8               	goto	u288_21
 15513     06E7  2EE9               	goto	u288_20
 15514     06E8                     u288_21:
 15515     06E8  2EEE               	goto	i1l4043
 15516     06E9                     u288_20:
 15517     06E9                     i1l4041:
 15518                           
 15519                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 517:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 518:             Sensor_autoCalibration(sensor);
 15520     06E9  087C               	movf	MTOUCH_Sensor_Service@sensor,w
 15521     06EA  3185  2526  3186   	fcall	_Sensor_autoCalibration
 15522                           
 15523                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 519:         }
 15524     06ED  2EF2               	goto	i1l768
 15525     06EE                     i1l4043:
 15526                           
 15527                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 521:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 522:             Sensor_setSampled(sensor);
 15528     06EE  087C               	movf	MTOUCH_Sensor_Service@sensor,w
 15529     06EF  3188  20C4  3186   	fcall	_Sensor_setSampled
 15530     06F2                     i1l768:	
 15531                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 523:         }
 15532                           
 15533                           
 15534                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 525:         if((mtouch_sensor_packetsample
      +                          _t)
 15535     06F2  0020               	movlb	0	; select bank0
 15536     06F3  3540               	lslf	_currentScanSensor,w
 15537     06F4  3E31               	addlw	(low (_packet_sample| 0))& (0+255)
 15538     06F5  0086               	movwf	6
 15539     06F6  0187               	clrf	7
 15540     06F7  3F40               	moviw [0]fsr1
 15541     06F8  00FA               	movwf	??_MTOUCH_Sensor_Service
 15542     06F9  3F41               	moviw [1]fsr1
 15543     06FA  00FB               	movwf	??_MTOUCH_Sensor_Service+1
 15544     06FB  0022               	movlb	2	; select bank2
 15545     06FC  0814               	movf	20,w	;volatile
 15546     06FD  027A               	subwf	??_MTOUCH_Sensor_Service,w
 15547     06FE  00F0               	movwf	i1abs@a
 15548     06FF  0815               	movf	21,w	;volatile
 15549     0700  3B7B               	subwfb	??_MTOUCH_Sensor_Service+1,w
 15550     0701  00F1               	movwf	i1abs@a+1
 15551     0702  3189  2174  3186   	fcall	i1_abs
 15552     0705  3000               	movlw	0
 15553     0706  0271               	subwf	?i1_abs+1,w
 15554     0707  3065               	movlw	101
 15555     0708  1903               	skipnz
 15556     0709  0270               	subwf	?i1_abs,w
 15557     070A  1C03               	skipc
 15558     070B  2F0D               	goto	u289_21
 15559     070C  2F0E               	goto	u289_20
 15560     070D                     u289_21:
 15561     070D  2F1A               	goto	i1l4047
 15562     070E                     u289_20:
 15563     070E                     i1l4045:
 15564                           
 15565                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 528:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 529:             mtouch_sensor[currentScanSensor].active = 1;
 15566     070E  3009               	movlw	9
 15567     070F  00F0               	movwf	i1___bmul@multiplicand
 15568     0710  0020               	movlb	0	; select bank0
 15569     0711  0840               	movf	_currentScanSensor,w
 15570     0712  318A  228D  3186   	fcall	i1___bmul
 15571     0715  3E4B               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
 15572     0716  0086               	movwf	6
 15573     0717  0187               	clrf	7
 15574     0718  1501               	bsf	1,2
 15575                           
 15576                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 530:         }
 15577     0719  2F25               	goto	i1l4049
 15578     071A                     i1l4047:
 15579                           
 15580                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 532:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 533:             mtouch_sensor[currentScanSensor].active = 0;
 15581     071A  3009               	movlw	9
 15582     071B  00F0               	movwf	i1___bmul@multiplicand
 15583     071C  0020               	movlb	0	; select bank0
 15584     071D  0840               	movf	_currentScanSensor,w
 15585     071E  318A  228D  3186   	fcall	i1___bmul
 15586     0721  3E4B               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
 15587     0722  0086               	movwf	6
 15588     0723  0187               	clrf	7
 15589     0724  1101               	bcf	1,2
 15590     0725                     i1l4049:
 15591                           
 15592                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 541:         if(!lowpowerActivated)
 15593     0725  0020               	movlb	0	; select bank0
 15594     0726  083D               	movf	_lowpowerActivated,w
 15595     0727  1D03               	btfss	3,2
 15596     0728  2F2A               	goto	u290_21
 15597     0729  2F2B               	goto	u290_20
 15598     072A                     u290_21:
 15599     072A  2F34               	goto	i1l4053
 15600     072B                     u290_20:
 15601     072B                     i1l4051:
 15602                           
 15603                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 542:             packet_sample[currentScanS
      +                          ensor] = ADFLTR;
 15604     072B  3540               	lslf	_currentScanSensor,w
 15605     072C  3E31               	addlw	(low (_packet_sample| 0))& (0+255)
 15606     072D  0086               	movwf	6
 15607     072E  0187               	clrf	7
 15608     072F  0022               	movlb	2	; select bank2
 15609     0730  0814               	movf	20,w	;volatile
 15610     0731  3FC0               	movwi [0]fsr1
 15611     0732  0815               	movf	21,w	;volatile
 15612     0733  3FC1               	movwi [1]fsr1
 15613     0734                     i1l4053:
 15614                           
 15615                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 545:     if(lowpowerActivated == 1u)
 15616     0734  0020               	movlb	0	; select bank0
 15617     0735  033D               	decf	_lowpowerActivated,w
 15618     0736  1D03               	btfss	3,2
 15619     0737  2F39               	goto	u291_21
 15620     0738  2F3A               	goto	u291_20
 15621     0739                     u291_21:
 15622     0739  2F3C               	goto	i1l4057
 15623     073A                     u291_20:
 15624     073A                     i1l4055:
 15625                           
 15626                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 546:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 547:         sampling_flag = 0;
 15627     073A  01BF               	clrf	_sampling_flag
 15628                           
 15629                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 548:     }
 15630     073B  2F3F               	goto	i1l774
 15631     073C                     i1l4057:
 15632                           
 15633                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 550:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 551:         Sensor_scheduleNextScan();
 15634     073C  3183  23EC  3186   	fcall	i1_Sensor_scheduleNextScan
 15635     073F                     i1l774:
 15636     073F  0008               	return
 15637     0740                     __end_of_MTOUCH_Sensor_Service:
 15638                           
 15639                           	psect	text86
 15640     03EC                     __ptext86:	
 15641 ;; *************** function i1_Sensor_scheduleNextScan *****************
 15642 ;; Defined at:
 15643 ;;		line 357 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 15644 ;; Parameters:    Size  Location     Type
 15645 ;;		None
 15646 ;; Auto vars:     Size  Location     Type
 15647 ;;  sensor          1    9[COMMON] PTR struct .
 15648 ;;		 -> mtouch_sensor(9), 
 15649 ;;  skipScan        1    8[COMMON] _Bool 
 15650 ;;  state           1    7[COMMON] _Bool 
 15651 ;; Return value:  Size  Location     Type
 15652 ;;                  1    wreg      void 
 15653 ;; Registers used:
 15654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15655 ;; Tracked objects:
 15656 ;;		On entry : 0/0
 15657 ;;		On exit  : 0/0
 15658 ;;		Unchanged: 0/0
 15659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15661 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15662 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15663 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15664 ;;Total ram usage:        5 bytes
 15665 ;; Hardware stack levels used: 1
 15666 ;; Hardware stack levels required when called: 2
 15667 ;; This function calls:
 15668 ;;		i1_MTOUCH_Sensor_isEnabled
 15669 ;;		i1_MTOUCH_Sensor_wasSampled
 15670 ;;		i1_Sensor_SetTrisBit
 15671 ;;		i1_Sensor_isCalibrated
 15672 ;;		i1_Sensor_isCalibratingAcqTime
 15673 ;;		i1___bmul
 15674 ;; This function is called by:
 15675 ;;		_MTOUCH_Sensor_Service
 15676 ;; This function uses a non-reentrant model
 15677 ;;
 15678                           
 15679     03EC                     i1_Sensor_scheduleNextScan:	
 15680                           ;psect for function i1_Sensor_scheduleNextScan
 15681                           
 15682     03EC                     i1l3809:	
 15683                           ;incstack = 0
 15684                           ; Regs used in i1_Sensor_scheduleNextScan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15685                           
 15686                           
 15687                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 359:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 360:     _Bool skipScan = (_Bool)0;
 15688     03EC  01F8               	clrf	i1Sensor_scheduleNextScan@skipScan
 15689     03ED                     i1l3811:
 15690                           
 15691                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 361:     _Bool state = (_Bool)GIE;
 15692     03ED  3000               	movlw	0
 15693     03EE  1B8B               	btfsc	11,7	;volatile
 15694     03EF  3001               	movlw	1
 15695     03F0  00F7               	movwf	i1Sensor_scheduleNextScan@state
 15696                           
 15697                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 364:     while(MTOUCH_Sensor_wasSampled(cur
      +                          rentScanSensor) || !MTOUCH_Sensor_isEnabled(currentScanSensor))
 15698     03F1  2C01               	goto	i1l3819
 15699     03F2                     i1l3813:
 15700                           
 15701                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 365:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 366:         if(++currentScanSensor == (1u))
 15702     03F2  3001               	movlw	1
 15703     03F3  00F5               	movwf	??i1_Sensor_scheduleNextScan
 15704     03F4  0875               	movf	??i1_Sensor_scheduleNextScan,w
 15705     03F5  0020               	movlb	0	; select bank0
 15706     03F6  07C0               	addwf	_currentScanSensor,f
 15707     03F7  0340               	decf	_currentScanSensor,w
 15708     03F8  1D03               	btfss	3,2
 15709     03F9  2BFB               	goto	u253_21
 15710     03FA  2BFC               	goto	u253_20
 15711     03FB                     u253_21:
 15712     03FB  2C01               	goto	i1l3819
 15713     03FC                     u253_20:
 15714     03FC                     i1l3815:
 15715                           
 15716                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 367:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 368:             currentScanSensor = 0;
 15717     03FC  01C0               	clrf	_currentScanSensor
 15718                           
 15719                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 369:             sampling_flag = 0;
 15720     03FD  01BF               	clrf	_sampling_flag
 15721     03FE                     i1l3817:
 15722                           
 15723                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 370:             skipScan = 1;
 15724     03FE  01F8               	clrf	i1Sensor_scheduleNextScan@skipScan
 15725     03FF  0AF8               	incf	i1Sensor_scheduleNextScan@skipScan,f
 15726                           
 15727                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 371:             break;
 15728     0400  2C15               	goto	i1l3823
 15729     0401                     i1l3819:
 15730                           
 15731                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 364:     while(MTOUCH_Sensor_wasSampled(cur
      +                          rentScanSensor) || !MTOUCH_Sensor_isEnabled(currentScanSensor))
 15732     0401  0020               	movlb	0	; select bank0
 15733     0402  0840               	movf	_currentScanSensor,w
 15734     0403  318A  223D  3183   	fcall	i1_MTOUCH_Sensor_wasSampled
 15735     0406  3A00               	xorlw	0
 15736     0407  1D03               	skipz
 15737     0408  2C0A               	goto	u254_21
 15738     0409  2C0B               	goto	u254_20
 15739     040A                     u254_21:
 15740     040A  2BF2               	goto	i1l3813
 15741     040B                     u254_20:
 15742     040B                     i1l3821:
 15743     040B  0020               	movlb	0	; select bank0
 15744     040C  0840               	movf	_currentScanSensor,w
 15745     040D  318A  2229  3183   	fcall	i1_MTOUCH_Sensor_isEnabled
 15746     0410  3A00               	xorlw	0
 15747     0411  1903               	skipnz
 15748     0412  2C14               	goto	u255_21
 15749     0413  2C15               	goto	u255_20
 15750     0414                     u255_21:
 15751     0414  2BF2               	goto	i1l3813
 15752     0415                     u255_20:
 15753     0415                     i1l3823:
 15754                           
 15755                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 375:     if(skipScan==0)
 15756     0415  0878               	movf	i1Sensor_scheduleNextScan@skipScan,w
 15757     0416  1D03               	btfss	3,2
 15758     0417  2C19               	goto	u256_21
 15759     0418  2C1A               	goto	u256_20
 15760     0419                     u256_21:
 15761     0419  2C8E               	goto	i1l738
 15762     041A                     u256_20:
 15763     041A                     i1l3825:
 15764                           
 15765                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 376:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 377:         sensor = &mtouch_sensor[currentScanSensor];
 15766     041A  3009               	movlw	9
 15767     041B  00F0               	movwf	i1___bmul@multiplicand
 15768     041C  0020               	movlb	0	; select bank0
 15769     041D  0840               	movf	_currentScanSensor,w
 15770     041E  318A  228D  3183   	fcall	i1___bmul
 15771     0421  3E43               	addlw	(low (_mtouch_sensor| 0))& (0+255)
 15772     0422  00F9               	movwf	i1Sensor_scheduleNextScan@sensor
 15773     0423                     i1l3827:
 15774                           
 15775                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 378:         if(Sensor_isCalibrated(sensor)
      +                          )
 15776     0423  0879               	movf	i1Sensor_scheduleNextScan@sensor,w
 15777     0424  3189  2127  3183   	fcall	i1_Sensor_isCalibrated
 15778     0427  3A00               	xorlw	0
 15779     0428  1903               	skipnz
 15780     0429  2C2B               	goto	u257_21
 15781     042A  2C2C               	goto	u257_20
 15782     042B                     u257_21:
 15783     042B  2C38               	goto	i1l3831
 15784     042C                     u257_20:
 15785     042C                     i1l3829:
 15786                           
 15787                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 379:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 380:             ADACQ = (mtouch_sensor_time_t)sensor->acquisition_time;
 15788     042C  0879               	movf	i1Sensor_scheduleNextScan@sensor,w
 15789     042D  0086               	movwf	6
 15790     042E  0187               	clrf	7
 15791     042F  3F43               	moviw [3]fsr1
 15792     0430  0021               	movlb	1	; select bank1
 15793     0431  009D               	movwf	29	;volatile
 15794                           
 15795                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 381:             ADPRE = (mtouch_sensor_tim
      +                          e_t)sensor->precharge_time;
 15796     0432  0879               	movf	i1Sensor_scheduleNextScan@sensor,w
 15797     0433  0086               	movwf	6
 15798     0434  0187               	clrf	7
 15799     0435  3F42               	moviw [2]fsr1
 15800     0436  009C               	movwf	28	;volatile
 15801                           
 15802                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 382:         }
 15803     0437  2C52               	goto	i1l3837
 15804     0438                     i1l3831:
 15805                           
 15806                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 384:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 385:             if(Sensor_isCalibratingAcqTime(sensor))
 15807     0438  0879               	movf	i1Sensor_scheduleNextScan@sensor,w
 15808     0439  3188  20D9  3183   	fcall	i1_Sensor_isCalibratingAcqTime
 15809     043C  3A00               	xorlw	0
 15810     043D  1903               	skipnz
 15811     043E  2C40               	goto	u258_21
 15812     043F  2C41               	goto	u258_20
 15813     0440                     u258_21:
 15814     0440  2C4D               	goto	i1l3835
 15815     0441                     u258_20:
 15816     0441                     i1l3833:
 15817                           
 15818                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 386:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 387:                 ADPRE = (mtouch_sensor_time_t)sensor->precharge
      +                          _time;
 15819     0441  0879               	movf	i1Sensor_scheduleNextScan@sensor,w
 15820     0442  0086               	movwf	6
 15821     0443  0187               	clrf	7
 15822     0444  3F42               	moviw [2]fsr1
 15823     0445  0021               	movlb	1	; select bank1
 15824     0446  009C               	movwf	28	;volatile
 15825                           
 15826                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 388:                 ADACQ = (mtouch_sensor
      +                          _time_t)sensor->acquisition_time;
 15827     0447  0879               	movf	i1Sensor_scheduleNextScan@sensor,w
 15828     0448  0086               	movwf	6
 15829     0449  0187               	clrf	7
 15830     044A  3F43               	moviw [3]fsr1
 15831     044B  009D               	movwf	29	;volatile
 15832                           
 15833                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 389:             }
 15834     044C  2C52               	goto	i1l3837
 15835     044D                     i1l3835:
 15836                           
 15837                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 391:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 392:                 ADPRE = ((mtouch_sensor_time_t)((mtouch_sensor_
      +                          time_t)48 << (uint8_t)0));
 15838     044D  3030               	movlw	48
 15839     044E  0021               	movlb	1	; select bank1
 15840     044F  009C               	movwf	28	;volatile
 15841                           
 15842                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 393:                 ADACQ = ((mtouch_senso
      +                          r_time_t)((mtouch_sensor_time_t)48 << (uint8_t)0));
 15843     0450  3030               	movlw	48
 15844     0451  009D               	movwf	29	;volatile
 15845     0452                     i1l3837:
 15846                           
 15847                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 397:         ADPRE +=(uint8_t)sample_delay;
 15848     0452  0020               	movlb	0	; select bank0
 15849     0453  083B               	movf	_sample_delay,w	;volatile
 15850     0454  00F5               	movwf	??i1_Sensor_scheduleNextScan
 15851     0455  0875               	movf	??i1_Sensor_scheduleNextScan,w
 15852     0456  0021               	movlb	1	; select bank1
 15853     0457  079C               	addwf	28,f	;volatile
 15854     0458                     i1l3839:
 15855                           
 15856                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 398:         ADPCH = (uint8_t)sensor->adpch
      +                          ;
 15857     0458  0879               	movf	i1Sensor_scheduleNextScan@sensor,w
 15858     0459  0086               	movwf	6
 15859     045A  0187               	clrf	7
 15860     045B  3F41               	moviw [1]fsr1
 15861     045C  009E               	movwf	30	;volatile
 15862                           
 15863                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 399:         ADRPT = (uint8_t)(sensor->over
      +                          sampling>>1);
 15864     045D  0879               	movf	i1Sensor_scheduleNextScan@sensor,w
 15865     045E  3E04               	addlw	4
 15866     045F  0086               	movwf	6
 15867     0460  0187               	clrf	7
 15868     0461  3601               	lsrf	1,w
 15869     0462  0022               	movlb	2	; select bank2
 15870     0463  008D               	movwf	13	;volatile
 15871     0464                     i1l3841:
 15872                           
 15873                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 400:         ADCAP = (uint8_t)sensor->addca
      +                          p;
 15874     0464  0879               	movf	i1Sensor_scheduleNextScan@sensor,w
 15875     0465  0086               	movwf	6
 15876     0466  0187               	clrf	7
 15877     0467  3F45               	moviw [5]fsr1
 15878     0468  0021               	movlb	1	; select bank1
 15879     0469  009B               	movwf	27	;volatile
 15880     046A                     i1l3843:
 15881                           
 15882                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 401:         ADCON0bits.ADON = 1;
 15883     046A  1793               	bsf	19,7	;volatile
 15884     046B                     i1l3845:
 15885                           
 15886                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 402:         sampling_flag= 1;
 15887     046B  0020               	movlb	0	; select bank0
 15888     046C  01BF               	clrf	_sampling_flag
 15889     046D  0ABF               	incf	_sampling_flag,f
 15890     046E                     i1l3847:
 15891                           
 15892                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 403:         Sensor_SetTrisBit(currentScanS
      +                          ensor,1);
 15893     046E  01F0               	clrf	i1Sensor_SetTrisBit@TrisBit
 15894     046F  0AF0               	incf	i1Sensor_SetTrisBit@TrisBit,f
 15895     0470  0840               	movf	_currentScanSensor,w
 15896     0471  318B  2324  3183   	fcall	i1_Sensor_SetTrisBit
 15897     0474                     i1l3849:
 15898                           
 15899                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 404:         GIE = 0;
 15900     0474  138B               	bcf	11,7	;volatile
 15901     0475                     i1l3851:
 15902                           
 15903                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 405:         ADCON0bits.GO = 1;
 15904     0475  0021               	movlb	1	; select bank1
 15905     0476  1413               	bsf	19,0	;volatile
 15906     0477                     i1l3853:
 15907                           
 15908                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 406:         ADACC = ((mtouch_sensor_packet
      +                          sample_t)(sensor->oversampling)<<9);
 15909     0477  0879               	movf	i1Sensor_scheduleNextScan@sensor,w
 15910     0478  3E04               	addlw	4
 15911     0479  0086               	movwf	6
 15912     047A  0187               	clrf	7
 15913     047B  0801               	movf	1,w
 15914     047C  00F5               	movwf	??i1_Sensor_scheduleNextScan
 15915     047D  01F6               	clrf	??i1_Sensor_scheduleNextScan+1
 15916     047E  3009               	movlw	9
 15917     047F                     u259_25:
 15918     047F  35F5               	lslf	??i1_Sensor_scheduleNextScan,f
 15919     0480  0DF6               	rlf	??i1_Sensor_scheduleNextScan+1,f
 15920     0481  0B89               	decfsz	9,f
 15921     0482  2C7F               	goto	u259_25
 15922     0483  0875               	movf	??i1_Sensor_scheduleNextScan,w
 15923     0484  0090               	movwf	16	;volatile
 15924     0485  0876               	movf	??i1_Sensor_scheduleNextScan+1,w
 15925     0486  0091               	movwf	17	;volatile
 15926     0487                     i1l3855:
 15927                           
 15928                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 407:         GIE = state;
 15929     0487  0C77               	rrf	i1Sensor_scheduleNextScan@state,w
 15930     0488  1C03               	skipc
 15931     0489  138B               	bcf	11,7	;volatile
 15932     048A  1803               	skipnc
 15933     048B  178B               	bsf	11,7	;volatile
 15934     048C                     i1l3857:
 15935                           
 15936                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 408:         scanInterrupted = 0;
 15937     048C  0020               	movlb	0	; select bank0
 15938     048D  01BE               	clrf	_scanInterrupted	;volatile
 15939     048E                     i1l738:
 15940     048E  0008               	return
 15941     048F                     __end_ofi1_Sensor_scheduleNextScan:
 15942                           
 15943                           	psect	text87
 15944     0927                     __ptext87:	
 15945 ;; *************** function i1_Sensor_isCalibrated *****************
 15946 ;; Defined at:
 15947 ;;		line 839 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 15948 ;; Parameters:    Size  Location     Type
 15949 ;;  sensor          1    wreg     PTR struct .
 15950 ;;		 -> mtouch_sensor(9), 
 15951 ;; Auto vars:     Size  Location     Type
 15952 ;;  sensor          1    1[COMMON] PTR struct .
 15953 ;;		 -> mtouch_sensor(9), 
 15954 ;; Return value:  Size  Location     Type
 15955 ;;                  1    wreg      _Bool 
 15956 ;; Registers used:
 15957 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15958 ;; Tracked objects:
 15959 ;;		On entry : 0/0
 15960 ;;		On exit  : 0/0
 15961 ;;		Unchanged: 0/0
 15962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15964 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15965 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15966 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15967 ;;Total ram usage:        2 bytes
 15968 ;; Hardware stack levels used: 1
 15969 ;; This function calls:
 15970 ;;		Nothing
 15971 ;; This function is called by:
 15972 ;;		_MTOUCH_Sensor_Service
 15973 ;;		i1_Sensor_scheduleNextScan
 15974 ;; This function uses a non-reentrant model
 15975 ;;
 15976                           
 15977     0927                     i1_Sensor_isCalibrated:	
 15978                           ;psect for function i1_Sensor_isCalibrated
 15979                           
 15980                           
 15981                           ;incstack = 0
 15982                           ; Regs used in i1_Sensor_isCalibrated: [wreg+fsr1l+fsr1h+status,2+status,0]
 15983                           ;i1Sensor_isCalibrated@sensor stored from wreg
 15984     0927  00F1               	movwf	i1Sensor_isCalibrated@sensor
 15985     0928                     i1l3463:
 15986                           
 15987                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 839: static __attribute__((inline)) _Bool S
      +                          ensor_isCalibrated(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          840: {;mcc_generated_files/mtouch/mtouch_sensor.c: 841:     return (_Bool)sensor->calibr
      +                          ated;
 15988     0928  0871               	movf	i1Sensor_isCalibrated@sensor,w
 15989     0929  3E08               	addlw	8
 15990     092A  0086               	movwf	6
 15991     092B  0187               	clrf	7
 15992     092C  0C01               	rrf	1,w
 15993     092D  00F0               	movwf	??i1_Sensor_isCalibrated
 15994     092E  0CF0               	rrf	??i1_Sensor_isCalibrated,f
 15995     092F  0C70               	rrf	??i1_Sensor_isCalibrated,w
 15996     0930  3901               	andlw	1
 15997     0931                     i1l886:
 15998     0931  0008               	return
 15999     0932                     __end_ofi1_Sensor_isCalibrated:
 16000                           
 16001                           	psect	text88
 16002     0B24                     __ptext88:	
 16003 ;; *************** function i1_Sensor_SetTrisBit *****************
 16004 ;; Defined at:
 16005 ;;		line 208 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 16006 ;; Parameters:    Size  Location     Type
 16007 ;;  sensor          1    wreg     enum E11929
 16008 ;;  TrisBit         1    0[COMMON] unsigned char 
 16009 ;; Auto vars:     Size  Location     Type
 16010 ;;  sensor          1    3[COMMON] enum E11929
 16011 ;; Return value:  Size  Location     Type
 16012 ;;                  1    wreg      void 
 16013 ;; Registers used:
 16014 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 16015 ;; Tracked objects:
 16016 ;;		On entry : 0/0
 16017 ;;		On exit  : 0/0
 16018 ;;		Unchanged: 0/0
 16019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16020 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16022 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16023 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16024 ;;Total ram usage:        4 bytes
 16025 ;; Hardware stack levels used: 1
 16026 ;; This function calls:
 16027 ;;		Nothing
 16028 ;; This function is called by:
 16029 ;;		_MTOUCH_Sensor_Service
 16030 ;;		i1_Sensor_scheduleNextScan
 16031 ;; This function uses a non-reentrant model
 16032 ;;
 16033                           
 16034     0B24                     i1_Sensor_SetTrisBit:	
 16035                           ;psect for function i1_Sensor_SetTrisBit
 16036                           
 16037                           
 16038                           ;incstack = 0
 16039                           ; Regs used in i1_Sensor_SetTrisBit: [wreg-fsr0h+status,2+status,0]
 16040                           ;i1Sensor_SetTrisBit@sensor stored from wreg
 16041     0B24  00F3               	movwf	i1Sensor_SetTrisBit@sensor
 16042     0B25                     i1l3439:
 16043                           
 16044                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 208: static void Sensor_SetTrisBit(enum mto
      +                          uch_sensor_names sensor,uint8_t TrisBit);mcc_generated_files/mtouch/mtouch_sensor.c: 209
      +                          : {;mcc_generated_files/mtouch/mtouch_sensor.c: 210:     switch(sensor)
 16045     0B25  2B2D               	goto	i1l3445
 16046     0B26                     i1l3441:
 16047                           
 16048                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 213:             TRISCbits.TRISC3 = TrisBit
      +                          ;
 16049     0B26  0C70               	rrf	i1Sensor_SetTrisBit@TrisBit,w
 16050     0B27  0020               	movlb	0	; select bank0
 16051     0B28  1C03               	skipc
 16052     0B29  1193               	bcf	19,3	;volatile
 16053     0B2A  1803               	skipnc
 16054     0B2B  1593               	bsf	19,3	;volatile
 16055                           
 16056                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 214:             break;
 16057     0B2C  2B3A               	goto	i1l692
 16058     0B2D                     i1l3445:
 16059     0B2D  0873               	movf	i1Sensor_SetTrisBit@sensor,w
 16060     0B2E  00F1               	movwf	??i1_Sensor_SetTrisBit
 16061     0B2F  01F2               	clrf	??i1_Sensor_SetTrisBit+1
 16062                           
 16063                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16064                           ; Switch size 1, requested type "simple"
 16065                           ; Number of cases is 1, Range of values is 0 to 0
 16066                           ; switch strategies available:
 16067                           ; Name         Instructions Cycles
 16068                           ; simple_byte            4     3 (average)
 16069                           ; direct_byte            8     6 (fixed)
 16070                           ; jumptable            260     6 (fixed)
 16071                           ;	Chosen strategy is simple_byte
 16072     0B30  0872               	movf	??i1_Sensor_SetTrisBit+1,w
 16073     0B31  3A00               	xorlw	0	; case 0
 16074     0B32  1903               	skipnz
 16075     0B33  2B35               	goto	i1l4609
 16076     0B34  2B3A               	goto	i1l692
 16077     0B35                     i1l4609:
 16078                           
 16079                           ; Switch size 1, requested type "simple"
 16080                           ; Number of cases is 1, Range of values is 0 to 0
 16081                           ; switch strategies available:
 16082                           ; Name         Instructions Cycles
 16083                           ; simple_byte            4     3 (average)
 16084                           ; direct_byte            8     6 (fixed)
 16085                           ; jumptable            260     6 (fixed)
 16086                           ;	Chosen strategy is simple_byte
 16087     0B35  0871               	movf	??i1_Sensor_SetTrisBit,w
 16088     0B36  3A00               	xorlw	0	; case 0
 16089     0B37  1903               	skipnz
 16090     0B38  2B26               	goto	i1l3441
 16091     0B39  2B3A               	goto	i1l692
 16092     0B3A                     i1l692:
 16093     0B3A  0008               	return
 16094     0B3B                     __end_ofi1_Sensor_SetTrisBit:
 16095                           
 16096                           	psect	text89
 16097     0A3D                     __ptext89:	
 16098 ;; *************** function i1_MTOUCH_Sensor_wasSampled *****************
 16099 ;; Defined at:
 16100 ;;		line 879 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 16101 ;; Parameters:    Size  Location     Type
 16102 ;;  sensor          1    wreg     enum E11929
 16103 ;; Auto vars:     Size  Location     Type
 16104 ;;  sensor          1    4[COMMON] enum E11929
 16105 ;; Return value:  Size  Location     Type
 16106 ;;                  1    wreg      _Bool 
 16107 ;; Registers used:
 16108 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16109 ;; Tracked objects:
 16110 ;;		On entry : 0/0
 16111 ;;		On exit  : 0/0
 16112 ;;		Unchanged: 0/0
 16113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16115 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16117 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16118 ;;Total ram usage:        1 bytes
 16119 ;; Hardware stack levels used: 1
 16120 ;; Hardware stack levels required when called: 1
 16121 ;; This function calls:
 16122 ;;		i1___bmul
 16123 ;; This function is called by:
 16124 ;;		i1_Sensor_scheduleNextScan
 16125 ;; This function uses a non-reentrant model
 16126 ;;
 16127                           
 16128     0A3D                     i1_MTOUCH_Sensor_wasSampled:	
 16129                           ;psect for function i1_MTOUCH_Sensor_wasSampled
 16130                           
 16131                           
 16132                           ;incstack = 0
 16133                           ; Regs used in i1_MTOUCH_Sensor_wasSampled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 16134                           ;i1MTOUCH_Sensor_wasSampled@sensor stored from wreg
 16135     0A3D  00F4               	movwf	i1MTOUCH_Sensor_wasSampled@sensor
 16136     0A3E                     i1l3471:
 16137                           
 16138                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 879: _Bool MTOUCH_Sensor_wasSampled(enum mt
      +                          ouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 880: {;mcc_generat
      +                          ed_files/mtouch/mtouch_sensor.c: 881:     if(sensor < (1u))
 16139     0A3E  0874               	movf	i1MTOUCH_Sensor_wasSampled@sensor,w
 16140     0A3F  1D03               	btfss	3,2
 16141     0A40  2A42               	goto	u200_21
 16142     0A41  2A43               	goto	u200_20
 16143     0A42                     u200_21:
 16144     0A42  2A4F               	goto	i1l3479
 16145     0A43                     u200_20:
 16146     0A43                     i1l3473:
 16147                           
 16148                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 882:         return (_Bool)mtouch_sensor[se
      +                          nsor].sampled;
 16149     0A43  3009               	movlw	9
 16150     0A44  00F0               	movwf	i1___bmul@multiplicand
 16151     0A45  0874               	movf	i1MTOUCH_Sensor_wasSampled@sensor,w
 16152     0A46  318A  228D  318A   	fcall	i1___bmul
 16153     0A49  3E4B               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
 16154     0A4A  0086               	movwf	6
 16155     0A4B  0187               	clrf	7
 16156     0A4C  0C01               	rrf	1,w
 16157     0A4D  3901               	andlw	1
 16158     0A4E  2A50               	goto	i1l904
 16159     0A4F                     i1l3479:
 16160                           
 16161                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 884:         return 0;
 16162     0A4F  3000               	movlw	0
 16163     0A50                     i1l904:
 16164     0A50  0008               	return
 16165     0A51                     __end_ofi1_MTOUCH_Sensor_wasSampled:
 16166                           
 16167                           	psect	text90
 16168     0A29                     __ptext90:	
 16169 ;; *************** function i1_MTOUCH_Sensor_isEnabled *****************
 16170 ;; Defined at:
 16171 ;;		line 767 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 16172 ;; Parameters:    Size  Location     Type
 16173 ;;  sensor          1    wreg     enum E11929
 16174 ;; Auto vars:     Size  Location     Type
 16175 ;;  sensor          1    4[COMMON] enum E11929
 16176 ;; Return value:  Size  Location     Type
 16177 ;;                  1    wreg      _Bool 
 16178 ;; Registers used:
 16179 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16180 ;; Tracked objects:
 16181 ;;		On entry : 0/0
 16182 ;;		On exit  : 0/0
 16183 ;;		Unchanged: 0/0
 16184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16186 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16188 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16189 ;;Total ram usage:        1 bytes
 16190 ;; Hardware stack levels used: 1
 16191 ;; Hardware stack levels required when called: 1
 16192 ;; This function calls:
 16193 ;;		i1___bmul
 16194 ;; This function is called by:
 16195 ;;		i1_Sensor_scheduleNextScan
 16196 ;; This function uses a non-reentrant model
 16197 ;;
 16198                           
 16199     0A29                     i1_MTOUCH_Sensor_isEnabled:	
 16200                           ;psect for function i1_MTOUCH_Sensor_isEnabled
 16201                           
 16202                           
 16203                           ;incstack = 0
 16204                           ; Regs used in i1_MTOUCH_Sensor_isEnabled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 16205                           ;i1MTOUCH_Sensor_isEnabled@sensor stored from wreg
 16206     0A29  00F4               	movwf	i1MTOUCH_Sensor_isEnabled@sensor
 16207     0A2A                     i1l3451:
 16208                           
 16209                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 767: _Bool MTOUCH_Sensor_isEnabled(enum mto
      +                          uch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 768: {;mcc_generate
      +                          d_files/mtouch/mtouch_sensor.c: 769:     if(sensor < (1u))
 16210     0A2A  0874               	movf	i1MTOUCH_Sensor_isEnabled@sensor,w
 16211     0A2B  1D03               	btfss	3,2
 16212     0A2C  2A2E               	goto	u199_21
 16213     0A2D  2A2F               	goto	u199_20
 16214     0A2E                     u199_21:
 16215     0A2E  2A3B               	goto	i1l3459
 16216     0A2F                     u199_20:
 16217     0A2F                     i1l3453:
 16218                           
 16219                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 770:         return (_Bool)mtouch_sensor[se
      +                          nsor].enabled;
 16220     0A2F  3009               	movlw	9
 16221     0A30  00F0               	movwf	i1___bmul@multiplicand
 16222     0A31  0874               	movf	i1MTOUCH_Sensor_isEnabled@sensor,w
 16223     0A32  318A  228D  318A   	fcall	i1___bmul
 16224     0A35  3E4B               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
 16225     0A36  0086               	movwf	6
 16226     0A37  0187               	clrf	7
 16227     0A38  0801               	movf	1,w
 16228     0A39  3901               	andlw	1
 16229     0A3A  2A3C               	goto	i1l856
 16230     0A3B                     i1l3459:
 16231                           
 16232                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 772:         return 0;
 16233     0A3B  3000               	movlw	0
 16234     0A3C                     i1l856:
 16235     0A3C  0008               	return
 16236     0A3D                     __end_ofi1_MTOUCH_Sensor_isEnabled:
 16237                           
 16238                           	psect	text91
 16239     0A8D                     __ptext91:	
 16240 ;; *************** function i1___bmul *****************
 16241 ;; Defined at:
 16242 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
 16243 ;; Parameters:    Size  Location     Type
 16244 ;;  multiplier      1    wreg     unsigned char 
 16245 ;;  multiplicand    1    0[COMMON] unsigned char 
 16246 ;; Auto vars:     Size  Location     Type
 16247 ;;  multiplier      1    3[COMMON] unsigned char 
 16248 ;;  product         1    2[COMMON] unsigned char 
 16249 ;; Return value:  Size  Location     Type
 16250 ;;                  1    wreg      unsigned char 
 16251 ;; Registers used:
 16252 ;;		wreg, status,2, status,0
 16253 ;; Tracked objects:
 16254 ;;		On entry : 0/0
 16255 ;;		On exit  : 0/0
 16256 ;;		Unchanged: 0/0
 16257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16258 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16259 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16261 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16262 ;;Total ram usage:        4 bytes
 16263 ;; Hardware stack levels used: 1
 16264 ;; This function calls:
 16265 ;;		Nothing
 16266 ;; This function is called by:
 16267 ;;		_MTOUCH_Sensor_Service
 16268 ;;		i1_Sensor_scheduleNextScan
 16269 ;;		i1_MTOUCH_Sensor_isEnabled
 16270 ;;		i1_MTOUCH_Sensor_wasSampled
 16271 ;; This function uses a non-reentrant model
 16272 ;;
 16273                           
 16274     0A8D                     i1___bmul:	
 16275                           ;psect for function i1___bmul
 16276                           
 16277                           
 16278                           ;incstack = 0
 16279                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
 16280                           ;i1___bmul@multiplier stored from wreg
 16281     0A8D  00F3               	movwf	i1___bmul@multiplier
 16282     0A8E                     i1l3277:
 16283     0A8E  01F2               	clrf	i1___bmul@product
 16284     0A8F                     i1l3279:
 16285     0A8F  1C73               	btfss	i1___bmul@multiplier,0
 16286     0A90  2A92               	goto	u180_21
 16287     0A91  2A93               	goto	u180_20
 16288     0A92                     u180_21:
 16289     0A92  2A97               	goto	i1l3283
 16290     0A93                     u180_20:
 16291     0A93                     i1l3281:
 16292     0A93  0870               	movf	i1___bmul@multiplicand,w
 16293     0A94  00F1               	movwf	??i1___bmul
 16294     0A95  0871               	movf	??i1___bmul,w
 16295     0A96  07F2               	addwf	i1___bmul@product,f
 16296     0A97                     i1l3283:
 16297     0A97  1003               	clrc
 16298     0A98  0DF0               	rlf	i1___bmul@multiplicand,f
 16299     0A99                     i1l3285:
 16300     0A99  1003               	clrc
 16301     0A9A  0CF3               	rrf	i1___bmul@multiplier,f
 16302     0A9B  0873               	movf	i1___bmul@multiplier,w
 16303     0A9C  1D03               	btfss	3,2
 16304     0A9D  2A9F               	goto	u181_21
 16305     0A9E  2AA0               	goto	u181_20
 16306     0A9F                     u181_21:
 16307     0A9F  2A8F               	goto	i1l3279
 16308     0AA0                     u181_20:
 16309     0AA0                     i1l3287:
 16310     0AA0  0872               	movf	i1___bmul@product,w
 16311     0AA1                     i1l1308:
 16312     0AA1  0008               	return
 16313     0AA2                     __end_ofi1___bmul:
 16314                           
 16315                           	psect	text92
 16316     08C4                     __ptext92:	
 16317 ;; *************** function _Sensor_setSampled *****************
 16318 ;; Defined at:
 16319 ;;		line 892 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 16320 ;; Parameters:    Size  Location     Type
 16321 ;;  sensor          1    wreg     PTR struct .
 16322 ;;		 -> mtouch_sensor(9), 
 16323 ;; Auto vars:     Size  Location     Type
 16324 ;;  sensor          1    0[COMMON] PTR struct .
 16325 ;;		 -> mtouch_sensor(9), 
 16326 ;; Return value:  Size  Location     Type
 16327 ;;                  1    wreg      void 
 16328 ;; Registers used:
 16329 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16330 ;; Tracked objects:
 16331 ;;		On entry : 0/0
 16332 ;;		On exit  : 0/0
 16333 ;;		Unchanged: 0/0
 16334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16336 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16338 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16339 ;;Total ram usage:        1 bytes
 16340 ;; Hardware stack levels used: 1
 16341 ;; This function calls:
 16342 ;;		Nothing
 16343 ;; This function is called by:
 16344 ;;		_MTOUCH_Sensor_Service
 16345 ;; This function uses a non-reentrant model
 16346 ;;
 16347                           
 16348     08C4                     _Sensor_setSampled:	
 16349                           ;psect for function _Sensor_setSampled
 16350                           
 16351                           
 16352                           ;incstack = 0
 16353                           ; Regs used in _Sensor_setSampled: [wreg+fsr1l+fsr1h+status,2+status,0]
 16354                           ;Sensor_setSampled@sensor stored from wreg
 16355     08C4  00F0               	movwf	Sensor_setSampled@sensor
 16356     08C5                     i1l3711:
 16357                           
 16358                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 892: static __attribute__((inline)) void Se
      +                          nsor_setSampled(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 893
      +                          : {;mcc_generated_files/mtouch/mtouch_sensor.c: 894:     sensor->sampled = 1;
 16359     08C5  0870               	movf	Sensor_setSampled@sensor,w
 16360     08C6  3E08               	addlw	8
 16361     08C7  0086               	movwf	6
 16362     08C8  0187               	clrf	7
 16363     08C9  1481               	bsf	1,1
 16364     08CA                     i1l911:
 16365     08CA  0008               	return
 16366     08CB                     __end_of_Sensor_setSampled:
 16367                           
 16368                           	psect	text93
 16369     0526                     __ptext93:	
 16370 ;; *************** function _Sensor_autoCalibration *****************
 16371 ;; Defined at:
 16372 ;;		line 419 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 16373 ;; Parameters:    Size  Location     Type
 16374 ;;  sensor          1    wreg     PTR struct .
 16375 ;;		 -> mtouch_sensor(9), 
 16376 ;; Auto vars:     Size  Location     Type
 16377 ;;  sensor          1    9[COMMON] PTR struct .
 16378 ;;		 -> mtouch_sensor(9), 
 16379 ;;  name            1    8[COMMON] enum E11929
 16380 ;; Return value:  Size  Location     Type
 16381 ;;                  1    wreg      enum E11931
 16382 ;; Registers used:
 16383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16384 ;; Tracked objects:
 16385 ;;		On entry : 0/0
 16386 ;;		On exit  : 0/0
 16387 ;;		Unchanged: 0/0
 16388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16390 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16391 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16392 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16393 ;;Total ram usage:        6 bytes
 16394 ;; Hardware stack levels used: 1
 16395 ;; Hardware stack levels required when called: 1
 16396 ;; This function calls:
 16397 ;;		_Sensor_setCalibratAcqTime
 16398 ;;		_Sensor_setCalibrated
 16399 ;;		i1_Sensor_isCalibratingAcqTime
 16400 ;;		i1_abs
 16401 ;; This function is called by:
 16402 ;;		_MTOUCH_Sensor_Service
 16403 ;; This function uses a non-reentrant model
 16404 ;;
 16405                           
 16406     0526                     _Sensor_autoCalibration:	
 16407                           ;psect for function _Sensor_autoCalibration
 16408                           
 16409                           
 16410                           ;incstack = 0
 16411                           ; Regs used in _Sensor_autoCalibration: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 16412                           ;Sensor_autoCalibration@sensor stored from wreg
 16413     0526  00F9               	movwf	Sensor_autoCalibration@sensor
 16414     0527                     i1l3671:
 16415                           
 16416                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 419: static enum mtouch_sensor_error Sensor
      +                          _autoCalibration(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 42
      +                          0: {;mcc_generated_files/mtouch/mtouch_sensor.c: 421:     enum mtouch_sensor_names name 
      +                          = sensor->sensor_name;
 16417     0527  0879               	movf	Sensor_autoCalibration@sensor,w
 16418     0528  0086               	movwf	6
 16419     0529  0187               	clrf	7
 16420     052A  0801               	movf	1,w
 16421     052B  00F8               	movwf	Sensor_autoCalibration@name
 16422     052C                     i1l3673:
 16423                           
 16424                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 424:     if(!Sensor_isCalibratingAcqTime(se
      +                          nsor))
 16425     052C  0879               	movf	Sensor_autoCalibration@sensor,w
 16426     052D  3188  20D9  3185   	fcall	i1_Sensor_isCalibratingAcqTime
 16427     0530  3A00               	xorlw	0
 16428     0531  1D03               	skipz
 16429     0532  2D34               	goto	u229_21
 16430     0533  2D35               	goto	u229_20
 16431     0534                     u229_21:
 16432     0534  2D64               	goto	i1l3683
 16433     0535                     u229_20:
 16434     0535                     i1l3675:
 16435                           
 16436                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 425:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 426:         if(ADFLTR > ((mtouch_sensor_packetsample_t)(sensor->oversamplin
      +                          g)<<9))
 16437     0535  0879               	movf	Sensor_autoCalibration@sensor,w
 16438     0536  3E04               	addlw	4
 16439     0537  0086               	movwf	6
 16440     0538  0187               	clrf	7
 16441     0539  0801               	movf	1,w
 16442     053A  00F4               	movwf	??_Sensor_autoCalibration
 16443     053B  01F5               	clrf	??_Sensor_autoCalibration+1
 16444     053C  3009               	movlw	9
 16445     053D                     u230_25:
 16446     053D  35F4               	lslf	??_Sensor_autoCalibration,f
 16447     053E  0DF5               	rlf	??_Sensor_autoCalibration+1,f
 16448     053F  0B89               	decfsz	9,f
 16449     0540  2D3D               	goto	u230_25
 16450     0541  0022               	movlb	2	; select bank2
 16451     0542  0815               	movf	21,w	;volatile
 16452     0543  0275               	subwf	??_Sensor_autoCalibration+1,w
 16453     0544  1D03               	skipz
 16454     0545  2D48               	goto	u231_25
 16455     0546  0814               	movf	20,w	;volatile
 16456     0547  0274               	subwf	??_Sensor_autoCalibration,w
 16457     0548                     u231_25:
 16458     0548  1803               	skipnc
 16459     0549  2D4B               	goto	u231_21
 16460     054A  2D4C               	goto	u231_20
 16461     054B                     u231_21:
 16462     054B  2D5F               	goto	i1l3681
 16463     054C                     u231_20:
 16464     054C                     i1l3677:
 16465                           
 16466                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 427:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 428:             if(++(sensor->addcap) >= (mtouch_sensor_addcap_t)31)
 16467     054C  3001               	movlw	1
 16468     054D  00F4               	movwf	??_Sensor_autoCalibration
 16469     054E  0879               	movf	Sensor_autoCalibration@sensor,w
 16470     054F  3E05               	addlw	5
 16471     0550  0086               	movwf	6
 16472     0551  0187               	clrf	7
 16473     0552  0874               	movf	??_Sensor_autoCalibration,w
 16474     0553  0781               	addwf	1,f
 16475     0554  301F               	movlw	31
 16476     0555  0201               	subwf	1,w
 16477     0556  1C03               	skipc
 16478     0557  2D59               	goto	u232_21
 16479     0558  2D5A               	goto	u232_20
 16480     0559                     u232_21:
 16481     0559  2DB2               	goto	i1l745
 16482     055A                     u232_20:
 16483     055A                     i1l3679:
 16484                           
 16485                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 429:                 Sensor_setCalibratAcqT
      +                          ime(sensor);
 16486     055A  0879               	movf	Sensor_autoCalibration@sensor,w
 16487     055B  3189  21F0  3185   	fcall	_Sensor_setCalibratAcqTime
 16488     055E  2DB2               	goto	i1l750
 16489     055F                     i1l3681:
 16490                           
 16491                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 432:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 433:              Sensor_setCalibratAcqTime(sensor);
 16492     055F  0879               	movf	Sensor_autoCalibration@sensor,w
 16493     0560  3189  21F0  3185   	fcall	_Sensor_setCalibratAcqTime
 16494     0563  2DB2               	goto	i1l750
 16495     0564                     i1l3683:
 16496                           
 16497                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 438:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 439:         if((mtouch_sensor_packetsample_t)abs(packet_sample[name] - ADFL
      +                          TR) < ((mtouch_sensor_packetsample_t)(sensor->oversampling)<<1))
 16498     0564  0879               	movf	Sensor_autoCalibration@sensor,w
 16499     0565  3E04               	addlw	4
 16500     0566  0086               	movwf	6
 16501     0567  0187               	clrf	7
 16502     0568  0801               	movf	1,w
 16503     0569  00F4               	movwf	??_Sensor_autoCalibration
 16504     056A  01F5               	clrf	??_Sensor_autoCalibration+1
 16505     056B  35F4               	lslf	??_Sensor_autoCalibration,f
 16506     056C  0DF5               	rlf	??_Sensor_autoCalibration+1,f
 16507     056D  3578               	lslf	Sensor_autoCalibration@name,w
 16508     056E  3E31               	addlw	(low (_packet_sample| 0))& (0+255)
 16509     056F  0086               	movwf	6
 16510     0570  0187               	clrf	7
 16511     0571  3F40               	moviw [0]fsr1
 16512     0572  00F6               	movwf	??_Sensor_autoCalibration+2
 16513     0573  3F41               	moviw [1]fsr1
 16514     0574  00F7               	movwf	??_Sensor_autoCalibration+3
 16515     0575  0022               	movlb	2	; select bank2
 16516     0576  0814               	movf	20,w	;volatile
 16517     0577  0276               	subwf	??_Sensor_autoCalibration+2,w
 16518     0578  00F0               	movwf	i1abs@a
 16519     0579  0815               	movf	21,w	;volatile
 16520     057A  3B77               	subwfb	??_Sensor_autoCalibration+3,w
 16521     057B  00F1               	movwf	i1abs@a+1
 16522     057C  3189  2174  3185   	fcall	i1_abs
 16523     057F  0875               	movf	??_Sensor_autoCalibration+1,w
 16524     0580  0271               	subwf	?i1_abs+1,w
 16525     0581  1D03               	skipz
 16526     0582  2D85               	goto	u233_25
 16527     0583  0874               	movf	??_Sensor_autoCalibration,w
 16528     0584  0270               	subwf	?i1_abs,w
 16529     0585                     u233_25:
 16530     0585  1803               	skipnc
 16531     0586  2D88               	goto	u233_21
 16532     0587  2D89               	goto	u233_20
 16533     0588                     u233_21:
 16534     0588  2D94               	goto	i1l3689
 16535     0589                     u233_20:
 16536     0589                     i1l3685:
 16537                           
 16538                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 440:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 441:             sensor->precharge_time = ((mtouch_sensor_time_t)((mtouc
      +                          h_sensor_time_t)48 << (uint8_t)0));
 16539     0589  0879               	movf	Sensor_autoCalibration@sensor,w
 16540     058A  3E02               	addlw	2
 16541     058B  0086               	movwf	6
 16542     058C  0187               	clrf	7
 16543     058D  3030               	movlw	48
 16544     058E  0081               	movwf	1
 16545     058F                     i1l3687:
 16546                           
 16547                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 442:             Sensor_setCalibrated(senso
      +                          r);
 16548     058F  0879               	movf	Sensor_autoCalibration@sensor,w
 16549     0590  3189  213D  3185   	fcall	_Sensor_setCalibrated
 16550                           
 16551                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 443:         }
 16552     0593  2DB2               	goto	i1l750
 16553     0594                     i1l3689:
 16554                           
 16555                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 445:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 446:             if((sensor->acquisition_time) >= (mtouch_sensor_time_t)
      +                          (((mtouch_sensor_time_t)((mtouch_sensor_time_t)48 << (uint8_t)0)) - ((mtouch_sensor_time
      +                          _t)2 << (uint8_t)0)))
 16556     0594  0879               	movf	Sensor_autoCalibration@sensor,w
 16557     0595  3E03               	addlw	3
 16558     0596  0086               	movwf	6
 16559     0597  0187               	clrf	7
 16560     0598  302E               	movlw	46
 16561     0599  0201               	subwf	1,w
 16562     059A  1C03               	skipc
 16563     059B  2D9D               	goto	u234_21
 16564     059C  2D9E               	goto	u234_20
 16565     059D                     u234_21:
 16566     059D  2DA9               	goto	i1l3695
 16567     059E                     u234_20:
 16568     059E                     i1l3691:
 16569                           
 16570                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 447:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 448:                 sensor->precharge_time = ((mtouch_sensor_time_t
      +                          )((mtouch_sensor_time_t)48 << (uint8_t)0));
 16571     059E  0879               	movf	Sensor_autoCalibration@sensor,w
 16572     059F  3E02               	addlw	2
 16573     05A0  0086               	movwf	6
 16574     05A1  0187               	clrf	7
 16575     05A2  3030               	movlw	48
 16576     05A3  0081               	movwf	1
 16577     05A4                     i1l3693:
 16578                           
 16579                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 449:                 Sensor_setCalibrated(s
      +                          ensor);
 16580     05A4  0879               	movf	Sensor_autoCalibration@sensor,w
 16581     05A5  3189  213D  3185   	fcall	_Sensor_setCalibrated
 16582                           
 16583                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 450:             }
 16584     05A8  2DB2               	goto	i1l750
 16585     05A9                     i1l3695:
 16586                           
 16587                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 452:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 455:                 sensor->acquisition_time += ((mtouch_sensor_tim
      +                          e_t)2 << (uint8_t)0);
 16588     05A9  3002               	movlw	2
 16589     05AA  00F4               	movwf	??_Sensor_autoCalibration
 16590     05AB  0879               	movf	Sensor_autoCalibration@sensor,w
 16591     05AC  3E03               	addlw	3
 16592     05AD  0086               	movwf	6
 16593     05AE  0187               	clrf	7
 16594     05AF  0874               	movf	??_Sensor_autoCalibration,w
 16595     05B0  0781               	addwf	1,f
 16596     05B1  2DB2               	goto	i1l750
 16597     05B2                     i1l745:	
 16598                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 458:     }
 16599                           
 16600     05B2                     i1l750:
 16601     05B2  0008               	return
 16602     05B3                     __end_of_Sensor_autoCalibration:
 16603                           
 16604                           	psect	text94
 16605     0974                     __ptext94:	
 16606 ;; *************** function i1_abs *****************
 16607 ;; Defined at:
 16608 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
 16609 ;; Parameters:    Size  Location     Type
 16610 ;;  a               2    0[COMMON] int 
 16611 ;; Auto vars:     Size  Location     Type
 16612 ;;		None
 16613 ;; Return value:  Size  Location     Type
 16614 ;;                  2    0[COMMON] int 
 16615 ;; Registers used:
 16616 ;;		wreg, status,2, status,0
 16617 ;; Tracked objects:
 16618 ;;		On entry : 0/0
 16619 ;;		On exit  : 0/0
 16620 ;;		Unchanged: 0/0
 16621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16624 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16625 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16626 ;;Total ram usage:        4 bytes
 16627 ;; Hardware stack levels used: 1
 16628 ;; This function calls:
 16629 ;;		Nothing
 16630 ;; This function is called by:
 16631 ;;		_Sensor_autoCalibration
 16632 ;;		_MTOUCH_Sensor_Service
 16633 ;; This function uses a non-reentrant model
 16634 ;;
 16635                           
 16636     0974                     i1_abs:	
 16637                           ;psect for function i1_abs
 16638                           
 16639     0974                     i1l3483:	
 16640                           ;incstack = 0
 16641                           ; Regs used in i1_abs: [wreg+status,2+status,0]
 16642                           
 16643     0974  1BF1               	btfsc	i1abs@a+1,7
 16644     0975  2977               	goto	u201_21
 16645     0976  2978               	goto	u201_20
 16646     0977                     u201_21:
 16647     0977  2979               	goto	i1l3487
 16648     0978                     u201_20:
 16649     0978                     i1l3485:
 16650     0978  2984               	goto	i1l1745
 16651     0979                     i1l3487:
 16652     0979  0970               	comf	i1abs@a,w
 16653     097A  00F2               	movwf	??i1_abs
 16654     097B  0971               	comf	i1abs@a+1,w
 16655     097C  00F3               	movwf	??i1_abs+1
 16656     097D  0AF2               	incf	??i1_abs,f
 16657     097E  1903               	skipnz
 16658     097F  0AF3               	incf	??i1_abs+1,f
 16659     0980  0872               	movf	??i1_abs,w
 16660     0981  00F0               	movwf	?i1_abs
 16661     0982  0873               	movf	??i1_abs+1,w
 16662     0983  00F1               	movwf	?i1_abs+1
 16663     0984                     i1l1745:
 16664     0984  0008               	return
 16665     0985                     __end_ofi1_abs:
 16666                           
 16667                           	psect	text95
 16668     08D9                     __ptext95:	
 16669 ;; *************** function i1_Sensor_isCalibratingAcqTime *****************
 16670 ;; Defined at:
 16671 ;;		line 857 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 16672 ;; Parameters:    Size  Location     Type
 16673 ;;  sensor          1    wreg     PTR struct .
 16674 ;;		 -> mtouch_sensor(9), 
 16675 ;; Auto vars:     Size  Location     Type
 16676 ;;  sensor          1    0[COMMON] PTR struct .
 16677 ;;		 -> mtouch_sensor(9), 
 16678 ;; Return value:  Size  Location     Type
 16679 ;;                  1    wreg      _Bool 
 16680 ;; Registers used:
 16681 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16682 ;; Tracked objects:
 16683 ;;		On entry : 0/0
 16684 ;;		On exit  : 0/0
 16685 ;;		Unchanged: 0/0
 16686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16690 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16691 ;;Total ram usage:        1 bytes
 16692 ;; Hardware stack levels used: 1
 16693 ;; This function calls:
 16694 ;;		Nothing
 16695 ;; This function is called by:
 16696 ;;		_Sensor_autoCalibration
 16697 ;;		i1_Sensor_scheduleNextScan
 16698 ;; This function uses a non-reentrant model
 16699 ;;
 16700                           
 16701     08D9                     i1_Sensor_isCalibratingAcqTime:	
 16702                           ;psect for function i1_Sensor_isCalibratingAcqTime
 16703                           
 16704                           
 16705                           ;incstack = 0
 16706                           ; Regs used in i1_Sensor_isCalibratingAcqTime: [wreg+fsr1l+fsr1h+status,2+status,0]
 16707                           ;i1Sensor_isCalibratingAcqTime@sensor stored from wreg
 16708     08D9  00F0               	movwf	i1Sensor_isCalibratingAcqTime@sensor
 16709     08DA                     i1l3467:
 16710                           
 16711                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 857: static __attribute__((inline)) _Bool S
      +                          ensor_isCalibratingAcqTime(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_se
      +                          nsor.c: 858: {;mcc_generated_files/mtouch/mtouch_sensor.c: 859:     return (_Bool)sensor
      +                          ->acqTime_cal;
 16712     08DA  0870               	movf	i1Sensor_isCalibratingAcqTime@sensor,w
 16713     08DB  3E08               	addlw	8
 16714     08DC  0086               	movwf	6
 16715     08DD  0187               	clrf	7
 16716     08DE  0E01               	swapf	1,w
 16717     08DF  3901               	andlw	1
 16718     08E0                     i1l895:
 16719     08E0  0008               	return
 16720     08E1                     __end_ofi1_Sensor_isCalibratingAcqTime:
 16721                           
 16722                           	psect	text96
 16723     093D                     __ptext96:	
 16724 ;; *************** function _Sensor_setCalibrated *****************
 16725 ;; Defined at:
 16726 ;;		line 844 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 16727 ;; Parameters:    Size  Location     Type
 16728 ;;  sensor          1    wreg     PTR struct .
 16729 ;;		 -> mtouch_sensor(9), 
 16730 ;; Auto vars:     Size  Location     Type
 16731 ;;  sensor          1    0[COMMON] PTR struct .
 16732 ;;		 -> mtouch_sensor(9), 
 16733 ;; Return value:  Size  Location     Type
 16734 ;;                  1    wreg      void 
 16735 ;; Registers used:
 16736 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16737 ;; Tracked objects:
 16738 ;;		On entry : 0/0
 16739 ;;		On exit  : 0/0
 16740 ;;		Unchanged: 0/0
 16741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16745 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16746 ;;Total ram usage:        1 bytes
 16747 ;; Hardware stack levels used: 1
 16748 ;; This function calls:
 16749 ;;		Nothing
 16750 ;; This function is called by:
 16751 ;;		_Sensor_autoCalibration
 16752 ;; This function uses a non-reentrant model
 16753 ;;
 16754                           
 16755     093D                     _Sensor_setCalibrated:	
 16756                           ;psect for function _Sensor_setCalibrated
 16757                           
 16758                           
 16759                           ;incstack = 0
 16760                           ; Regs used in _Sensor_setCalibrated: [wreg+fsr1l+fsr1h+status,2+status,0]
 16761                           ;Sensor_setCalibrated@sensor stored from wreg
 16762     093D  00F0               	movwf	Sensor_setCalibrated@sensor
 16763     093E                     i1l3389:
 16764                           
 16765                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 844: static void Sensor_setCalibrated(mtouc
      +                          h_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 845: {;mcc_generated_fil
      +                          es/mtouch/mtouch_sensor.c: 846:     sensor->calibrated = 1;
 16766     093E  0870               	movf	Sensor_setCalibrated@sensor,w
 16767     093F  3E08               	addlw	8
 16768     0940  0086               	movwf	6
 16769     0941  0187               	clrf	7
 16770     0942  1581               	bsf	1,3
 16771                           
 16772                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 847:     sensor->acqTime_cal = 0;
 16773     0943  0870               	movf	Sensor_setCalibrated@sensor,w
 16774     0944  3E08               	addlw	8
 16775     0945  0086               	movwf	6
 16776     0946  0187               	clrf	7
 16777     0947  1201               	bcf	1,4
 16778     0948                     i1l889:
 16779     0948  0008               	return
 16780     0949                     __end_of_Sensor_setCalibrated:
 16781                           
 16782                           	psect	text97
 16783     09F0                     __ptext97:	
 16784 ;; *************** function _Sensor_setCalibratAcqTime *****************
 16785 ;; Defined at:
 16786 ;;		line 850 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 16787 ;; Parameters:    Size  Location     Type
 16788 ;;  sensor          1    wreg     PTR struct .
 16789 ;;		 -> mtouch_sensor(9), 
 16790 ;; Auto vars:     Size  Location     Type
 16791 ;;  sensor          1    0[COMMON] PTR struct .
 16792 ;;		 -> mtouch_sensor(9), 
 16793 ;; Return value:  Size  Location     Type
 16794 ;;                  1    wreg      void 
 16795 ;; Registers used:
 16796 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16797 ;; Tracked objects:
 16798 ;;		On entry : 0/0
 16799 ;;		On exit  : 0/0
 16800 ;;		Unchanged: 0/0
 16801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16803 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16805 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16806 ;;Total ram usage:        1 bytes
 16807 ;; Hardware stack levels used: 1
 16808 ;; This function calls:
 16809 ;;		Nothing
 16810 ;; This function is called by:
 16811 ;;		_Sensor_autoCalibration
 16812 ;; This function uses a non-reentrant model
 16813 ;;
 16814                           
 16815     09F0                     _Sensor_setCalibratAcqTime:	
 16816                           ;psect for function _Sensor_setCalibratAcqTime
 16817                           
 16818                           
 16819                           ;incstack = 0
 16820                           ; Regs used in _Sensor_setCalibratAcqTime: [wreg+fsr1l+fsr1h+status,2+status,0]
 16821                           ;Sensor_setCalibratAcqTime@sensor stored from wreg
 16822     09F0  00F0               	movwf	Sensor_setCalibratAcqTime@sensor
 16823     09F1                     i1l3379:
 16824                           
 16825                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 850: static void Sensor_setCalibratAcqTime(
      +                          mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 851: {;mcc_generate
      +                          d_files/mtouch/mtouch_sensor.c: 852:     sensor->acqTime_cal = 1;
 16826     09F1  0870               	movf	Sensor_setCalibratAcqTime@sensor,w
 16827     09F2  3E08               	addlw	8
 16828     09F3  0086               	movwf	6
 16829     09F4  0187               	clrf	7
 16830     09F5  1601               	bsf	1,4
 16831                           
 16832                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 853:     sensor->acquisition_time = ((mtouc
      +                          h_sensor_time_t)((mtouch_sensor_time_t)1 << (uint8_t)0));
 16833     09F6  0870               	movf	Sensor_setCalibratAcqTime@sensor,w
 16834     09F7  3E03               	addlw	3
 16835     09F8  0086               	movwf	6
 16836     09F9  0187               	clrf	7
 16837     09FA  0181               	clrf	1
 16838     09FB  0A81               	incf	1,f
 16839                           
 16840                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 854:     sensor->precharge_time = ((mtouch_
      +                          sensor_time_t)((mtouch_sensor_time_t)48 << (uint8_t)0));
 16841     09FC  0870               	movf	Sensor_setCalibratAcqTime@sensor,w
 16842     09FD  3E02               	addlw	2
 16843     09FE  0086               	movwf	6
 16844     09FF  0187               	clrf	7
 16845     0A00  3030               	movlw	48
 16846     0A01  0081               	movwf	1
 16847     0A02                     i1l892:
 16848     0A02  0008               	return
 16849     0A03                     __end_of_Sensor_setCalibratAcqTime:
 16850     007E                     btemp	set	126	;btemp
 16851     007E                     int$flags	set	126
 16852     007E                     wtemp0	set	126
 16853                           
 16854                           	psect	config
 16855                           
 16856                           ;Config register CONFIG1 @ 0x8007
 16857                           ;	External Oscillator mode selection bits
 16858                           ;	FEXTOSC = OFF, Oscillator not enabled
 16859                           ;	Power-up default value for COSC bits
 16860                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 16861                           ;	Clock Out Enable bit
 16862                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 16863                           ;	Clock Switch Enable bit
 16864                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 16865                           ;	Fail-Safe Clock Monitor Enable bit
 16866                           ;	FCMEN = ON, FSCM timer enabled
 16867     8007                     	org	32775
 16868     8007  3FEC               	dw	16364
 16869                           
 16870                           ;Config register CONFIG2 @ 0x8008
 16871                           ;	Master Clear Enable bit
 16872                           ;	MCLRE = ON, MCLR pin is Master Clear function
 16873                           ;	Power-up Timer Enable bit
 16874                           ;	PWRTE = OFF, PWRT disabled
 16875                           ;	Low-Power BOR enable bit
 16876                           ;	LPBOREN = OFF, ULPBOR disabled
 16877                           ;	Brown-out reset enable bits
 16878                           ;	BOREN = NSLEEP, Brown-out Reset enabled while running, disabled in sleep; SBOREN is ig
      +                          nored
 16879                           ;	Brown-out Reset Voltage Selection
 16880                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 16881                           ;	Zero-cross detect disable
 16882                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 16883                           ;	Peripheral Pin Select one-way control
 16884                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
 16885                           ;	Stack Overflow/Underflow Reset Enable bit
 16886                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 16887                           ;	Background Debugger
 16888                           ;	DEBUG = OFF, Background Debugger disabled
 16889     8008                     	org	32776
 16890     8008  37BF               	dw	14271
 16891                           
 16892                           ;Config register CONFIG3 @ 0x8009
 16893                           ;	WDT Period Select bits
 16894                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 16895                           ;	WDT operating mode
 16896                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 16897                           ;	WDT Window Select bits
 16898                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 16899                           ;	WDT input clock selector
 16900                           ;	WDTCCS = SC, Software Control
 16901     8009                     	org	32777
 16902     8009  3F9F               	dw	16287
 16903                           
 16904                           ;Config register CONFIG4 @ 0x800A
 16905                           ;	UserNVM self-write protection bits
 16906                           ;	WRT = OFF, Write protection off
 16907                           ;	Scanner Enable bit
 16908                           ;	SCANE = available, Scanner module is available for use
 16909                           ;	Low Voltage Programming Enable bit
 16910                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 16911     800A                     	org	32778
 16912     800A  3FFF               	dw	16383
 16913                           
 16914                           ;Config register CONFIG5 @ 0x800B
 16915                           ;	UserNVM Program memory code protection bit
 16916                           ;	CP = OFF, Program Memory code protection disabled
 16917                           ;	DataNVM code protection bit
 16918                           ;	CPD = OFF, Data EEPROM code protection disabled
 16919     800B                     	org	32779
 16920     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    25
    Data        34
    BSS         77
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     22      79
    BANK1            80      0      65
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), ADCC_ThresholdISR_mTouch(), NULL(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), ADCC_ThresholdISR_mTouch(), 

    Button_Baseline_Initialize@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK1[16]), 

    Button_Baseline_Update@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK1[16]), 

    Button_Deviation_Update@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK1[16]), 

    Button_Reading_Update@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK1[16]), 

    Button_Reading_Update_Helper@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK1[16]), 

    Button_Service$2506	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
		 -> Button_State_Initializing(), Button_State_NotPressed(), Button_State_Pressed(), 

    Button_Service$2506$0	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK1[16]), 

    Button_Service@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK1[16]), 

    Button_State_Initializing@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK1[16]), 

    Button_State_NotPressed@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK1[16]), 

    Button_State_Pressed@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK1[16]), 

    Button_StateMachine	PTR FTN(PTR struct .,)void [3] size(2) Largest target is 1
		 -> Button_State_Initializing(), Button_State_NotPressed(), Button_State_Pressed(), 

    Button_StateMachine$0	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK1[16]), 

    Button_Tick_helper@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK1[16]), 

    callback_notPressed	PTR FTN(enum E11928,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    callback_pressed	PTR FTN(enum E11928,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    callback_sampled	PTR FTN(enum E11929,)void  size(2) Largest target is 1
		 -> Sensor_DefaultCallback(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 16
		 -> mtouch_button(BANK1[16]), mtouch_sensor(BANK0[9]), 

    memcpy@d1	PTR void  size(1) Largest target is 16
		 -> mtouch_button(BANK1[16]), mtouch_sensor(BANK0[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 16
		 -> mtouch_button_init(CODE[16]), mtouch_sensor_init(CODE[9]), 

    memcpy@s1	PTR const void  size(2) Largest target is 16
		 -> mtouch_button_init(CODE[16]), mtouch_sensor_init(CODE[9]), 

    MTOUCH_Button_Initialize@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK1[16]), 

    MTOUCH_Sensor_postAcquisitionProcess$2505	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    MTOUCH_Sensor_Sampled_ResetAll@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    MTOUCH_Sensor_Service@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_autoCalibration@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_isCalibrated@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_isCalibratingAcqTime@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_RawSample_Update@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_scheduleNextScan@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_setCalibratAcqTime@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_setCalibrated@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_setSampled@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    sp__memcpy	PTR void  size(1) Largest target is 16
		 -> mtouch_button(BANK1[16]), mtouch_sensor(BANK0[9]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _ADCC_ThresholdISR_mTouch->_MTOUCH_Sensor_Service
    _MTOUCH_Sensor_Service->_Sensor_autoCalibration
    _MTOUCH_Sensor_Service->i1_Sensor_scheduleNextScan
    i1_Sensor_scheduleNextScan->i1_MTOUCH_Sensor_isEnabled
    i1_Sensor_scheduleNextScan->i1_MTOUCH_Sensor_wasSampled
    i1_MTOUCH_Sensor_wasSampled->i1___bmul
    i1_MTOUCH_Sensor_isEnabled->i1___bmul
    _Sensor_autoCalibration->i1_abs

Critical Paths under _main in BANK0

    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _MTOUCH_Service_Mainloop->_MTOUCH_Button_ServiceAll
    _MTOUCH_Button_Tick->_Button_Tick_helper
    _Sensor_FrequencyHopping->_Sensor_FrequencyHopping_Autotune_Process
    _Sensor_FrequencyHopping_Autotune_Process->_abs
    _abs->___bmul
    _MTOUCH_Sensor_postAcquisitionProcess->_Sensor_RawSample_Update
    _Sensor_RawSample_Update->_medianFilter
    _medianFilter->___bmul
    _MTOUCH_Sensor_isSamplingComplete->_Sensor_scheduleNextScan
    _Sensor_scheduleNextScan->_MTOUCH_Sensor_isEnabled
    _Sensor_scheduleNextScan->_MTOUCH_Sensor_wasSampled
    _MTOUCH_Sensor_isEnabled->___bmul
    _MTOUCH_Initialize->_MTOUCH_Button_InitializeAll
    _MTOUCH_Initialize->_MTOUCH_Sensor_InitializeAll
    _MTOUCH_Sensor_ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _MTOUCH_Sensor_InitializeAll->_memcpy
    _MTOUCH_Sensor_Initialize->_MTOUCH_Sensor_Calibrate
    _MTOUCH_Sensor_Initialize->_MTOUCH_Sensor_Enable
    _MTOUCH_Sensor_Enable->___bmul
    _MTOUCH_Button_InitializeAll->_memcpy
    _MTOUCH_DataStreamer_Service->_MTOUCH_Button_Baseline_Get
    _datastreamer_output_byte->_EUSART_Write
    _MTOUCH_Sensor_AdditionalCap_Get->___bmul
    _MTOUCH_Sensor_AcquisitionTime_Get->___bmul
    _MTOUCH_Button_Baseline_Get->_Button_Baseline_Get_helper
    _MTOUCH_Button_ServiceAll->_Button_Service
    _Button_Service->_Button_State_Initializing
    _MTOUCH_Sensor_wasSampled->___bmul
    _MTOUCH_Sensor_isCalibrated->___bmul
    _MTOUCH_Button_Initialize->_MTOUCH_Sensor_Calibrate
    _MTOUCH_Sensor_Calibrate->___bmul
    _Button_State_Initializing->_Button_Baseline_Initialize
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update->_Button_Reading_Update_Helper
    _Button_Reading_Update_Helper->_MTOUCH_Sensor_RawSample_Get
    _MTOUCH_Sensor_RawSample_Get->___bmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   39864
            _MTOUCH_Service_Mainloop
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    7063
                    _ADCC_Initialize
                  _EUSART_Initialize
                  _MTOUCH_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     174
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Service_Mainloop                              1     1      0   32801
           _MTOUCH_Button_ServiceAll
        _MTOUCH_DataStreamer_Service
                  _MTOUCH_Initialize
            _MTOUCH_Sensor_SampleAll
     _MTOUCH_Sensor_Sampled_ResetAll
                        _MTOUCH_Tick
                 _MTOUCH_needReburst
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_needReburst                                   1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Tick                                          0     0      0     121
                 _MTOUCH_Button_Tick
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_Tick                                   0     0      0     121
                 _Button_Tick_helper
 ---------------------------------------------------------------------------------
 (4) _Button_Tick_helper                                   3     3      0     121
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Sensor_SampleAll                              0     0      0   11346
   _MTOUCH_Sensor_isSamplingComplete
_MTOUCH_Sensor_postAcquisitionProces
            _Sensor_FrequencyHopping
 ---------------------------------------------------------------------------------
 (3) _Sensor_FrequencyHopping                              0     0      0    1841
_Sensor_FrequencyHopping_Autotune_Pr
             _Sensor_setSamplePeriod
 ---------------------------------------------------------------------------------
 (4) _Sensor_setSamplePeriod                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Sensor_FrequencyHopping_Autotune_Process            11    11      0    1841
                                              8 BANK0     11    11      0
                             ___bmul
                                _abs
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     242
                                              4 BANK0      4     2      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_postAcquisitionProcess                 2     2      0    3015
                                             14 BANK0      2     2      0
             _Sensor_DefaultCallback
            _Sensor_RawSample_Update
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _Sensor_RawSample_Update                              3     3      0    1728
                                             11 BANK0      3     3      0
                       _medianFilter
 ---------------------------------------------------------------------------------
 (5) _medianFilter                                         7     5      2    1584
                                              4 BANK0      7     5      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _Sensor_DefaultCallback                               1     0      1      53
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_isSamplingComplete                     2     2      0    6490
                                             10 BANK0      2     2      0
            _MTOUCH_Sensor_isEnabled
           _MTOUCH_Sensor_isSampling
           _MTOUCH_Sensor_wasSampled
            _Sensor_scheduleNextScan
 ---------------------------------------------------------------------------------
 (4) _Sensor_scheduleNextScan                              5     5      0    4068
                                              5 BANK0      5     5      0
            _MTOUCH_Sensor_isEnabled
           _MTOUCH_Sensor_wasSampled
                  _Sensor_SetTrisBit
                _Sensor_isCalibrated
        _Sensor_isCalibratingAcqTime
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) _Sensor_isCalibratingAcqTime                          1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_isCalibrated                                  2     2      0      88
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_SetTrisBit                                    4     3      1     170
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_isEnabled                              1     1      0    1166
                                              4 BANK0      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_isSampling                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Initialize                                    0     0      0    6399
        _MTOUCH_Button_InitializeAll
     _MTOUCH_DataStreamer_Initialize
        _MTOUCH_Sensor_InitializeAll
     _MTOUCH_Sensor_Sampled_ResetAll
      _MTOUCH_Sensor_Scan_Initialize
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Scan_Initialize                        0     0      0     174
      _MTOUCH_Sensor_ADCC_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_ADCC_Initialize                        0     0      0     174
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (5) _ADCC_SetADTIInterruptHandler                         2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Sampled_ResetAll                       2     2      0     156
                                              1 BANK0      2     2      0
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_InitializeAll                          2     2      0    4189
                                             10 BANK0      2     2      0
           _MTOUCH_Sensor_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_Initialize                             1     1      0    3608
                                              5 BANK0      1     1      0
            _MTOUCH_Sensor_Calibrate
               _MTOUCH_Sensor_Enable
               _Sensor_Sampled_Reset
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _Sensor_Sampled_Reset                                 1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Enable                                 1     1      0    1166
                                              4 BANK0      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_DataStreamer_Initialize                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_InitializeAll                          2     2      0    1880
                                             10 BANK0      2     2      0
           _MTOUCH_Button_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     6      4     513
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_DataStreamer_Service                          7     7      0    3648
                                             11 BANK0      6     6      0
         _MTOUCH_Button_Baseline_Get
        _MTOUCH_Button_Deviation_Get
          _MTOUCH_Button_Reading_Get
          _MTOUCH_Button_Scaling_Get
        _MTOUCH_Button_Threshold_Get
            _MTOUCH_Button_isPressed
  _MTOUCH_Sensor_AcquisitionTime_Get
    _MTOUCH_Sensor_AdditionalCap_Get
                            ___awmod
           _datastreamer_output_byte
 ---------------------------------------------------------------------------------
 (3) _datastreamer_output_byte                             1     1      0      66
                                              2 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_AdditionalCap_Get                      1     1      0    1166
                                              4 BANK0      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_AcquisitionTime_Get                    1     1      0    1166
                                              4 BANK0      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_isPressed                              2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_Threshold_Get                          2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_Scaling_Get                            2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_Reading_Get                            4     2      2      44
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_Deviation_Get                          2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_Baseline_Get                           3     1      2      66
                                              8 BANK0      3     1      2
         _Button_Baseline_Get_helper
 ---------------------------------------------------------------------------------
 (4) _Button_Baseline_Get_helper                           8     6      2      22
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Button_ServiceAll                             2     2      0   11107
                                             20 BANK0      2     2      0
                     _Button_Service
 ---------------------------------------------------------------------------------
 (3) _Button_Service                                       3     3      0   11039
                                             17 BANK0      3     3      0
            _Button_Deviation_Update
              _Button_Reading_Update
          _Button_State_Initializing *
            _Button_State_NotPressed *
               _Button_State_Pressed *
           _MTOUCH_Button_Initialize
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_wasSampled                             1     1      0    1166
                                              4 BANK0      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_isCalibrated                           2     2      0    1166
                                              4 BANK0      2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _Button_State_Pressed                                 3     2      1    1731
                                             12 BANK0      3     2      1
             _Button_DefaultCallback
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (4) _Button_State_NotPressed                              3     2      1    2070
                                             12 BANK0      3     2      1
             _Button_Baseline_Update
             _Button_DefaultCallback
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_Initialize                             3     3      0    1299
                                              5 BANK0      3     3      0
            _MTOUCH_Sensor_Calibrate
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Calibrate                              1     1      0    1166
                                              4 BANK0      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) _Button_DefaultCallback                               1     0      1     159
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (4) _Button_State_Initializing                            5     4      1    1732
                                             12 BANK0      5     4      1
         _Button_Baseline_Initialize
             _Button_Baseline_Update
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Update                               7     7      0     260
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Initialize                           5     5      0    1274
                                              7 BANK0      5     5      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (4) _Button_Reading_Update                                1     1      0    1463
                                             10 BANK0      1     1      0
       _Button_Reading_Update_Helper
 ---------------------------------------------------------------------------------
 (5) _Button_Reading_Update_Helper                         3     3      0    1386
                                              7 BANK0      3     3      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_RawSample_Get                          3     1      2    1166
                                              4 BANK0      3     1      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1    1122
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _Button_Deviation_Update                             15    15      0     213
                                              0 BANK0     15    15      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0    2306
                                NULL *
                  _ADCC_ThresholdISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (9) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _ADCC_ThresholdISR                                    0     0      0    2306
                                NULL *
       _ADCC_DefaultInterruptHandler *
           _ADCC_ThresholdISR_mTouch *
 ---------------------------------------------------------------------------------
 (10) _ADCC_ThresholdISR_mTouch                            0     0      0    2306
              _MTOUCH_Sensor_Service
 ---------------------------------------------------------------------------------
 (11) _MTOUCH_Sensor_Service                               3     3      0    2306
                                             10 COMMON     3     3      0
             _Sensor_autoCalibration
                  _Sensor_setSampled
                i1_Sensor_SetTrisBit
              i1_Sensor_isCalibrated
          i1_Sensor_scheduleNextScan
                           i1___bmul
                              i1_abs
 ---------------------------------------------------------------------------------
 (12) i1_Sensor_scheduleNextScan                           5     5      0    1042
                                              5 COMMON     5     5      0
          i1_MTOUCH_Sensor_isEnabled
         i1_MTOUCH_Sensor_wasSampled
                i1_Sensor_SetTrisBit
              i1_Sensor_isCalibrated
      i1_Sensor_isCalibratingAcqTime
                           i1___bmul
 ---------------------------------------------------------------------------------
 (13) i1_Sensor_isCalibrated                               2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (13) i1_Sensor_SetTrisBit                                 4     3      1      96
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (13) i1_MTOUCH_Sensor_wasSampled                          1     1      0     226
                                              4 COMMON     1     1      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (13) i1_MTOUCH_Sensor_isEnabled                           1     1      0     226
                                              4 COMMON     1     1      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (12) i1___bmul                                            4     3      1     182
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (12) _Sensor_setSampled                                   1     1      0      55
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _Sensor_autoCalibration                              6     6      0     724
                                              4 COMMON     6     6      0
          _Sensor_setCalibratAcqTime
               _Sensor_setCalibrated
      i1_Sensor_isCalibratingAcqTime
                              i1_abs
 ---------------------------------------------------------------------------------
 (12) i1_abs                                               4     2      2     118
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (13) i1_Sensor_isCalibratingAcqTime                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _Sensor_setCalibrated                                1     1      0     110
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _Sensor_setCalibratAcqTime                           1     1      0     132
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MTOUCH_Service_Mainloop
     _MTOUCH_Button_ServiceAll
       _Button_Service
         _Button_Deviation_Update
         _Button_Reading_Update
           _Button_Reading_Update_Helper
             _MTOUCH_Sensor_RawSample_Get
               ___bmul
         _Button_State_Initializing *
           _Button_Baseline_Initialize
             _MTOUCH_Sensor_RawSample_Get
           _Button_Baseline_Update
         _Button_State_NotPressed *
           _Button_Baseline_Update
           _Button_DefaultCallback
           _MTOUCH_Button_Initialize
             _MTOUCH_Sensor_Calibrate
               ___bmul
         _Button_State_Pressed *
           _Button_DefaultCallback
           _MTOUCH_Button_Initialize
         _MTOUCH_Button_Initialize *
         _MTOUCH_Sensor_isCalibrated *
           ___bmul
         _MTOUCH_Sensor_wasSampled *
           ___bmul
     _MTOUCH_DataStreamer_Service
       _MTOUCH_Button_Baseline_Get
         _Button_Baseline_Get_helper
       _MTOUCH_Button_Deviation_Get
       _MTOUCH_Button_Reading_Get
       _MTOUCH_Button_Scaling_Get
       _MTOUCH_Button_Threshold_Get
       _MTOUCH_Button_isPressed
       _MTOUCH_Sensor_AcquisitionTime_Get
         ___bmul
       _MTOUCH_Sensor_AdditionalCap_Get
         ___bmul
       ___awmod
       _datastreamer_output_byte
         _EUSART_Write
     _MTOUCH_Initialize
       _MTOUCH_Button_InitializeAll
         _MTOUCH_Button_Initialize
         _memcpy
       _MTOUCH_DataStreamer_Initialize
       _MTOUCH_Sensor_InitializeAll
         _MTOUCH_Sensor_Initialize
           _MTOUCH_Sensor_Calibrate
           _MTOUCH_Sensor_Enable
             ___bmul
           _Sensor_Sampled_Reset
           ___bmul
         _memcpy
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Sensor_Scan_Initialize
         _MTOUCH_Sensor_ADCC_Initialize
           _ADCC_SetADTIInterruptHandler
     _MTOUCH_Sensor_SampleAll
       _MTOUCH_Sensor_isSamplingComplete
         _MTOUCH_Sensor_isEnabled
           ___bmul
         _MTOUCH_Sensor_isSampling
         _MTOUCH_Sensor_wasSampled
         _Sensor_scheduleNextScan
           _MTOUCH_Sensor_isEnabled
           _MTOUCH_Sensor_wasSampled
           _Sensor_SetTrisBit
           _Sensor_isCalibrated
           _Sensor_isCalibratingAcqTime
           ___bmul
       _MTOUCH_Sensor_postAcquisitionProcess
         _Sensor_DefaultCallback
         _Sensor_RawSample_Update
           _medianFilter
             ___bmul
         ___bmul
       _Sensor_FrequencyHopping
         _Sensor_FrequencyHopping_Autotune_Process
           ___bmul
           _abs
             ___bmul (ARG)
         _Sensor_setSamplePeriod
     _MTOUCH_Sensor_Sampled_ResetAll
     _MTOUCH_Tick
       _MTOUCH_Button_Tick
         _Button_Tick_helper
     _MTOUCH_needReburst
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _MTOUCH_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _ADCC_ThresholdISR *
     NULL(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCC_ThresholdISR_mTouch *
       _MTOUCH_Sensor_Service
         _Sensor_autoCalibration
           _Sensor_setCalibratAcqTime
           _Sensor_setCalibrated
           i1_Sensor_isCalibratingAcqTime
           i1_abs
         _Sensor_setSampled
         i1_Sensor_SetTrisBit
         i1_Sensor_isCalibrated
         i1_Sensor_scheduleNextScan
           i1_MTOUCH_Sensor_isEnabled
             i1___bmul
           i1_MTOUCH_Sensor_wasSampled
             i1___bmul
           i1_Sensor_SetTrisBit
           i1_Sensor_isCalibrated
           i1_Sensor_isCalibratingAcqTime
           i1___bmul
         i1___bmul
         i1_abs
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      41       7       81.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      9E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      9E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Apr 02 16:24:56 2025

                                   ?_EUSART_SetRxInterruptHandler 004C  
                                    ?_MTOUCH_Sensor_RawSample_Get 0050  
                                                  ___bmul@product 004E  
                                                              l40 0926  
                                         ?_Sensor_autoCalibration 0070  
                                                              l43 08F0  
                                                              l37 0A28  
                                                              l94 0DAD  
                                       _Sensor_setCalibratAcqTime 09F0  
                                                             l203 0995  
                                                             l108 0937  
                                                             l302 09A7  
                                                             l310 0E2E  
                                                             l214 079E  
                                                             l223 0525  
                                                             l208 0FAB  
                                                             l232 08A5  
                                                             l241 0B23  
                                                             l307 0F59  
                                                             l315 063C  
                                                             l331 088B  
                                                             l219 0503  
                                                             l323 0C7E  
                                                             l251 0B0D  
                                                             l229 07F6  
                                                             l237 0D32  
                                                             l270 0C03  
                                                             l319 0A64  
                                                             l280 0AF7  
                                                             l193 0E8D  
                                                             l700 0C3F  
                                                             l286 06C5  
                                                             l198 0C21  
                                                             l382 0003  
                                                             l711 09EF  
                                                             l375 0DD7  
                                                             l296 0BE6  
                                                             l561 08B1  
                                                             l369 0973  
                                                             l801 01B0  
                                                             l473 0CE4  
                                                             l707 0E5C  
                                                             l379 08A0  
                                                             l900 0C5D  
                                                             l812 08D8  
                                                             l726 089C  
                                                             l904 0AB6  
                                                             l841 088D  
                                                             l914 0890  
                                                             l738 03EB  
                                                             l923 0A78  
                                                             l852 09CB  
                                                             l908 08E8  
                                                             l692 0B68  
                                                             l756 0E02  
                                                             l685 0B51  
                                                             l782 0B9A  
                                                             l918 0A8C  
                                                             l838 0338  
                                                             l695 0C9F  
                                                             l856 0ACB  
                                                             l793 0D0A  
                                                             l882 0BB3  
                                                             l778 0A15  
                                                             l971 088C  
                                                             l878 09B9  
                                                             l974 08D1  
                                                             l886 0954  
                                                             l895 08F9  
                                                             l986 0278  
                                                             _GIE 005F  
                                     ?_Button_Baseline_Get_helper 004C  
                                                             _abs 09CC  
                                          ??_EUSART_RxDataHandler 0070  
                                  ?_EUSART_SetFramingErrorHandler 004C  
                                                    ___awmod@sign 0052  
                                                             wreg 0009  
                                ??_MTOUCH_Sensor_Sampled_ResetAll 004D  
                                 ?_MTOUCH_Sensor_Sampled_ResetAll 0070  
                                       ?_MTOUCH_Sensor_Initialize 0070  
                                                            l1121 0914  
                                                            l1130 091D  
                                                            ?_abs 0050  
                                                            l1124 0902  
                                                            l1061 0F0C  
                                                            l1118 090B  
                                                            l1127 08B7  
                                                            l1308 0AE1  
                                                            l1085 0D3A  
                                                            l1086 0D44  
                                                            l1089 0D5B  
                                                            l4001 0E4F  
                                                            l4011 08D2  
                                                            l3301 0E86  
                                                            l4005 0E51  
                                                            l4021 0DDA  
                                                            l4013 08D5  
                                                            l3311 0AB5  
                                                            l3303 0AA4  
                                                            l4111 0FB7  
                                                            l4007 0E5B  
                                                            l4023 0DE7  
                                                            l4015 0DD8  
                                                            l1448 0FFF  
                                                            l3321 05B9  
                                                            l3305 0AA9  
                                                            l4121 0FCB  
                                                            l4113 0FB9  
                                                            l4105 0FAC  
                                                            l3401 00E5  
                                                            l4025 0DF2  
                                                            l4201 0EDF  
                                                            l3251 0AD3  
                                                            l3331 0F18  
                                                            l3315 0E05  
                                                            l3323 05BA  
                                                            l4131 0FE6  
                                                            l4123 0FD0  
                                                            l4115 0FBD  
                                                            l4107 0FAE  
                                                            l4027 0DF8  
                                                            l4211 0EE9  
                                                            l4203 0EE2  
                                                            l3253 0AD7  
                                                            l3333 0F2E  
                                                            l3317 0E1F  
                                                            l3325 05FA  
                                                            l3261 09AA  
                                                            l4061 0A80  
                                                            l4133 0FEB  
                                                            l4125 0FD4  
                                                            l4117 0FC2  
                                                            l4109 0FB2  
                                                            l4301 026F  
                                                            l3501 0D78  
                                                            l3341 09C1  
                                                            l3421 015E  
                                                            l4029 0DFD  
                                                            l4221 0F08  
                                                            l4213 0EF1  
                                                            l4205 0EE4  
                                                            l3255 0AD9  
                                                            l3247 0ACE  
                                                            l3335 0F49  
                                                            l3327 05FC  
                                                            l3319 05B5  
                                                            l3263 09AF  
                                                            l3511 0BB2  
                                                            l3503 0B9D  
                                                            l4071 0A67  
                                                            l4127 0FD8  
                                                            l4119 0FC8  
                                                            l4135 0FF1  
                                                            l4303 0274  
                                                            l1751 0D84  
                                                            l3343 08E3  
                                                            l4231 096D  
                                                            l3351 0B5B  
                                                            l3415 0129  
                                                            l3407 00F4  
                                                            l4311 089D  
                                                            l4223 0F09  
                                                            l4215 0EF9  
                                                            l4207 0EE6  
                                                            l4151 0D8D  
                                                            l4143 08E9  
                                                            l3257 0AE0  
                                                            l3249 0ACF  
                                                            l3273 0B98  
                                                            l3265 0B84  
                                                            l3329 0F0F  
                                                            l3521 09A1  
                                                            l3505 0BA2  
                                                            l4241 0987  
                                                            l4073 0A6C  
                                                            l4137 0FF6  
                                                            l4129 0FE2  
                                                            l3337 08AC  
                                                            l3601 0C86  
                                                            l4233 0970  
                                                            l3361 0ABE  
                                                            l3345 0B54  
                                                            l3409 011A  
                                                            l1745 09DD  
                                                            l4305 0002  
                                                            l4225 0F0A  
                                                            l4217 0F05  
                                                            l4209 0EE8  
                                                            l4161 0D9F  
                                                            l4153 0D8F  
                                                            l4145 0D85  
                                                            l4321 0A16  
                                                            l3531 06A6  
                                                            l3267 0B89  
                                                            l3523 09A3  
                                                            l3515 0998  
                                                            l3291 0E5F  
                                                            l4243 098B  
                                                            l4235 0985  
                                                            l4067 0A8B  
                                                            l4059 0A7B  
                                                            l4139 0FFB  
                                                            l4083 08CD  
                                                            l3339 09BC  
                                                            l3611 0C94  
                                                            l3603 0C87  
                                                            l4227 0964  
                                                            l3347 0B55  
                                                            l3371 094B  
                                                            l3435 01A2  
                                                            l3427 016D  
                                                            l3419 0138  
                                                            l4307 0002  
                                                            l4091 090C  
                                                            l4219 0F07  
                                                            l4171 0DA9  
                                                            l4163 0DA1  
                                                            l4155 0D92  
                                                            l4147 0D89  
                                                            l4331 0A25  
                                                            l4323 0A19  
                                                            l4411 0935  
                                                            l3533 06B5  
                                                            l3525 063F  
                                                            l3517 099C  
                                                            l3293 0E69  
                                                            l3541 0757  
                                                            l4245 0990  
                                                            l4261 01C7  
                                                            l3613 0C96  
                                                            l3605 0C88  
                                                            l4229 096A  
                                                            l3621 0339  
                                                            l3429 0193  
                                                            l3701 0CF3  
                                                            l3381 09CC  
                                                            l4253 09E8  
                                                            l4341 0DB9  
                                                            l4333 0DAE  
                                                            l4093 08FA  
                                                            l4085 0915  
                                                            l4181 0925  
                                                            l4173 0DAB  
                                                            l4165 0DA3  
                                                            l4157 0D94  
                                                            l4149 0D8B  
                                                            l4325 0A1C  
                                                            l4413 0936  
                                                            l3535 06BE  
                                                            l3527 068C  
                                                            l3519 099D  
                                                            l3295 0E6E  
                                                            l3543 075B  
                                                            l3551 04A3  
                                                            l4079 0A77  
                                                            l4271 01D5  
                                                            l3615 0C97  
                                                            l3607 0C89  
                                                            l3367 0ACA  
                                                            l3359 0AB9  
                                                            l3375 08F3  
                                                            l3631 034F  
                                                            l3623 033B  
                                                            l3391 0068  
                                                            l3703 0CF7  
                                                            l3383 09D1  
                                                            l4255 09EE  
                                                            l4247 09DE  
                                                            l4351 0DC5  
                                                            l4343 0DBB  
                                                            l4335 0DAE  
                                                            l4191 0CDB  
                                                            l4183 0CC2  
                                                            l4087 08B2  
                                                            l4175 091E  
                                                            l4167 0DA5  
                                                            l4159 0D9D  
                                                            l4327 0A1F  
                                                            l3529 069D  
                                                            l3297 0E78  
                                                            l3545 0765  
                                                            l3537 0740  
                                                            l3561 04F2  
                                                            l3553 04BD  
                                                            l3801 0D50  
                                                            l4281 01EC  
                                                            l4273 01DB  
                                                            l3609 0C8A  
                                                            l3617 088E  
                                                            l3641 037A  
                                                            l3633 0358  
                                                            l3625 0340  
                                                            l3393 008A  
                                                            l3705 0CF8  
                                                            l3385 09D2  
                                                            l3713 0A03  
                                                            l4249 09E6  
                                                            l4361 0DD6  
                                                            l4353 0DC8  
                                                            l4345 0DBB  
                                                            l4337 0DB4  
                                                            l4193 0CDC  
                                                            l4185 0CD4  
                                                            l4089 0903  
                                                            l4177 0921  
                                                            l4169 0DA7  
                                                            l4329 0A22  
                                                            l4409 0932  
                                                            l3299 0E7F  
                                                            l3571 07B1  
                                                            l3547 0776  
                                                            l3539 0752  
                                                            l3563 04FB  
                                                            l3555 04C4  
                                                            l3803 0D56  
                                                            l4283 0249  
                                                            l4275 01E4  
                                                            l4267 01C8  
                                                            l4259 01B1  
                                                            l3491 0D5E  
                                                            l3651 03AD  
                                                            l3643 0389  
                                                            l3635 0362  
                                                            l3627 034A  
                                                            l3395 0094  
                                                            l3707 0D00  
                                                            l3731 02B3  
                                                            l3715 0A0E  
                                                            l4355 0DCB  
                                                            l4347 0DC3  
                                                            l4339 0DB7  
                                                            l4187 0CD6  
                                                            l4195 0ECB  
                                                            l4179 0922  
                                                            l3573 07C2  
                                                            l3565 051A  
                                                            l3557 04CC  
                                                            l3549 048F  
                                                            l3901 0AFA  
                                                            l3805 0D57  
                                                            l4293 0256  
                                                            l4277 01E6  
                                                            l4269 01D0  
                                                            l3493 0D65  
                                                            l3661 03CD  
                                                            l3653 03BC  
                                                            l3645 0393  
                                                            l3637 0368  
                                                            l3629 034C  
                                                            l3397 0099  
                                                            l3709 0D02  
                                                            l3741 02D3  
                                                            l3733 02B7  
                                                            l3725 027D  
                                                            l3717 0A0F  
                                                            l3581 0D17  
                                                            l4357 0DD0  
                                                            l4189 0CD9  
                                                            l4197 0ECD  
                                                            l3575 07D9  
                                                            l3567 0521  
                                                            l3559 04E4  
                                                            l3903 0AFF  
                                                            l3807 0D59  
                                                            l4295 0265  
                                                            l4287 024F  
                                                            l3495 0D6B  
                                                            l4607 0B63  
                                                            l3663 03CE  
                                                            l3655 03C3  
                                                            l3647 03A2  
                                                            l3639 0371  
                                                            l3399 00BF  
                                                            l3751 02E7  
                                                            l3743 02D9  
                                                            l3735 02BC  
                                                            l3727 02A5  
                                                            l3719 0279  
                                                            l3583 0D2A  
                                                            l4359 0DD3  
                                                            l4199 0ED5  
                                                            l3577 07EE  
                                                            l3569 079F  
                                                            l3585 0C60  
                                                            l3921 0C02  
                                                            l3913 0BE9  
                                                            l4289 0250  
                                                            l3497 0D6F  
                                                            l3593 0C7F  
                                                            l3665 03D0  
                                                            l3657 03C4  
                                                            l3649 03A7  
                                                            l3761 02EF  
                                                            l3745 02DF  
                                                            l3737 02C5  
                                                            l3729 02AF  
                                                            l3915 0BEE  
                                                            l4299 026B  
                                                            l3499 0D74  
                                                            l3595 0C82  
                                                            l3667 03E4  
                                                            l3659 03C7  
                                                            l3771 0309  
                                                            l3763 02F9  
                                                            l3747 02E3  
                                                            l3739 02D3  
                                                            l3579 0D0D  
                                                            l3933 0AF6  
                                                            l3925 0AE4  
                                                            l3909 0B0C  
                                                            l3861 0C11  
                                                            l3589 0B3D  
                                                            l3597 0C83  
                                                            l3669 03EA  
                                                            l3781 0315  
                                                            l3773 030F  
                                                            l3765 02FA  
                                                            l3757 02E8  
                                                            l3749 02E5  
                                                            l3951 0A58  
                                                            l3927 0AE9  
                                                            l3791 0D35  
                                                            l3871 0C1C  
                                                            l3599 0C84  
                                                            l3783 0319  
                                                            l3767 02FE  
                                                            l3881 0F89  
                                                            l3873 0F5C  
                                                            l3945 0BE4  
                                                            l3937 0BCF  
                                                            l3793 0D35  
                                                            l3961 0C22  
                                                            l3769 0304  
                                                            l3785 0320  
                                                            l3883 0F94  
                                                            l3875 0F66  
                                                            l3939 0BD4  
                                                            l3891 0B15  
                                                            l3795 0D3F  
                                                            l3867 0C13  
                                                            l3859 0C04  
                                                            l3971 0C35  
                                                            l3963 0C2F  
                                                            l3699 0CE7  
                                                            l3787 0329  
                                                            l3779 0310  
                                                            l3885 0F9B  
                                                            l3877 0F72  
                                                            l3957 0A62  
                                                            l3949 0A53  
                                                            l3797 0D45  
                                                            l3869 0C17  
                                                            l3973 0C3A  
                                                            l3981 0C50  
                                                            l3789 0332  
                                                            l3879 0F7F  
                                                            l3799 0D4C  
                                                            l3983 0C55  
                                                            l3975 0C40  
                                                            l3887 08A1  
                                                            l3897 0B22  
                                                            l3889 0B10  
                                                            l3969 0C31  
                                                            l3985 0899  
                                                            l3993 0E31  
                                                            l3979 0C4C  
                                                            l3995 0E3A  
                                                            l3987 0E2F  
                                                            l3997 0E44  
                                                            l3999 0E4C  
                               __end_ofi1_MTOUCH_Sensor_isEnabled 0A3D  
                                   ?_Button_Reading_Update_Helper 0070  
                                                            u2100 0776  
                                                            u2020 0D84  
                                                            u2101 0775  
                                                            u2021 0D83  
                                                            u2110 0787  
                                                            u2030 0BA2  
                                                            u2031 0BA1  
                                                            u2040 099C  
                                                            u2120 04A3  
                                                            u3000 0FE2  
                                                            u2041 099B  
                                                            u2121 04A2  
                                                            u3001 0FE1  
                                                            u2050 0650  
                                                            u2130 04BD  
                                                            u2210 0C78  
                                                            u2115 0783  
                                                            u2131 04BC  
                                                            u2060 0682  
                                                            u2140 04E4  
                                                            u3020 0FF1  
                                                            u2220 034A  
                                                            u3100 0DB4  
                                                            u2141 04E3  
                                                            u2205 0C63  
                                                            u3021 0FF0  
                                                            u3005 0FDE  
                                                            u2221 0349  
                                                            u3101 0DB3  
                                                            _LATA 0016  
                                                            u2070 069D  
                                                            u2150 051A  
                                                            u3030 0FF6  
                                                            u2230 0358  
                                                            u3110 0DC3  
                                                            _LATB 0017  
                                                            u2071 069C  
                                                            u2055 064C  
                                                            u2151 0519  
                                                            u2215 0C74  
                                                            u3031 0FF5  
                                                            u3015 0FE7  
                                                            u2231 0357  
                                                            u3111 0DC2  
                                                            _LATC 0018  
                                                            u2080 06B5  
                                                            u2160 07B1  
                                                            u3040 0995  
                                                            u2240 0362  
                                                            u2400 02C5  
                                                            u2081 06B4  
                                                            u2065 067E  
                                                            u2161 07B0  
                                                            u2145 04E0  
                                                            u3041 0994  
                                                            u2241 0361  
                                                            u2401 02C4  
                                                            u2170 07D9  
                                                            u2090 0752  
                                                            u2250 0368  
                                                            u2410 02D3  
                                                            u3050 09E6  
                                                            u2171 07D8  
                                                            u2091 0751  
                                                            u2251 0367  
                                                            u2411 02D2  
                                                            u3051 09E5  
                                                            u2500 0D3A  
                                                            u3060 01C7  
                                                            u2260 037A  
                                                            u2420 02DF  
                                                            u2180 0D17  
                                                            u2501 0D39  
                                                            u3061 01C6  
                                                            u2261 0379  
                                                            u2421 02DE  
                                                            u2181 0D16  
                                                            u2510 0D3F  
                                                            u3070 01DB  
                                                            u2270 0393  
                                                            u2350 0CF7  
                                                            u2430 02EE  
                                                            u2190 0D2A  
                                                            u2511 0D3E  
                                                            u3071 01DA  
                                                            u2271 0392  
                                                            u2351 0CF6  
                                                            u2431 02ED  
                                                            u2191 0D29  
                                                            u2520 0D56  
                                                            u3080 01EB  
                                                            u2600 0C21  
                                                            u2440 02F9  
                                                            u2360 0A0E  
                                                            u2521 0D55  
                                                            u3081 01EA  
                                                            u2601 0C20  
                                                            u2441 02F8  
                                                            u2361 0A0D  
                                                            u3090 0255  
                                                            u2450 0304  
                                                            u3091 0254  
                                                            u2451 0303  
                                                            u2620 0F72  
                                                            u1900 0ABE  
                                                            u2460 0309  
                                                            u2380 02AF  
                                                            u2621 0F71  
                                                            u1901 0ABD  
                                                            u2285 03D9  
                                                            u2461 0308  
                                                            u2381 02AE  
                                                            u1830 0AA9  
                                                            u2630 0F7F  
                                                            u2710 0C00  
                                                            u1910 09D1  
                                                            u2470 031F  
                                                            u2390 02BC  
                                                            u1831 0AA8  
                                                            u2631 0F7E  
                                                            u2615 0F5F  
                                                            u2711 0BFE  
                                                            u1911 09D0  
                                                            u2471 031E  
                                                            u2391 02BB  
                                                            u2375 0280  
                                                            u1760 0AD3  
                                                            u2640 0F94  
                                                            u2720 0C01  
                                                            u2800 0C5D  
                                                            u2480 0329  
                                                            u1761 0AD2  
                                                            u1825 0E62  
                                                            u2641 0F93  
                                                            u2705 0BF1  
                                                            u2801 0C5C  
                                                            u2481 0328  
                                                            u2385 02AB  
                                                            u1770 0AE0  
                                                            u1850 05B9  
                                                            u2730 0AE9  
                                                            u2650 0B15  
                                                            u2810 0E3A  
                                                            u1930 0094  
                                                            u2490 0332  
                                                            u1771 0ADF  
                                                            u1851 05B8  
                                                            u2731 0AE8  
                                                            u2651 0B14  
                                                            u2811 0E39  
                                                            u1931 0093  
                                                            u2491 0331  
                                                            u1860 05CB  
                                                            u1780 09AF  
                                                            u2820 0E44  
                                                            u1940 00BF  
                                                            u1845 0E24  
                                                            u1781 09AE  
                                                            u2821 0E43  
                                                            u1941 00BE  
                                                            u1925 0074  
                                                            u1790 0B89  
                                                            u1870 060D  
                                                            u2750 0BD4  
                                                            u2670 0AFF  
                                                            u2830 0E4C  
                                                            u1950 00E5  
                                                            u1791 0B88  
                                                            u2751 0BD3  
                                                            u2671 0AFE  
                                                            u2831 0E4B  
                                                            u1951 00E4  
                                                            u1880 0F18  
                                                            u2920 0A80  
                                                            u2840 0E5B  
                                                            u1960 011A  
                                                            u1881 0F17  
                                                            u1865 05C7  
                                                            u2745 0AEC  
                                                            u2665 0B18  
                                                            u2921 0A7F  
                                                            u2841 0E5A  
                                                            u1961 0119  
                                                            u1945 00BB  
                                                            u2770 0A58  
                                                            u2690 0BEE  
                                                            u2930 0A6C  
                                                            u1890 09C1  
                                                            u1970 015E  
                                                            u2850 0DE7  
                                                            u1875 0609  
                                                            u2771 0A57  
                                                            u2691 0BED  
                                                            u2931 0A6B  
                                                            u1891 09C0  
                                                            u1971 015D  
                                                            u1955 00E1  
                                                            u2851 0DE6  
                                                            u2780 0C3F  
                                                            u1980 0193  
                                                            u2860 0E02  
                                                            _PMD0 0796  
                                                            u2765 0BD7  
                                                            u2685 0B02  
                                                            u2781 0C3E  
                                                            u1981 0192  
                                                            u1965 0116  
                                                            u2861 0E01  
                                                            _PMD1 0797  
                                                            u2950 0FB2  
                                                            u2790 0C4B  
                                                            _PMD2 0798  
                                                            u2951 0FB1  
                                                            u2791 0C4A  
                                                            u1975 015A  
                                                            _PMD3 0799  
                                                            u2960 0FBD  
                                                            _PMD4 079A  
                                                            u2961 0FBC  
                                                            u1985 018F  
                                                            _PMD5 079B  
                                                            u2970 0FC8  
                                                            u2971 0FC7  
                                                            u2990 0FD8  
                                                            u2991 0FD7  
                                                            u2985 0FCC  
                                      Button_State_Pressed@button 0058  
                                         ??i1_Sensor_isCalibrated 0070  
                                                            _WPUA 0F39  
                                                            _WPUB 0F44  
                                                            _WPUC 0F4F  
                                                            _WPUE 0F65  
                                             _sensor_medianBuffer 0028  
                                              _MTOUCH_needReburst 0002  
                                                            abs@a 0050  
                                                            _data 00C0  
                                                            _main 0932  
                                                            fsr0h 0005  
                                                            fsr1h 0007  
                                                            indf0 0000  
                                                            fsr0l 0004  
                                                            indf1 0001  
                                                            fsr1l 0006  
                                                            btemp 007E  
                                                            start 0037  
                                     ?i1_MTOUCH_Sensor_wasSampled 0070  
                                       ??_Sensor_FrequencyHopping 005F  
                           __end_ofi1_Sensor_isCalibratingAcqTime 08E1  
                                   i1_Sensor_isCalibratingAcqTime 08D9  
                                               ___bmul@multiplier 004F  
                                             ?_MTOUCH_needReburst 0070  
                                                   ?_medianFilter 0050  
                                  __end_of_Sensor_autoCalibration 05B3  
                                        ?_MTOUCH_Service_Mainloop 0070  
                                                           ??_abs 0052  
                          MTOUCH_Sensor_isSamplingComplete@sensor 0057  
                                     ?_Button_Baseline_Initialize 0070  
Sensor_FrequencyHopping_Autotune_Process@varianceOverLimitCounter 002E  
                                   ??_MTOUCH_Sensor_RawSample_Get 0052  
                                   Sensor_RawSample_Update@sensor 0059  
                                   Sensor_RawSample_Update@result 0057  
                                                   ?_EUSART_Write 0070  
                                   __end_of_OSCILLATOR_Initialize 0927  
                             __end_of_Sensor_isCalibratingAcqTime 08FA  
                                     _Sensor_isCalibratingAcqTime 08F1  
                                                           _ADACC 0090  
                                                           _ADACQ 009D  
                                                           _ADCAP 009B  
                                                           _ADACT 0099  
                                                           ?_main 0070  
                                                           _ADCLK 0098  
                                                           _ADCNT 010C  
                                                           _ADPCH 009E  
                                                           _ADREF 009A  
                                                           _ADPRE 009C  
                                                 __end_of___awmod 1000  
                                                           _ADRPT 010D  
                                      _ADCC_ADTI_InterruptHandler 006B  
                                                           i1l140 0035  
                                                           i1l133 001A  
                                                           i1l134 0035  
                                                           i1l135 0029  
                                                           i1l564 0889  
                                                           i1l750 05B2  
                                                           i1l558 0963  
                                                           i1l911 08CA  
                                                           i1l904 0A50  
                                                           i1l745 05B2  
                                                           i1l738 048E  
                                                           i1l762 08AB  
                                                           i1l692 0B3A  
                                                           i1l765 06D5  
                                                           i1l774 073F  
                                                           i1l856 0A3C  
                                                           i1l768 06F2  
                                                           i1l892 0A02  
                                                           i1l886 0931  
                                                           i1l895 08E0  
                                                           i1l889 0948  
                                                           _OSCEN 0891  
                                                           _TRISA 0011  
                                                           _TRISB 0012  
                                                           _TRISC 0013  
                                                           i1_abs 0974  
                                            ??_MTOUCH_needReburst 004C  
                                     ??_MTOUCH_Button_Reading_Get 004E  
                           __end_of_MTOUCH_Sensor_Scan_Initialize 089D  
                                   _MTOUCH_Sensor_Scan_Initialize 0899  
                                         Sensor_setSampled@sensor 0070  
                           MTOUCH_Sensor_AcquisitionTime_Get@name 0050  
                                 __end_of_Sensor_scheduleNextScan 03EC  
                                                __end_ofi1___bmul 0AA2  
                                                           pclath 000A  
                                            _Sensor_Sampled_Reset 08E1  
                                     ??_MTOUCH_Button_Scaling_Get 004C  
                                                           status 0003  
                                                           wtemp0 007E  
                                                  ??_medianFilter 0052  
                                                 __initialization 0039  
                                      ?i1_Sensor_scheduleNextScan 0070  
                                          _Sensor_setSamplePeriod 0A03  
                                                    __end_of_main 093D  
                                            _Sensor_setCalibrated 093D  
                                                  ??_EUSART_Write 004C  
                                     ?_INTERRUPT_InterruptManager 0070  
                                  ??_EUSART_SetRxInterruptHandler 004E  
                                __end_of_MTOUCH_Button_Initialize 0E8E  
                                                          ??_main 0062  
                                         _MTOUCH_Sensor_Calibrate 09A8  
                                         ??_Button_Reading_Update 0056  
                                                          ?i1_abs 0070  
                                __end_of_ADCC_ThresholdISR_mTouch 08AC  
                            MTOUCH_Sensor_Sampled_ResetAll@sensor 004E  
                                        ?_Button_Deviation_Update 0070  
                                                    ?_MTOUCH_Tick 0070  
                                    Button_Baseline_Update@button 0052  
                                                          _ADACCH 0091  
                                                          _ADACCL 0090  
                       __end_of_EUSART_DefaultFramingErrorHandler 088B  
                             ??_EUSART_DefaultFramingErrorHandler 0070  
                              ?_EUSART_DefaultFramingErrorHandler 0070  
                               _EUSART_DefaultFramingErrorHandler 088A  
                                    datastreamer_output_byte@data 004E  
                                                          _ADCON0 0093  
                                                          _ADCON1 0094  
                                                          _ADCON2 0095  
                                                          _ADCON3 0096  
                                      _EUSART_OverrunErrorHandler 00DB  
                                                          _ADFLTR 0114  
                                                          _ADERRH 0117  
                                                          _ADERRL 0116  
                                                          _ADLTHH 010F  
                                                          _ADLTHL 010E  
                                                          _ADRESH 008D  
                                                          _ADRESL 008C  
                                                          _ADSTAT 0097  
                                                          _ADUTHH 0111  
                                                          _ADUTHL 0110  
                                                          _ANSELA 0F38  
                                                          _ANSELB 0F43  
                                                          _ANSELC 0F4E  
                                     __end_ofi1_Sensor_SetTrisBit 0B3B  
                                                          _RC1REG 0119  
                                                          _RC1STA 011D  
                                                          i1l1102 0ECA  
                                                          i1l1112 0898  
                                                          i1l1106 0B81  
                                                          i1l1115 0894  
                                                          i1l1109 088A  
                                                          i1l1308 0AA1  
                                                          i1l1092 0CBF  
                                                          i1l1095 0CC1  
                                                          u200_20 0A43  
                                                          u200_21 0A42  
                                                          _ODCONA 0F3A  
                                                          _ODCONB 0F45  
                                                          _ODCONC 0F50  
                                                          i1l4101 0B7C  
                                                          i1l4031 06C6  
                                                          i1l4103 0B7D  
                                                          u201_20 0978  
                                                          u201_21 0977  
                                                          i1l4041 06E9  
                                                          i1l4033 06CC  
                                                          i1l4051 072B  
                                                          i1l4043 06EE  
                                                          i1l4035 06D2  
                                                          _RC7PPS 0F27  
                                                          i1l4045 070E  
                                                          i1l4037 06D7  
                                                          i1l4053 0734  
                                                          i1l4055 073A  
                                                          i1l4047 071A  
                                                          i1l4039 06E0  
                                                          i1l1745 0984  
                                                          i1l3281 0A93  
                                                          i1l3441 0B26  
                                                          i1l4057 073C  
                                                          i1l4049 0725  
                                                          i1l4313 08A6  
                                                          i1l4401 0EB0  
                                                          i1l3283 0A97  
                                                          i1l3451 0A2A  
                                                          i1l4315 08A8  
                                                          i1l4403 0EB6  
                                                          i1l3285 0A99  
                                                          i1l3277 0A8E  
                                                          i1l3453 0A2F  
                                                          i1l3445 0B2D  
                                                          i1l4317 0895  
                                                          i1l4405 0EC0  
                                                          i1l4421 0013  
                                                          i1l3711 08C5  
                                                          i1l3287 0AA0  
                                                          i1l3279 0A8F  
                                                          i1l3471 0A3E  
                                                          i1l3439 0B25  
                                                          i1l3463 0928  
                                                          i1l4095 0B69  
                                                          i1l4319 0891  
                                                          i1l4407 0EC7  
                                                          i1l4423 001E  
                                                          i1l4415 0006  
                                                          i1l3473 0A43  
                                                          i1l4097 0B71  
                                                          i1l4425 0022  
                                                          i1l4417 000A  
                                                          i1l3379 09F1  
                                                          i1l3467 08DA  
                                                          i1l3483 0974  
                                                          i1l3459 0A3B  
                                                          i1l3811 03ED  
                                                          i1l4371 0955  
                                                          i1l4099 0B76  
                                                          i1l4427 002D  
                                                          i1l4419 000F  
                                                          i1l3389 093E  
                                                          i1l3485 0978  
                                                          i1l3821 040B  
                                                          i1l3813 03F2  
                                                          i1l4373 0957  
                                                          i1l4381 0CAE  
                                                          i1l4429 0031  
                                                          i1l3487 0979  
                                                          i1l3671 0527  
                                                          i1l3479 0A4F  
                                                          i1l3831 0438  
                                                          i1l3823 0415  
                                                          i1l3815 03FC  
                                                          i1l4375 095E  
                                                          i1l4391 0E94  
                                                          i1l4383 0CB3  
                                                          i1l3681 055F  
                                                          i1l3673 052C  
                                                          i1l4609 0B35  
                                                          i1l3841 0464  
                                                          i1l3833 0441  
                                                          i1l3825 041A  
                                                          i1l3817 03FE  
                                                          i1l3809 03EC  
                                                          i1l4393 0E99  
                                                          i1l4385 0CB9  
                                                          i1l4377 0CA0  
                                                          i1l3691 059E  
                                                          i1l3675 0535  
                                                          i1l3683 0564  
                                                          i1l3851 0475  
                                                          i1l3843 046A  
                                                          i1l3835 044D  
                                                          i1l3827 0423  
                                                          i1l3819 0401  
                                                          i1l4395 0E9F  
                                                          i1l4387 0CBA  
                                                          i1l4379 0CA7  
                                                          i1l3693 05A4  
                                                          i1l3685 0589  
                                                          i1l3677 054C  
                                                          i1l3853 0477  
                                                          i1l3845 046B  
                                                          i1l3837 0452  
                                                          i1l3829 042C  
                                                          i1l4397 0EA5  
                                                          i1l4389 0E8E  
                                                          i1l3695 05A9  
                                                          i1l3687 058F  
                                                          i1l3679 055A  
                                                          i1l3855 0487  
                                                          i1l3847 046E  
                                                          i1l3839 0458  
                                                          i1l4399 0EAA  
                                                          i1l3689 0594  
                                                          i1l3857 048C  
                                                          i1l3849 0474  
                                                          u230_25 053D  
                                                          u231_20 054C  
                                                          u231_21 054B  
                                                          u231_25 0548  
                                                          u232_20 055A  
                                                          u312_20 095E  
                                                          u320_20 0013  
                                                          u232_21 0559  
                                                          u312_21 095D  
                                                          u320_21 0012  
                                                          _INLVLA 0F3C  
                                                          _INLVLB 0F47  
                                           ?_Sensor_Sampled_Reset 0070  
                                                          _INLVLC 0F52  
                                                          _INLVLE 0F68  
                                                          u233_20 0589  
                                                          u313_20 0CA7  
                                                          u321_20 001E  
                                                          u233_21 0588  
                                                          u313_21 0CA6  
                                                          u321_21 001D  
                                                          u233_25 0585  
                                                          u234_20 059E  
                                                          u314_20 0CB9  
                                                          u322_20 0022  
                                                          u234_21 059D  
                                                          u314_21 0CB8  
                                                          u322_21 0021  
                                                          u315_20 0E99  
                                                          u323_20 002D  
                                                          u315_21 0E98  
                                                          u323_21 002C  
                                                          u180_20 0A93  
                                                          u316_20 0EAA  
                                                          u324_20 0031  
                                                          u180_21 0A92  
                                                          u316_21 0EA9  
                                                          u324_21 0030  
                                                          u229_20 0535  
                                                          u181_20 0AA0  
                                                          u253_20 03FC  
                                                          u317_20 0EC0  
                                                          u229_21 0534  
                                                          u181_21 0A9F  
                                                          u253_21 03FB  
                                                          u317_21 0EBF  
                                                          u254_20 040B  
                                                          u318_20 000A  
                                                          u254_21 040A  
                                                          u318_21 0009  
                                                          u255_20 0415  
                                                          u319_20 000F  
                                                          u255_21 0414  
                                                          u319_21 000E  
                                                          u256_20 041A  
                                                          u256_21 0419  
                                                          u257_20 042C  
                                                          u257_21 042B  
                                                          u258_20 0441  
                                                          u290_20 072B  
                                                          u258_21 0440  
                                                          u290_21 072A  
                                                          u291_20 073A  
                                                          u291_21 0739  
                                                          u259_25 047F  
                                                          u294_20 0B7C  
                                                          u294_21 0B7B  
                                                          u199_20 0A2F  
                                                          u287_20 06D2  
                                                          u199_21 0A2E  
                                                          u287_21 06D1  
                                                          u288_20 06E9  
                                                          u288_21 06E8  
                                                          u289_20 070E  
                                                          u289_21 070D  
                                                          _OSCFRQ 0893  
                                                          _TX1REG 011A  
                                                          _TX1STA 011E  
                       __end_of_MTOUCH_Sensor_AcquisitionTime_Get 0A79  
                             ??_MTOUCH_Sensor_AcquisitionTime_Get 0050  
                              ?_MTOUCH_Sensor_AcquisitionTime_Get 0070  
                               _MTOUCH_Sensor_AcquisitionTime_Get 0A65  
                               MTOUCH_Button_InitializeAll@button 0057  
                                                          i1abs@a 0070  
                                        _datastreamer_output_byte 08CB  
                                  ??_Button_Reading_Update_Helper 0053  
                                          _Button_DefaultCallback 088B  
                                 __end_of_MTOUCH_Service_Mainloop 0DD8  
                                             _Sensor_isCalibrated 0949  
                                       _MTOUCH_Button_Reading_Get 0BCD  
                                     MTOUCH_Sensor_Service@sensor 007C  
                                          _Sensor_DefaultCallback 088D  
                                                   _packet_sample 0031  
                                                          ___bmul 0ACC  
                                           ?_Sensor_setCalibrated 0070  
                               __end_ofi1_Sensor_scheduleNextScan 048F  
                                               _ADCC_ThresholdISR 0955  
                                    Sensor_DefaultCallback@sensor 004C  
                                                       ??___awmod 0050  
                                             _EUSART_Transmit_ISR 0CA0  
                                                          _memcpy 0D5C  
                                              ?_ADCC_ThresholdISR 0070  
                                                 ___awmod@divisor 004C  
                                       _MTOUCH_Button_Scaling_Get 0AF8  
                                __end_of_MTOUCH_Button_ServiceAll 0996  
                                                 ___awmod@counter 0051  
                                   __end_of_MTOUCH_Sensor_Service 0740  
                                    Sensor_autoCalibration@sensor 0079  
                                     ?_MTOUCH_Button_Baseline_Get 0054  
                                                 _ADCC_Initialize 0CC2  
                                                  _PMD_Initialize 08E9  
                                         _MTOUCH_Sensor_SampleAll 09DE  
                                    Button_DefaultCallback@button 004C  
                                             ??_ADCC_ThresholdISR 007D  
                                            ?_Sensor_isCalibrated 0070  
                                        ?_Sensor_RawSample_Update 0070  
                                         ?_Button_Baseline_Update 0070  
                    ADCC_SetADTIInterruptHandler@InterruptHandler 004C  
                                     ??i1_MTOUCH_Sensor_isEnabled 0074  
                                            ?_EUSART_Transmit_ISR 0070  
                                 MTOUCH_Sensor_RawSample_Get@name 0052  
                      MTOUCH_DataStreamer_Service@count_bytes_out 005C  
                                               _SYSTEM_Initialize 0A16  
                                         __end_of__initialization 0062  
                                  ?_MTOUCH_Sensor_Scan_Initialize 0070  
                                              ?_SYSTEM_Initialize 0070  
                                             _Button_StateMachine 00D3  
                                      __end_of_Button_Tick_helper 0D33  
                                   MTOUCH_Sensor_Calibrate@sensor 0050  
                            __end_of_EUSART_SetTxInterruptHandler 08B8  
                                    _EUSART_SetTxInterruptHandler 08B2  
                                             ___bmul@multiplicand 004C  
                                       __end_of_ADCC_ThresholdISR 0964  
                                                   __end_ofi1_abs 0985  
                                   MTOUCH_Button_Scaling_Get@name 004D  
                                       ?_MTOUCH_Sensor_isSampling 0070  
                       MTOUCH_DataStreamer_Service@u16temp_output 005A  
                                                  __pcstackCOMMON 0070  
                                         _MTOUCH_Button_isPressed 0BE7  
                                                    __pidataBANK0 07F7  
                                                    __pidataBANK1 0BB4  
                                             ??_SYSTEM_Initialize 0058  
                                      __end_of_MTOUCH_Button_Tick 08A6  
                                __end_of_MTOUCH_Sensor_Initialize 0B52  
                                       ??_MTOUCH_Sensor_Calibrate 0050  
                                 __end_of_Button_Deviation_Update 06C6  
                                          __end_of_PMD_Initialize 08F1  
                                                       ?i1___bmul 0070  
                                                  _Button_Service 0F5A  
                                      ?_Button_State_Initializing 0058  
                                            Button_Service@button 005F  
                                                         ??i1_abs 0072  
                                           ??_Sensor_isCalibrated 004C  
                                            _eusartRxStatusBuffer 0020  
                                  i1Sensor_scheduleNextScan@state 0077  
                                  __end_of_Button_Baseline_Update 063D  
       Sensor_FrequencyHopping_Autotune_Process@selectedFrequency 005D  
                                        _MTOUCH_Button_Initialize 0E5D  
                                 ??_EUSART_SetOverrunErrorHandler 004E  
                                            __end_of_medianFilter 01B1  
                                                i1___bmul@product 0072  
                                         _Button_State_NotPressed 048F  
                                       __end_of_SYSTEM_Initialize 0A29  
                                               _lowpowerActivated 003D  
                                           ??_EUSART_Transmit_ISR 0070  
                                MTOUCH_Sensor_isCalibrated@sensor 0051  
                                          ??_Sensor_Sampled_Reset 004C  
                                        _ADCC_ThresholdISR_mTouch 08A6  
                                                      __pbssBANK0 0020  
                                                      __pbssBANK1 00A0  
                                            __end_of_EUSART_Write 0D5C  
                                         _MTOUCH_Sensor_isEnabled 0AB7  
                                   __end_ofi1_Sensor_isCalibrated 0932  
                                 MTOUCH_Button_Threshold_Get@name 004D  
                                      __end_of_mtouch_button_init 1010  
                                          ??_Sensor_setCalibrated 0070  
                                                      __pmaintext 0932  
                                         Sensor_SetTrisBit@sensor 004F  
                                                         ?___bmul 004C  
                                   ?_EUSART_SetTxInterruptHandler 004C  
                                _EUSART_TxDefaultInterruptHandler 006D  
                                       i1_MTOUCH_Sensor_isEnabled 0A29  
                                         __end_of_ADCC_Initialize 0CE5  
                                  MTOUCH_Sensor_wasSampled@sensor 0050  
                                                      __pintentry 0004  
                                                         _ADFLTRH 0115  
                                                         _ADFLTRL 0114  
                                          __end_of_Button_Service 0FAC  
                                                         ?_memcpy 004C  
                                                         _ADPREVH 008F  
                                                         _ADPREVL 008E  
                             __end_of_MTOUCH_Button_InitializeAll 0C22  
                                     _MTOUCH_Button_InitializeAll 0C04  
                            __end_of_ADCC_SetADTIInterruptHandler 08B2  
                                    _ADCC_SetADTIInterruptHandler 08AC  
                                                         _ADSTPTH 0113  
                                                         _ADSTPTL 0112  
                                    ??_EUSART_DefaultErrorHandler 0071  
                             __end_of_MTOUCH_Sensor_InitializeAll 0C40  
                                     _MTOUCH_Sensor_InitializeAll 0C22  
                                       ??_MTOUCH_Sensor_SampleAll 005F  
                                                      ??i1___bmul 0071  
                                                 ?_PMD_Initialize 0070  
                                 __end_of_Sensor_RawSample_Update 0D0B  
                                       ?_MTOUCH_Sensor_wasSampled 0070  
                                                   _eusartRxCount 0034  
                                       Sensor_isCalibrated@sensor 004D  
                                       i1Sensor_SetTrisBit@sensor 0073  
                               __end_of_Button_State_Initializing 079F  
                                                         _SP1BRGH 011C  
                                                         _SP1BRGL 011B  
                                        _MTOUCH_Button_ServiceAll 0985  
                                                         _OSCCON1 088D  
                                                         _OSCCON3 088F  
                                                         _OSCTUNE 0892  
                                                         _SLRCONA 0F3B  
                                                         _SLRCONB 0F46  
                                                         _SLRCONC 0F51  
                                    __end_of_Button_State_Pressed 07F7  
                                    ?_MTOUCH_Button_Deviation_Get 0070  
                                        ??_EUSART_SetErrorHandler 004E  
                                Button_Baseline_Initialize@button 0057  
                                 Sensor_setCalibratAcqTime@sensor 0070  
                                         ?_Sensor_setSamplePeriod 0070  
                                       ??_MTOUCH_Button_isPressed 004C  
                                                      _freq_index 003C  
                                               _Sensor_SetTrisBit 0B52  
                                    ?_MTOUCH_DataStreamer_Service 0070  
                                     ??i1_Sensor_scheduleNextScan 0075  
                                              ?_Sensor_SetTrisBit 004C  
                                                         ___awmod 0FAC  
                                  MTOUCH_Button_Initialize@button 0053  
                                                 ?_Button_Service 0070  
                                                 _scanInterrupted 003E  
                                                         __ptext1 0A16  
                                                         __ptext2 08E9  
                                                         __ptext3 0D85  
                                                         __ptext4 091E  
                                                         __ptext5 0ECB  
                                                         __ptext6 08B2  
                                                         __ptext7 0915  
                                                         __ptext8 090C  
                                                         __ptext9 0903  
                                     Button_Reading_Update@button 0056  
                                             ??_Sensor_SetTrisBit 004D  
                                   ?_ADCC_SetADTIInterruptHandler 004C  
                                        _MTOUCH_Sensor_Initialize 0B3B  
                                           _OSCILLATOR_Initialize 091E  
                                       ??_Button_State_NotPressed 0059  
                                                ___awmod@dividend 004E  
                                        ??_PIN_MANAGER_Initialize 004C  
                                             i1___bmul@multiplier 0073  
                                   __end_of_Button_Reading_Update 09A8  
                               MTOUCH_Sensor_InitializeAll@sensor 0057  
                                      ??_datastreamer_output_byte 004E  
                                                _callback_sampled 0065  
                                       ??_MTOUCH_Sensor_isEnabled 0050  
                                                         clrloop0 08B9  
                                                _callback_pressed 0069  
                                  MTOUCH_Sensor_Initialize@sensor 0051  
                                   Sensor_scheduleNextScan@sensor 0055  
                                            end_of_initialization 0062  
                                   ??_MTOUCH_Button_Deviation_Get 004C  
                                         ?_Button_DefaultCallback 004C  
                           __end_of_EUSART_SetOverrunErrorHandler 0915  
                                   _EUSART_SetOverrunErrorHandler 090C  
                                                         memcpy@d 0054  
                                                         memcpy@n 004E  
                                                         memcpy@s 0051  
                                  __end_of_Sensor_setSamplePeriod 0A16  
                                      __end_of_mtouch_sensor_init 1019  
                                                         init_ram 08BE  
                                        ?_Sensor_FrequencyHopping 0070  
                                                         initloop 08BF  
                                       __end_of_Sensor_SetTrisBit 0B69  
                                     i1Sensor_isCalibrated@sensor 0071  
                                         ?_Sensor_DefaultCallback 004C  
                                               _EUSART_Initialize 0ECB  
                                    ??_MTOUCH_Sensor_isCalibrated 0050  
                                              ?_EUSART_Initialize 0070  
                             __end_of_MTOUCH_Sensor_RawSample_Get 0B9B  
                                     _MTOUCH_Sensor_RawSample_Get 0B82  
                                   ??_MTOUCH_DataStreamer_Service 0057  
                                         _Sensor_scheduleNextScan 0339  
                                             _mtouch_request_init 0041  
                                                ?_ADCC_Initialize 0070  
                  Sensor_FrequencyHopping_Autotune_Process@sensor 005C  
                                             ??_EUSART_Initialize 004E  
                                  ??_EUSART_SetTxInterruptHandler 004E  
                                   Button_Deviation_Update@button 0056  
                                                       _TRISCbits 0013  
                                       i1_Sensor_scheduleNextScan 03EC  
                                   MTOUCH_Sensor_isEnabled@sensor 0050  
                                      MTOUCH_Sensor_Enable@sensor 0050  
                                             _callback_notPressed 0067  
                                    ?_MTOUCH_Button_Threshold_Get 0070  
                                __end_of_MTOUCH_Sensor_isSampling 0891  
                                  __end_of_Button_DefaultCallback 088C  
                                      Sensor_setCalibrated@sensor 0070  
                                  __end_of_Sensor_DefaultCallback 088E  
                                       __end_of_EUSART_Initialize 0F0D  
                                        ??_Sensor_autoCalibration 0074  
                                              medianFilter@sensor 0056  
                                                    _medianFilter 0066  
                                            _Button_State_Pressed 079F  
                                  ??_ADCC_DefaultInterruptHandler 0070  
                                                  __end_of___bmul 0AE2  
                              __end_of_EUSART_DefaultErrorHandler 0895  
                                      _EUSART_DefaultErrorHandler 0891  
                           __end_of_MTOUCH_Sensor_ADCC_Initialize 0CA0  
                                   _MTOUCH_Sensor_ADCC_Initialize 0C7F  
                                      ??_MTOUCH_Button_Initialize 0051  
                __end_of_Sensor_FrequencyHopping_Autotune_Process 0339  
                      ??_Sensor_FrequencyHopping_Autotune_Process 0054  
                       ?_Sensor_FrequencyHopping_Autotune_Process 0070  
                        _Sensor_FrequencyHopping_Autotune_Process 0279  
                                 ??_MTOUCH_Sensor_Scan_Initialize 004E  
                                                    _EUSART_Write 0D33  
                                              _Button_Tick_helper 0D0B  
                                                  __end_of_memcpy 0D85  
                                          ?_OSCILLATOR_Initialize 0070  
                                      ??_ADCC_ThresholdISR_mTouch 007D  
                                     ??_Button_State_Initializing 0059  
                                    ??_Button_Baseline_Get_helper 004E  
                                           _MTOUCH_Sensor_Service 06C6  
                                             start_initialization 0039  
                                         _MTOUCH_Service_Mainloop 0DAE  
                                              _MTOUCH_Button_Tick 08A1  
                                             ?_Button_Tick_helper 0070  
                                                     __end_of_abs 09DE  
                                 __end_of_Sensor_FrequencyHopping 08D9  
                    EUSART_SetRxInterruptHandler@interruptHandler 004C  
                    EUSART_SetTxInterruptHandler@interruptHandler 004C  
                                   ??_MTOUCH_Button_Threshold_Get 004C  
                                             ?_MTOUCH_Button_Tick 0070  
                                 Button_State_Initializing@button 0058  
                                 i1Sensor_scheduleNextScan@sensor 0079  
                                         medianFilter@bufferIndex 003A  
                                  ?_EUSART_SetOverrunErrorHandler 004C  
                                __end_of_MTOUCH_Sensor_wasSampled 0AB7  
                                    ??i1_MTOUCH_Sensor_wasSampled 0074  
                                       ??_Sensor_scheduleNextScan 0051  
                                            ??_Button_Tick_helper 004C  
                                    __end_of_MTOUCH_Sensor_Enable 09CC  
                                      _EUSART_FramingErrorHandler 00DD  
                                                        ??___bmul 004D  
                                                ??_PMD_Initialize 004C  
             Sensor_FrequencyHopping_Autotune_Process@maxVariance 005A  
                                           ?_Button_State_Pressed 0058  
                                          _EUSART_SetErrorHandler 08FA  
                                      ??_MTOUCH_Button_ServiceAll 0060  
                                                     __pdataBANK0 0062  
                                                     __pdataBANK1 00C0  
                                                        ??_memcpy 0050  
                                     __end_of_Sensor_isCalibrated 0955  
                                    ??_Button_Baseline_Initialize 0053  
                                            ??_MTOUCH_Button_Tick 004F  
                          __end_of_MTOUCH_DataStreamer_Initialize 088D  
                                  _MTOUCH_DataStreamer_Initialize 088C  
                                              _mtouch_button_init 1000  
                                      Sensor_Sampled_Reset@sensor 004C  
                                  ?i1_Sensor_isCalibratingAcqTime 0070  
                                    ?_Sensor_isCalibratingAcqTime 0070  
                                     __end_of_EUSART_Transmit_ISR 0CC2  
                                                     __pbssCOMMON 007D  
                                                       ___latbits 0002  
                                                   _sampling_flag 003F  
                                                   __pcstackBANK0 004C  
                                __end_of_datastreamer_output_byte 08D2  
                        __end_of_MTOUCH_Sensor_isSamplingComplete 0E5D  
                              ??_MTOUCH_Sensor_isSamplingComplete 0056  
                               ?_MTOUCH_Sensor_isSamplingComplete 0070  
                                _MTOUCH_Sensor_isSamplingComplete 0E2F  
                                i1MTOUCH_Sensor_wasSampled@sensor 0074  
                                        Sensor_SetTrisBit@TrisBit 004C  
                                  MTOUCH_Button_ServiceAll@button 0061  
                                      __end_of_EUSART_Receive_ISR 0ECB  
                                 i1MTOUCH_Sensor_isEnabled@sensor 0074  
                                         _Button_Deviation_Update 063D  
                                      ?_Sensor_setCalibratAcqTime 0070  
                                _EUSART_RxDefaultInterruptHandler 00DF  
                                       _Button_State_Initializing 0740  
                                        _MTOUCH_Sensor_isSampling 088E  
                              __end_of_MTOUCH_Sensor_isCalibrated 0BB4  
                                      _MTOUCH_Sensor_isCalibrated 0B9B  
                                                       __pnvBANK0 006B  
                                                       __pnvBANK1 00D9  
                                               _Sensor_setSampled 08C4  
                                    __end_of_EUSART_RxDataHandler 0B82  
                                           i1_Sensor_isCalibrated 0927  
                                          _PIN_MANAGER_Initialize 0D85  
                                                ??_Button_Service 005D  
                                        ?_MTOUCH_Sensor_Calibrate 0070  
                                              ?_Sensor_setSampled 0070  
                              Button_Reading_Update_Helper@button 0055  
                                      ??_MTOUCH_Sensor_Initialize 0051  
                                                        ?___awmod 004C  
                                                    _eusartRxHead 0035  
                                                    _eusartTxHead 0038  
                                                    _eusartRxTail 007D  
                                                    _eusartTxTail 0037  
                                    ??_INTERRUPT_InterruptManager 007D  
                                             ??_Sensor_setSampled 0070  
                                       ??_MTOUCH_Service_Mainloop 0062  
                                         _eusartTxBufferRemaining 0036  
                                          ?_MTOUCH_Sensor_Service 0070  
                                      i1Sensor_SetTrisBit@TrisBit 0070  
                                                        _BAUD1CON 011F  
                                  ?_MTOUCH_Sensor_ADCC_Initialize 0070  
                    __end_of_MTOUCH_Sensor_postAcquisitionProcess 0E03  
                          ??_MTOUCH_Sensor_postAcquisitionProcess 005A  
                           ?_MTOUCH_Sensor_postAcquisitionProcess 0070  
                            _MTOUCH_Sensor_postAcquisitionProcess 0DD8  
                                   ??_Sensor_isCalibratingAcqTime 004C  
                                                   ??_MTOUCH_Tick 004F  
                                                  _eusartRxBuffer 00A0  
                                                  _eusartTxBuffer 00A8  
                                       __end_of_Sensor_setSampled 08CB  
                          EUSART_SetErrorHandler@interruptHandler 004C  
                                         _Sensor_RawSample_Update 0CE5  
                                   MTOUCH_Button_Reading_Get@name 004F  
                               __end_of_Sensor_setCalibratAcqTime 0A03  
                                                       clear_ram0 08B8  
                                                        _PIE1bits 0717  
                                                        _PIE3bits 0719  
                                               _eusartRxLastError 0033  
                                           i1___bmul@multiplicand 0070  
                                                        _PIR1bits 070D  
                                 ??_EUSART_SetFramingErrorHandler 004E  
                                                        _PIR3bits 070F  
                                          ??_Button_State_Pressed 0059  
                          __end_of_MTOUCH_Sensor_Sampled_ResetAll 0C5E  
                                  _MTOUCH_Sensor_Sampled_ResetAll 0C40  
                                        ?_MTOUCH_Sensor_SampleAll 0070  
                       __end_of_EUSART_DefaultOverrunErrorHandler 0899  
                             ??_EUSART_DefaultOverrunErrorHandler 0070  
                              ?_EUSART_DefaultOverrunErrorHandler 0070  
                               _EUSART_DefaultOverrunErrorHandler 0895  
                                              _mtouch_sensor_init 1010  
                                        _MTOUCH_Sensor_wasSampled 0AA2  
                                              _mtouch_time_toScan 0042  
                                        ??_Button_Baseline_Update 004C  
                             MTOUCH_Sensor_AdditionalCap_Get@name 0050  
                                                        i1___bmul 0A8D  
          Sensor_FrequencyHopping_Autotune_Process@frequencyIndex 005E  
                                                      _ADCON0bits 0093  
                                                      _ADCON1bits 0094  
                                                      _ADCON2bits 0095  
                                                      _ADCON3bits 0096  
                              __end_of_Button_Baseline_Get_helper 0C7F  
                                      _Button_Baseline_Get_helper 0C5E  
                                          _Sensor_autoCalibration 0526  
                                      __end_of_MTOUCH_needReburst 0004  
                                    ??_MTOUCH_Button_Baseline_Get 0056  
                                             i1_Sensor_SetTrisBit 0B24  
                                            _MTOUCH_Sensor_Enable 09BA  
                                        Button_Tick_helper@button 004E  
                                       ??_Button_Deviation_Update 004C  
                                           _Button_Reading_Update 0996  
                                        ?_MTOUCH_Button_isPressed 0070  
                                             __end_of_MTOUCH_Tick 08A1  
                                               _MTOUCH_Initialize 0964  
                                 __end_of_MTOUCH_Sensor_Calibrate 09BA  
                                  MTOUCH_Button_Baseline_Get@name 0056  
                                          ?i1_Sensor_isCalibrated 0070  
                              __end_ofi1_MTOUCH_Sensor_wasSampled 0A51  
                                      i1_MTOUCH_Sensor_wasSampled 0A3D  
                                                      _ADSTATbits 0097  
                                            ?i1_Sensor_SetTrisBit 0070  
                                              ?_MTOUCH_Initialize 0070  
                                                       memcpy@tmp 0053  
                                       ?_datastreamer_output_byte 0070  
                                                    _sample_delay 003B  
                        MTOUCH_Sensor_postAcquisitionProcess@name 005B  
                                         ??_OSCILLATOR_Initialize 004C  
                              __end_of_Button_Baseline_Initialize 0E2F  
                                      _Button_Baseline_Initialize 0E03  
                                             _EUSART_ErrorHandler 00D9  
                                             ??_MTOUCH_Initialize 0058  
                                     ?_EUSART_DefaultErrorHandler 0070  
                                        ?_Button_State_NotPressed 0058  
                         __end_of_MTOUCH_Sensor_AdditionalCap_Get 0A8D  
                               ??_MTOUCH_Sensor_AdditionalCap_Get 0050  
                                ?_MTOUCH_Sensor_AdditionalCap_Get 0070  
                                 _MTOUCH_Sensor_AdditionalCap_Get 0A79  
                                              Button_Service@name 005E  
                                        ?_MTOUCH_Sensor_isEnabled 0070  
                                      ?_MTOUCH_Button_Reading_Get 004C  
                                            _EUSART_RxDataHandler 0B69  
                             __end_of_MTOUCH_Button_Deviation_Get 0AF8  
                                     _MTOUCH_Button_Deviation_Get 0AE2  
                                           ?_MTOUCH_Sensor_Enable 0070  
                                                        __ptext10 08FA  
                                                        __ptext11 0CC2  
                                                        __ptext20 0279  
                                                        __ptext12 0DAE  
                                                        __ptext21 09CC  
                                                        __ptext13 0002  
                                                        __ptext30 0B52  
                                                        __ptext22 0DD8  
                                                        __ptext14 089D  
                                                        __ptext31 0AB7  
                                                        __ptext23 0CE5  
                                                        __ptext15 08A1  
                                                        __ptext40 08E1  
                                                        __ptext32 088E  
                                                        __ptext24 0066  
                                                        __ptext16 0D0B  
                                                        __ptext41 09BA  
                                                        __ptext33 0964  
                                                        __ptext25 088D  
                                                        __ptext17 09DE  
                                                        __ptext50 0A65  
                                                        __ptext42 088C  
                                                        __ptext34 0899  
                                                        __ptext26 0E2F  
                                                        __ptext18 08D2  
                                                        __ptext51 0BE7  
                                                        __ptext43 0C04  
                                                        __ptext35 0C7F  
                                                        __ptext27 0339  
                                                        __ptext19 0A03  
                                                        __ptext60 0AA2  
                                                        __ptext52 0B0E  
                                                        __ptext44 0D5C  
                                                        __ptext36 08AC  
                                                        __ptext28 08F1  
                                                        __ptext61 0B9B  
                                                        __ptext53 0AF8  
                                                        __ptext45 01B1  
                                                        __ptext37 0C40  
                                                        __ptext29 0949  
                                                        __ptext70 0996  
                                                        __ptext62 048F  
                                                        __ptext54 0BCD  
                                                        __ptext46 08CB  
                                                        __ptext38 0C22  
                                                        __ptext71 0F0D  
                                                        __ptext63 0740  
                                                        __ptext55 0AE2  
                                                        __ptext47 0D33  
                                                        __ptext39 0B3B  
                                                        __ptext80 0891  
                                                        __ptext72 0B82  
                                                        __ptext64 079F  
                                                        __ptext56 0A51  
                                                        __ptext48 0FAC  
                                                        __ptext81 0B69  
                                                        __ptext73 0ACC  
                                                        __ptext65 0E5D  
                                                        __ptext57 0C5E  
                                                        __ptext49 0A79  
                                                        __ptext90 0A29  
                                                        __ptext82 0955  
                                                        __ptext74 063D  
                                                        __ptext66 09A8  
                                                        __ptext58 0985  
                                                        __ptext91 0A8D  
                                                        __ptext83 0889  
                                                        __ptext67 088B  
                                                        __ptext59 0F5A  
                                                        __ptext92 08C4  
                                                        __ptext84 08A6  
                                                        __ptext76 0CA0  
                                                        __ptext68 05B3  
                                                        __ptext93 0526  
                                                        __ptext85 06C6  
                                                        __ptext77 0E8E  
                                                        __ptext69 0E03  
                                                        __ptext94 0974  
                                                        __ptext86 03EC  
                                                        __ptext78 0895  
                                                        __ptext95 08D9  
                                                        __ptext87 0927  
                                                        __ptext79 088A  
                                                        __ptext96 093D  
                                                        __ptext88 0B24  
                                                        __ptext97 09F0  
                                                        __ptext89 0A3D  
                                       __end_of_MTOUCH_Initialize 0974  
                                       ??_Sensor_RawSample_Update 0057  
                                                        _freq_hop 0062  
                                      ?_MTOUCH_Button_Scaling_Get 0070  
                                               _currentScanSensor 0040  
                                           ??i1_Sensor_SetTrisBit 0071  
                                 __end_of_MTOUCH_Sensor_SampleAll 09F0  
                                      Sensor_autoCalibration@name 0078  
                                         ?_EUSART_SetErrorHandler 004C  
                             __end_of_MTOUCH_DataStreamer_Service 0279  
                                     _MTOUCH_DataStreamer_Service 01B1  
                             MTOUCH_DataStreamer_Service@sequence 0039  
                                                      _RC1STAbits 011D  
                   EUSART_SetOverrunErrorHandler@interruptHandler 004C  
                                                        int$flags 007E  
                              __end_of_INTERRUPT_InterruptManager 0037  
                                      _INTERRUPT_InterruptManager 0004  
                           __end_of_EUSART_SetFramingErrorHandler 090C  
                                   _EUSART_SetFramingErrorHandler 0903  
                                    ?_MTOUCH_Button_InitializeAll 0070  
                                    ?_MTOUCH_Sensor_InitializeAll 0070  
                                                   _mtouch_button 00B0  
                                                      _INTCONbits 000B  
                                           ?_EUSART_RxDataHandler 0070  
                                                   _mtouch_sensor 0043  
                                                        memcpy@d1 0055  
                                                        memcpy@s1 004C  
                                 __end_of_MTOUCH_Button_isPressed 0C04  
                                        ??_Sensor_setSamplePeriod 004C  
                                      ??_MTOUCH_Sensor_isSampling 004C  
                                                     _MTOUCH_Tick 089D  
                               __end_of_MTOUCH_Button_Reading_Get 0BE7  
                                          ?_Button_Reading_Update 0070  
                                Button_Deviation_Update@deviation 0057  
                                    MTOUCH_Button_Initialize@name 0052  
                            __end_of_ADCC_DefaultInterruptHandler 088A  
                                    _ADCC_DefaultInterruptHandler 0889  
                                                        intlevel1 0000  
                                ??_MTOUCH_DataStreamer_Initialize 004C  
                                 ?_MTOUCH_DataStreamer_Initialize 0070  
                                       ?_MTOUCH_Button_Initialize 0070  
                                 ??i1_Sensor_isCalibratingAcqTime 0070  
                                         ?_PIN_MANAGER_Initialize 0070  
                               __end_of_MTOUCH_Button_Scaling_Get 0B0E  
                                     ??_Sensor_setCalibratAcqTime 0070  
                                       ?_ADCC_ThresholdISR_mTouch 0070  
                                  __end_of_EUSART_SetErrorHandler 0903  
                                     ?_MTOUCH_Sensor_isCalibrated 0070  
                Sensor_FrequencyHopping_Autotune_Process@variance 0058  
                                    Sensor_scheduleNextScan@state 0053  
                            __end_of_EUSART_SetRxInterruptHandler 091E  
                                    _EUSART_SetRxInterruptHandler 0915  
                                 __end_of_Button_State_NotPressed 0526  
                                              _EUSART_Receive_ISR 0E8E  
                                         _Sensor_FrequencyHopping 08D2  
                   EUSART_SetFramingErrorHandler@interruptHandler 004C  
                                         ??_MTOUCH_Sensor_Service 007A  
                                    __end_of_Sensor_Sampled_Reset 08E9  
                                 __end_of_MTOUCH_Sensor_isEnabled 0ACC  
                                                   __pstringtext1 1000  
                                                   __pstringtext2 1010  
                                 Sensor_scheduleNextScan@skipScan 0054  
                               i1Sensor_scheduleNextScan@skipScan 0078  
                              __end_of_MTOUCH_Button_Baseline_Get 0A65  
                                      _MTOUCH_Button_Baseline_Get 0A51  
                                             ?_EUSART_Receive_ISR 0070  
                                   ??_MTOUCH_Button_InitializeAll 0056  
                                        ??_Button_DefaultCallback 004D  
                                   ??_MTOUCH_Sensor_InitializeAll 0056  
                                 MTOUCH_Button_Deviation_Get@name 004D  
                                          ??_MTOUCH_Sensor_Enable 0050  
       Sensor_FrequencyHopping_Autotune_Process@newfrequencyFound 0057  
                               Sensor_isCalibratingAcqTime@sensor 004C  
                             i1Sensor_isCalibratingAcqTime@sensor 0070  
                                        ??_Sensor_DefaultCallback 004D  
                                    __end_of_Sensor_setCalibrated 0949  
                            __end_of_Button_Reading_Update_Helper 0F5A  
                                    _Button_Reading_Update_Helper 0F0D  
                             __end_of_MTOUCH_Button_Threshold_Get 0B24  
                                     _MTOUCH_Button_Threshold_Get 0B0E  
                                    MTOUCH_DataStreamer_Service@i 0059  
                                                      _TX1STAbits 011E  
                                      ?i1_MTOUCH_Sensor_isEnabled 0070  
                                       ?_MTOUCH_Button_ServiceAll 0070  
                                   Button_State_NotPressed@button 0058  
                                              EUSART_Write@txData 004D  
                                  ??_ADCC_SetADTIInterruptHandler 004E  
                                  __end_of_PIN_MANAGER_Initialize 0DAE  
                                               ??_ADCC_Initialize 004E  
                                          _Button_Baseline_Update 05B3  
                                   ?_ADCC_DefaultInterruptHandler 0070  
                                  Button_Baseline_Get_helper@name 0053  
                                        ?_Sensor_scheduleNextScan 0070  
                                 ??_MTOUCH_Sensor_ADCC_Initialize 004E  
                                     MTOUCH_Button_isPressed@name 004D  
                                            ??_EUSART_Receive_ISR 0071  
                                      ??_MTOUCH_Sensor_wasSampled 0050  
